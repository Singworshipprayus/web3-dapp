import {
  __commonJS,
  __esm,
  __export,
  __reExport,
  __require,
  __toCommonJS,
  __toESM
} from "./chunk-256EKJAK.js";

// node_modules/events/events.js
var require_events = __commonJS({
  "node_modules/events/events.js"(exports, module) {
    "use strict";
    var R2 = typeof Reflect === "object" ? Reflect : null;
    var ReflectApply = R2 && typeof R2.apply === "function" ? R2.apply : function ReflectApply2(target, receiver, args) {
      return Function.prototype.apply.call(target, receiver, args);
    };
    var ReflectOwnKeys;
    if (R2 && typeof R2.ownKeys === "function") {
      ReflectOwnKeys = R2.ownKeys;
    } else if (Object.getOwnPropertySymbols) {
      ReflectOwnKeys = function ReflectOwnKeys2(target) {
        return Object.getOwnPropertyNames(target).concat(Object.getOwnPropertySymbols(target));
      };
    } else {
      ReflectOwnKeys = function ReflectOwnKeys2(target) {
        return Object.getOwnPropertyNames(target);
      };
    }
    function ProcessEmitWarning(warning) {
      if (console && console.warn) console.warn(warning);
    }
    var NumberIsNaN = Number.isNaN || function NumberIsNaN2(value) {
      return value !== value;
    };
    function EventEmitter4() {
      EventEmitter4.init.call(this);
    }
    module.exports = EventEmitter4;
    module.exports.once = once;
    EventEmitter4.EventEmitter = EventEmitter4;
    EventEmitter4.prototype._events = void 0;
    EventEmitter4.prototype._eventsCount = 0;
    EventEmitter4.prototype._maxListeners = void 0;
    var defaultMaxListeners = 10;
    function checkListener(listener) {
      if (typeof listener !== "function") {
        throw new TypeError('The "listener" argument must be of type Function. Received type ' + typeof listener);
      }
    }
    Object.defineProperty(EventEmitter4, "defaultMaxListeners", {
      enumerable: true,
      get: function() {
        return defaultMaxListeners;
      },
      set: function(arg) {
        if (typeof arg !== "number" || arg < 0 || NumberIsNaN(arg)) {
          throw new RangeError('The value of "defaultMaxListeners" is out of range. It must be a non-negative number. Received ' + arg + ".");
        }
        defaultMaxListeners = arg;
      }
    });
    EventEmitter4.init = function() {
      if (this._events === void 0 || this._events === Object.getPrototypeOf(this)._events) {
        this._events = /* @__PURE__ */ Object.create(null);
        this._eventsCount = 0;
      }
      this._maxListeners = this._maxListeners || void 0;
    };
    EventEmitter4.prototype.setMaxListeners = function setMaxListeners(n4) {
      if (typeof n4 !== "number" || n4 < 0 || NumberIsNaN(n4)) {
        throw new RangeError('The value of "n" is out of range. It must be a non-negative number. Received ' + n4 + ".");
      }
      this._maxListeners = n4;
      return this;
    };
    function _getMaxListeners(that) {
      if (that._maxListeners === void 0)
        return EventEmitter4.defaultMaxListeners;
      return that._maxListeners;
    }
    EventEmitter4.prototype.getMaxListeners = function getMaxListeners() {
      return _getMaxListeners(this);
    };
    EventEmitter4.prototype.emit = function emit(type) {
      var args = [];
      for (var i3 = 1; i3 < arguments.length; i3++) args.push(arguments[i3]);
      var doError = type === "error";
      var events = this._events;
      if (events !== void 0)
        doError = doError && events.error === void 0;
      else if (!doError)
        return false;
      if (doError) {
        var er3;
        if (args.length > 0)
          er3 = args[0];
        if (er3 instanceof Error) {
          throw er3;
        }
        var err = new Error("Unhandled error." + (er3 ? " (" + er3.message + ")" : ""));
        err.context = er3;
        throw err;
      }
      var handler = events[type];
      if (handler === void 0)
        return false;
      if (typeof handler === "function") {
        ReflectApply(handler, this, args);
      } else {
        var len = handler.length;
        var listeners = arrayClone(handler, len);
        for (var i3 = 0; i3 < len; ++i3)
          ReflectApply(listeners[i3], this, args);
      }
      return true;
    };
    function _addListener(target, type, listener, prepend) {
      var m4;
      var events;
      var existing;
      checkListener(listener);
      events = target._events;
      if (events === void 0) {
        events = target._events = /* @__PURE__ */ Object.create(null);
        target._eventsCount = 0;
      } else {
        if (events.newListener !== void 0) {
          target.emit(
            "newListener",
            type,
            listener.listener ? listener.listener : listener
          );
          events = target._events;
        }
        existing = events[type];
      }
      if (existing === void 0) {
        existing = events[type] = listener;
        ++target._eventsCount;
      } else {
        if (typeof existing === "function") {
          existing = events[type] = prepend ? [listener, existing] : [existing, listener];
        } else if (prepend) {
          existing.unshift(listener);
        } else {
          existing.push(listener);
        }
        m4 = _getMaxListeners(target);
        if (m4 > 0 && existing.length > m4 && !existing.warned) {
          existing.warned = true;
          var w5 = new Error("Possible EventEmitter memory leak detected. " + existing.length + " " + String(type) + " listeners added. Use emitter.setMaxListeners() to increase limit");
          w5.name = "MaxListenersExceededWarning";
          w5.emitter = target;
          w5.type = type;
          w5.count = existing.length;
          ProcessEmitWarning(w5);
        }
      }
      return target;
    }
    EventEmitter4.prototype.addListener = function addListener(type, listener) {
      return _addListener(this, type, listener, false);
    };
    EventEmitter4.prototype.on = EventEmitter4.prototype.addListener;
    EventEmitter4.prototype.prependListener = function prependListener(type, listener) {
      return _addListener(this, type, listener, true);
    };
    function onceWrapper() {
      if (!this.fired) {
        this.target.removeListener(this.type, this.wrapFn);
        this.fired = true;
        if (arguments.length === 0)
          return this.listener.call(this.target);
        return this.listener.apply(this.target, arguments);
      }
    }
    function _onceWrap(target, type, listener) {
      var state = { fired: false, wrapFn: void 0, target, type, listener };
      var wrapped = onceWrapper.bind(state);
      wrapped.listener = listener;
      state.wrapFn = wrapped;
      return wrapped;
    }
    EventEmitter4.prototype.once = function once2(type, listener) {
      checkListener(listener);
      this.on(type, _onceWrap(this, type, listener));
      return this;
    };
    EventEmitter4.prototype.prependOnceListener = function prependOnceListener(type, listener) {
      checkListener(listener);
      this.prependListener(type, _onceWrap(this, type, listener));
      return this;
    };
    EventEmitter4.prototype.removeListener = function removeListener(type, listener) {
      var list, events, position, i3, originalListener;
      checkListener(listener);
      events = this._events;
      if (events === void 0)
        return this;
      list = events[type];
      if (list === void 0)
        return this;
      if (list === listener || list.listener === listener) {
        if (--this._eventsCount === 0)
          this._events = /* @__PURE__ */ Object.create(null);
        else {
          delete events[type];
          if (events.removeListener)
            this.emit("removeListener", type, list.listener || listener);
        }
      } else if (typeof list !== "function") {
        position = -1;
        for (i3 = list.length - 1; i3 >= 0; i3--) {
          if (list[i3] === listener || list[i3].listener === listener) {
            originalListener = list[i3].listener;
            position = i3;
            break;
          }
        }
        if (position < 0)
          return this;
        if (position === 0)
          list.shift();
        else {
          spliceOne(list, position);
        }
        if (list.length === 1)
          events[type] = list[0];
        if (events.removeListener !== void 0)
          this.emit("removeListener", type, originalListener || listener);
      }
      return this;
    };
    EventEmitter4.prototype.off = EventEmitter4.prototype.removeListener;
    EventEmitter4.prototype.removeAllListeners = function removeAllListeners(type) {
      var listeners, events, i3;
      events = this._events;
      if (events === void 0)
        return this;
      if (events.removeListener === void 0) {
        if (arguments.length === 0) {
          this._events = /* @__PURE__ */ Object.create(null);
          this._eventsCount = 0;
        } else if (events[type] !== void 0) {
          if (--this._eventsCount === 0)
            this._events = /* @__PURE__ */ Object.create(null);
          else
            delete events[type];
        }
        return this;
      }
      if (arguments.length === 0) {
        var keys2 = Object.keys(events);
        var key;
        for (i3 = 0; i3 < keys2.length; ++i3) {
          key = keys2[i3];
          if (key === "removeListener") continue;
          this.removeAllListeners(key);
        }
        this.removeAllListeners("removeListener");
        this._events = /* @__PURE__ */ Object.create(null);
        this._eventsCount = 0;
        return this;
      }
      listeners = events[type];
      if (typeof listeners === "function") {
        this.removeListener(type, listeners);
      } else if (listeners !== void 0) {
        for (i3 = listeners.length - 1; i3 >= 0; i3--) {
          this.removeListener(type, listeners[i3]);
        }
      }
      return this;
    };
    function _listeners(target, type, unwrap) {
      var events = target._events;
      if (events === void 0)
        return [];
      var evlistener = events[type];
      if (evlistener === void 0)
        return [];
      if (typeof evlistener === "function")
        return unwrap ? [evlistener.listener || evlistener] : [evlistener];
      return unwrap ? unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);
    }
    EventEmitter4.prototype.listeners = function listeners(type) {
      return _listeners(this, type, true);
    };
    EventEmitter4.prototype.rawListeners = function rawListeners(type) {
      return _listeners(this, type, false);
    };
    EventEmitter4.listenerCount = function(emitter, type) {
      if (typeof emitter.listenerCount === "function") {
        return emitter.listenerCount(type);
      } else {
        return listenerCount.call(emitter, type);
      }
    };
    EventEmitter4.prototype.listenerCount = listenerCount;
    function listenerCount(type) {
      var events = this._events;
      if (events !== void 0) {
        var evlistener = events[type];
        if (typeof evlistener === "function") {
          return 1;
        } else if (evlistener !== void 0) {
          return evlistener.length;
        }
      }
      return 0;
    }
    EventEmitter4.prototype.eventNames = function eventNames() {
      return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];
    };
    function arrayClone(arr, n4) {
      var copy = new Array(n4);
      for (var i3 = 0; i3 < n4; ++i3)
        copy[i3] = arr[i3];
      return copy;
    }
    function spliceOne(list, index) {
      for (; index + 1 < list.length; index++)
        list[index] = list[index + 1];
      list.pop();
    }
    function unwrapListeners(arr) {
      var ret = new Array(arr.length);
      for (var i3 = 0; i3 < ret.length; ++i3) {
        ret[i3] = arr[i3].listener || arr[i3];
      }
      return ret;
    }
    function once(emitter, name2) {
      return new Promise(function(resolve, reject) {
        function errorListener(err) {
          emitter.removeListener(name2, resolver);
          reject(err);
        }
        function resolver() {
          if (typeof emitter.removeListener === "function") {
            emitter.removeListener("error", errorListener);
          }
          resolve([].slice.call(arguments));
        }
        ;
        eventTargetAgnosticAddListener(emitter, name2, resolver, { once: true });
        if (name2 !== "error") {
          addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });
        }
      });
    }
    function addErrorHandlerIfEventEmitter(emitter, handler, flags) {
      if (typeof emitter.on === "function") {
        eventTargetAgnosticAddListener(emitter, "error", handler, flags);
      }
    }
    function eventTargetAgnosticAddListener(emitter, name2, listener, flags) {
      if (typeof emitter.on === "function") {
        if (flags.once) {
          emitter.once(name2, listener);
        } else {
          emitter.on(name2, listener);
        }
      } else if (typeof emitter.addEventListener === "function") {
        emitter.addEventListener(name2, function wrapListener(arg) {
          if (flags.once) {
            emitter.removeEventListener(name2, wrapListener);
          }
          listener(arg);
        });
      } else {
        throw new TypeError('The "emitter" argument must be of type EventEmitter. Received type ' + typeof emitter);
      }
    }
  }
});

// node_modules/@stablelib/int/lib/int.js
var require_int = __commonJS({
  "node_modules/@stablelib/int/lib/int.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function imulShim(a2, b5) {
      var ah = a2 >>> 16 & 65535, al = a2 & 65535;
      var bh = b5 >>> 16 & 65535, bl = b5 & 65535;
      return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
    }
    exports.mul = Math.imul || imulShim;
    function add(a2, b5) {
      return a2 + b5 | 0;
    }
    exports.add = add;
    function sub(a2, b5) {
      return a2 - b5 | 0;
    }
    exports.sub = sub;
    function rotl(x5, n4) {
      return x5 << n4 | x5 >>> 32 - n4;
    }
    exports.rotl = rotl;
    function rotr(x5, n4) {
      return x5 << 32 - n4 | x5 >>> n4;
    }
    exports.rotr = rotr;
    function isIntegerShim(n4) {
      return typeof n4 === "number" && isFinite(n4) && Math.floor(n4) === n4;
    }
    exports.isInteger = Number.isInteger || isIntegerShim;
    exports.MAX_SAFE_INTEGER = 9007199254740991;
    exports.isSafeInteger = function(n4) {
      return exports.isInteger(n4) && (n4 >= -exports.MAX_SAFE_INTEGER && n4 <= exports.MAX_SAFE_INTEGER);
    };
  }
});

// node_modules/@stablelib/binary/lib/binary.js
var require_binary = __commonJS({
  "node_modules/@stablelib/binary/lib/binary.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var int_1 = require_int();
    function readInt16BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 0] << 8 | array[offset + 1]) << 16 >> 16;
    }
    exports.readInt16BE = readInt16BE;
    function readUint16BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 0] << 8 | array[offset + 1]) >>> 0;
    }
    exports.readUint16BE = readUint16BE;
    function readInt16LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 1] << 8 | array[offset]) << 16 >> 16;
    }
    exports.readInt16LE = readInt16LE;
    function readUint16LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 1] << 8 | array[offset]) >>> 0;
    }
    exports.readUint16LE = readUint16LE;
    function writeUint16BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(2);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 8;
      out[offset + 1] = value >>> 0;
      return out;
    }
    exports.writeUint16BE = writeUint16BE;
    exports.writeInt16BE = writeUint16BE;
    function writeUint16LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(2);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 0;
      out[offset + 1] = value >>> 8;
      return out;
    }
    exports.writeUint16LE = writeUint16LE;
    exports.writeInt16LE = writeUint16LE;
    function readInt32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return array[offset] << 24 | array[offset + 1] << 16 | array[offset + 2] << 8 | array[offset + 3];
    }
    exports.readInt32BE = readInt32BE;
    function readUint32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset] << 24 | array[offset + 1] << 16 | array[offset + 2] << 8 | array[offset + 3]) >>> 0;
    }
    exports.readUint32BE = readUint32BE;
    function readInt32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return array[offset + 3] << 24 | array[offset + 2] << 16 | array[offset + 1] << 8 | array[offset];
    }
    exports.readInt32LE = readInt32LE;
    function readUint32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      return (array[offset + 3] << 24 | array[offset + 2] << 16 | array[offset + 1] << 8 | array[offset]) >>> 0;
    }
    exports.readUint32LE = readUint32LE;
    function writeUint32BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 24;
      out[offset + 1] = value >>> 16;
      out[offset + 2] = value >>> 8;
      out[offset + 3] = value >>> 0;
      return out;
    }
    exports.writeUint32BE = writeUint32BE;
    exports.writeInt32BE = writeUint32BE;
    function writeUint32LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      out[offset + 0] = value >>> 0;
      out[offset + 1] = value >>> 8;
      out[offset + 2] = value >>> 16;
      out[offset + 3] = value >>> 24;
      return out;
    }
    exports.writeUint32LE = writeUint32LE;
    exports.writeInt32LE = writeUint32LE;
    function readInt64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var hi = readInt32BE(array, offset);
      var lo2 = readInt32BE(array, offset + 4);
      return hi * 4294967296 + lo2 - (lo2 >> 31) * 4294967296;
    }
    exports.readInt64BE = readInt64BE;
    function readUint64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var hi = readUint32BE(array, offset);
      var lo2 = readUint32BE(array, offset + 4);
      return hi * 4294967296 + lo2;
    }
    exports.readUint64BE = readUint64BE;
    function readInt64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var lo2 = readInt32LE(array, offset);
      var hi = readInt32LE(array, offset + 4);
      return hi * 4294967296 + lo2 - (lo2 >> 31) * 4294967296;
    }
    exports.readInt64LE = readInt64LE;
    function readUint64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var lo2 = readUint32LE(array, offset);
      var hi = readUint32LE(array, offset + 4);
      return hi * 4294967296 + lo2;
    }
    exports.readUint64LE = readUint64LE;
    function writeUint64BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      writeUint32BE(value / 4294967296 >>> 0, out, offset);
      writeUint32BE(value >>> 0, out, offset + 4);
      return out;
    }
    exports.writeUint64BE = writeUint64BE;
    exports.writeInt64BE = writeUint64BE;
    function writeUint64LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      writeUint32LE(value >>> 0, out, offset);
      writeUint32LE(value / 4294967296 >>> 0, out, offset + 4);
      return out;
    }
    exports.writeUint64LE = writeUint64LE;
    exports.writeInt64LE = writeUint64LE;
    function readUintBE(bitLength, array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("readUintBE supports only bitLengths divisible by 8");
      }
      if (bitLength / 8 > array.length - offset) {
        throw new Error("readUintBE: array is too short for the given bitLength");
      }
      var result = 0;
      var mul = 1;
      for (var i3 = bitLength / 8 + offset - 1; i3 >= offset; i3--) {
        result += array[i3] * mul;
        mul *= 256;
      }
      return result;
    }
    exports.readUintBE = readUintBE;
    function readUintLE(bitLength, array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("readUintLE supports only bitLengths divisible by 8");
      }
      if (bitLength / 8 > array.length - offset) {
        throw new Error("readUintLE: array is too short for the given bitLength");
      }
      var result = 0;
      var mul = 1;
      for (var i3 = offset; i3 < offset + bitLength / 8; i3++) {
        result += array[i3] * mul;
        mul *= 256;
      }
      return result;
    }
    exports.readUintLE = readUintLE;
    function writeUintBE(bitLength, value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(bitLength / 8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("writeUintBE supports only bitLengths divisible by 8");
      }
      if (!int_1.isSafeInteger(value)) {
        throw new Error("writeUintBE value must be an integer");
      }
      var div = 1;
      for (var i3 = bitLength / 8 + offset - 1; i3 >= offset; i3--) {
        out[i3] = value / div & 255;
        div *= 256;
      }
      return out;
    }
    exports.writeUintBE = writeUintBE;
    function writeUintLE(bitLength, value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(bitLength / 8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      if (bitLength % 8 !== 0) {
        throw new Error("writeUintLE supports only bitLengths divisible by 8");
      }
      if (!int_1.isSafeInteger(value)) {
        throw new Error("writeUintLE value must be an integer");
      }
      var div = 1;
      for (var i3 = offset; i3 < offset + bitLength / 8; i3++) {
        out[i3] = value / div & 255;
        div *= 256;
      }
      return out;
    }
    exports.writeUintLE = writeUintLE;
    function readFloat32BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat32(offset);
    }
    exports.readFloat32BE = readFloat32BE;
    function readFloat32LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat32(offset, true);
    }
    exports.readFloat32LE = readFloat32LE;
    function readFloat64BE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat64(offset);
    }
    exports.readFloat64BE = readFloat64BE;
    function readFloat64LE(array, offset) {
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(array.buffer, array.byteOffset, array.byteLength);
      return view.getFloat64(offset, true);
    }
    exports.readFloat64LE = readFloat64LE;
    function writeFloat32BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat32(offset, value);
      return out;
    }
    exports.writeFloat32BE = writeFloat32BE;
    function writeFloat32LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(4);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat32(offset, value, true);
      return out;
    }
    exports.writeFloat32LE = writeFloat32LE;
    function writeFloat64BE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat64(offset, value);
      return out;
    }
    exports.writeFloat64BE = writeFloat64BE;
    function writeFloat64LE(value, out, offset) {
      if (out === void 0) {
        out = new Uint8Array(8);
      }
      if (offset === void 0) {
        offset = 0;
      }
      var view = new DataView(out.buffer, out.byteOffset, out.byteLength);
      view.setFloat64(offset, value, true);
      return out;
    }
    exports.writeFloat64LE = writeFloat64LE;
  }
});

// node_modules/@stablelib/wipe/lib/wipe.js
var require_wipe = __commonJS({
  "node_modules/@stablelib/wipe/lib/wipe.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function wipe(array) {
      for (var i3 = 0; i3 < array.length; i3++) {
        array[i3] = 0;
      }
      return array;
    }
    exports.wipe = wipe;
  }
});

// node_modules/@stablelib/chacha/lib/chacha.js
var require_chacha = __commonJS({
  "node_modules/@stablelib/chacha/lib/chacha.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    var ROUNDS = 20;
    function core(out, input, key) {
      var j0 = 1634760805;
      var j1 = 857760878;
      var j22 = 2036477234;
      var j32 = 1797285236;
      var j42 = key[3] << 24 | key[2] << 16 | key[1] << 8 | key[0];
      var j52 = key[7] << 24 | key[6] << 16 | key[5] << 8 | key[4];
      var j62 = key[11] << 24 | key[10] << 16 | key[9] << 8 | key[8];
      var j7 = key[15] << 24 | key[14] << 16 | key[13] << 8 | key[12];
      var j8 = key[19] << 24 | key[18] << 16 | key[17] << 8 | key[16];
      var j9 = key[23] << 24 | key[22] << 16 | key[21] << 8 | key[20];
      var j10 = key[27] << 24 | key[26] << 16 | key[25] << 8 | key[24];
      var j11 = key[31] << 24 | key[30] << 16 | key[29] << 8 | key[28];
      var j12 = input[3] << 24 | input[2] << 16 | input[1] << 8 | input[0];
      var j13 = input[7] << 24 | input[6] << 16 | input[5] << 8 | input[4];
      var j14 = input[11] << 24 | input[10] << 16 | input[9] << 8 | input[8];
      var j15 = input[15] << 24 | input[14] << 16 | input[13] << 8 | input[12];
      var x0 = j0;
      var x1 = j1;
      var x22 = j22;
      var x32 = j32;
      var x42 = j42;
      var x5 = j52;
      var x6 = j62;
      var x7 = j7;
      var x8 = j8;
      var x9 = j9;
      var x10 = j10;
      var x11 = j11;
      var x12 = j12;
      var x13 = j13;
      var x14 = j14;
      var x15 = j15;
      for (var i3 = 0; i3 < ROUNDS; i3 += 2) {
        x0 = x0 + x42 | 0;
        x12 ^= x0;
        x12 = x12 >>> 32 - 16 | x12 << 16;
        x8 = x8 + x12 | 0;
        x42 ^= x8;
        x42 = x42 >>> 32 - 12 | x42 << 12;
        x1 = x1 + x5 | 0;
        x13 ^= x1;
        x13 = x13 >>> 32 - 16 | x13 << 16;
        x9 = x9 + x13 | 0;
        x5 ^= x9;
        x5 = x5 >>> 32 - 12 | x5 << 12;
        x22 = x22 + x6 | 0;
        x14 ^= x22;
        x14 = x14 >>> 32 - 16 | x14 << 16;
        x10 = x10 + x14 | 0;
        x6 ^= x10;
        x6 = x6 >>> 32 - 12 | x6 << 12;
        x32 = x32 + x7 | 0;
        x15 ^= x32;
        x15 = x15 >>> 32 - 16 | x15 << 16;
        x11 = x11 + x15 | 0;
        x7 ^= x11;
        x7 = x7 >>> 32 - 12 | x7 << 12;
        x22 = x22 + x6 | 0;
        x14 ^= x22;
        x14 = x14 >>> 32 - 8 | x14 << 8;
        x10 = x10 + x14 | 0;
        x6 ^= x10;
        x6 = x6 >>> 32 - 7 | x6 << 7;
        x32 = x32 + x7 | 0;
        x15 ^= x32;
        x15 = x15 >>> 32 - 8 | x15 << 8;
        x11 = x11 + x15 | 0;
        x7 ^= x11;
        x7 = x7 >>> 32 - 7 | x7 << 7;
        x1 = x1 + x5 | 0;
        x13 ^= x1;
        x13 = x13 >>> 32 - 8 | x13 << 8;
        x9 = x9 + x13 | 0;
        x5 ^= x9;
        x5 = x5 >>> 32 - 7 | x5 << 7;
        x0 = x0 + x42 | 0;
        x12 ^= x0;
        x12 = x12 >>> 32 - 8 | x12 << 8;
        x8 = x8 + x12 | 0;
        x42 ^= x8;
        x42 = x42 >>> 32 - 7 | x42 << 7;
        x0 = x0 + x5 | 0;
        x15 ^= x0;
        x15 = x15 >>> 32 - 16 | x15 << 16;
        x10 = x10 + x15 | 0;
        x5 ^= x10;
        x5 = x5 >>> 32 - 12 | x5 << 12;
        x1 = x1 + x6 | 0;
        x12 ^= x1;
        x12 = x12 >>> 32 - 16 | x12 << 16;
        x11 = x11 + x12 | 0;
        x6 ^= x11;
        x6 = x6 >>> 32 - 12 | x6 << 12;
        x22 = x22 + x7 | 0;
        x13 ^= x22;
        x13 = x13 >>> 32 - 16 | x13 << 16;
        x8 = x8 + x13 | 0;
        x7 ^= x8;
        x7 = x7 >>> 32 - 12 | x7 << 12;
        x32 = x32 + x42 | 0;
        x14 ^= x32;
        x14 = x14 >>> 32 - 16 | x14 << 16;
        x9 = x9 + x14 | 0;
        x42 ^= x9;
        x42 = x42 >>> 32 - 12 | x42 << 12;
        x22 = x22 + x7 | 0;
        x13 ^= x22;
        x13 = x13 >>> 32 - 8 | x13 << 8;
        x8 = x8 + x13 | 0;
        x7 ^= x8;
        x7 = x7 >>> 32 - 7 | x7 << 7;
        x32 = x32 + x42 | 0;
        x14 ^= x32;
        x14 = x14 >>> 32 - 8 | x14 << 8;
        x9 = x9 + x14 | 0;
        x42 ^= x9;
        x42 = x42 >>> 32 - 7 | x42 << 7;
        x1 = x1 + x6 | 0;
        x12 ^= x1;
        x12 = x12 >>> 32 - 8 | x12 << 8;
        x11 = x11 + x12 | 0;
        x6 ^= x11;
        x6 = x6 >>> 32 - 7 | x6 << 7;
        x0 = x0 + x5 | 0;
        x15 ^= x0;
        x15 = x15 >>> 32 - 8 | x15 << 8;
        x10 = x10 + x15 | 0;
        x5 ^= x10;
        x5 = x5 >>> 32 - 7 | x5 << 7;
      }
      binary_1.writeUint32LE(x0 + j0 | 0, out, 0);
      binary_1.writeUint32LE(x1 + j1 | 0, out, 4);
      binary_1.writeUint32LE(x22 + j22 | 0, out, 8);
      binary_1.writeUint32LE(x32 + j32 | 0, out, 12);
      binary_1.writeUint32LE(x42 + j42 | 0, out, 16);
      binary_1.writeUint32LE(x5 + j52 | 0, out, 20);
      binary_1.writeUint32LE(x6 + j62 | 0, out, 24);
      binary_1.writeUint32LE(x7 + j7 | 0, out, 28);
      binary_1.writeUint32LE(x8 + j8 | 0, out, 32);
      binary_1.writeUint32LE(x9 + j9 | 0, out, 36);
      binary_1.writeUint32LE(x10 + j10 | 0, out, 40);
      binary_1.writeUint32LE(x11 + j11 | 0, out, 44);
      binary_1.writeUint32LE(x12 + j12 | 0, out, 48);
      binary_1.writeUint32LE(x13 + j13 | 0, out, 52);
      binary_1.writeUint32LE(x14 + j14 | 0, out, 56);
      binary_1.writeUint32LE(x15 + j15 | 0, out, 60);
    }
    function streamXOR(key, nonce, src2, dst, nonceInplaceCounterLength) {
      if (nonceInplaceCounterLength === void 0) {
        nonceInplaceCounterLength = 0;
      }
      if (key.length !== 32) {
        throw new Error("ChaCha: key size must be 32 bytes");
      }
      if (dst.length < src2.length) {
        throw new Error("ChaCha: destination is shorter than source");
      }
      var nc;
      var counterLength;
      if (nonceInplaceCounterLength === 0) {
        if (nonce.length !== 8 && nonce.length !== 12) {
          throw new Error("ChaCha nonce must be 8 or 12 bytes");
        }
        nc = new Uint8Array(16);
        counterLength = nc.length - nonce.length;
        nc.set(nonce, counterLength);
      } else {
        if (nonce.length !== 16) {
          throw new Error("ChaCha nonce with counter must be 16 bytes");
        }
        nc = nonce;
        counterLength = nonceInplaceCounterLength;
      }
      var block = new Uint8Array(64);
      for (var i3 = 0; i3 < src2.length; i3 += 64) {
        core(block, nc, key);
        for (var j7 = i3; j7 < i3 + 64 && j7 < src2.length; j7++) {
          dst[j7] = src2[j7] ^ block[j7 - i3];
        }
        incrementCounter(nc, 0, counterLength);
      }
      wipe_1.wipe(block);
      if (nonceInplaceCounterLength === 0) {
        wipe_1.wipe(nc);
      }
      return dst;
    }
    exports.streamXOR = streamXOR;
    function stream(key, nonce, dst, nonceInplaceCounterLength) {
      if (nonceInplaceCounterLength === void 0) {
        nonceInplaceCounterLength = 0;
      }
      wipe_1.wipe(dst);
      return streamXOR(key, nonce, dst, dst, nonceInplaceCounterLength);
    }
    exports.stream = stream;
    function incrementCounter(counter, pos, len) {
      var carry = 1;
      while (len--) {
        carry = carry + (counter[pos] & 255) | 0;
        counter[pos] = carry & 255;
        carry >>>= 8;
        pos++;
      }
      if (carry > 0) {
        throw new Error("ChaCha: counter overflow");
      }
    }
  }
});

// node_modules/@stablelib/constant-time/lib/constant-time.js
var require_constant_time = __commonJS({
  "node_modules/@stablelib/constant-time/lib/constant-time.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function select(subject, resultIfOne, resultIfZero) {
      return ~(subject - 1) & resultIfOne | subject - 1 & resultIfZero;
    }
    exports.select = select;
    function lessOrEqual(a2, b5) {
      return (a2 | 0) - (b5 | 0) - 1 >>> 31 & 1;
    }
    exports.lessOrEqual = lessOrEqual;
    function compare2(a2, b5) {
      if (a2.length !== b5.length) {
        return 0;
      }
      var result = 0;
      for (var i3 = 0; i3 < a2.length; i3++) {
        result |= a2[i3] ^ b5[i3];
      }
      return 1 & result - 1 >>> 8;
    }
    exports.compare = compare2;
    function equal(a2, b5) {
      if (a2.length === 0 || b5.length === 0) {
        return false;
      }
      return compare2(a2, b5) !== 0;
    }
    exports.equal = equal;
  }
});

// node_modules/@stablelib/poly1305/lib/poly1305.js
var require_poly1305 = __commonJS({
  "node_modules/@stablelib/poly1305/lib/poly1305.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var constant_time_1 = require_constant_time();
    var wipe_1 = require_wipe();
    exports.DIGEST_LENGTH = 16;
    var Poly1305 = (
      /** @class */
      function() {
        function Poly13052(key) {
          this.digestLength = exports.DIGEST_LENGTH;
          this._buffer = new Uint8Array(16);
          this._r = new Uint16Array(10);
          this._h = new Uint16Array(10);
          this._pad = new Uint16Array(8);
          this._leftover = 0;
          this._fin = 0;
          this._finished = false;
          var t0 = key[0] | key[1] << 8;
          this._r[0] = t0 & 8191;
          var t1 = key[2] | key[3] << 8;
          this._r[1] = (t0 >>> 13 | t1 << 3) & 8191;
          var t2 = key[4] | key[5] << 8;
          this._r[2] = (t1 >>> 10 | t2 << 6) & 7939;
          var t3 = key[6] | key[7] << 8;
          this._r[3] = (t2 >>> 7 | t3 << 9) & 8191;
          var t4 = key[8] | key[9] << 8;
          this._r[4] = (t3 >>> 4 | t4 << 12) & 255;
          this._r[5] = t4 >>> 1 & 8190;
          var t5 = key[10] | key[11] << 8;
          this._r[6] = (t4 >>> 14 | t5 << 2) & 8191;
          var t6 = key[12] | key[13] << 8;
          this._r[7] = (t5 >>> 11 | t6 << 5) & 8065;
          var t7 = key[14] | key[15] << 8;
          this._r[8] = (t6 >>> 8 | t7 << 8) & 8191;
          this._r[9] = t7 >>> 5 & 127;
          this._pad[0] = key[16] | key[17] << 8;
          this._pad[1] = key[18] | key[19] << 8;
          this._pad[2] = key[20] | key[21] << 8;
          this._pad[3] = key[22] | key[23] << 8;
          this._pad[4] = key[24] | key[25] << 8;
          this._pad[5] = key[26] | key[27] << 8;
          this._pad[6] = key[28] | key[29] << 8;
          this._pad[7] = key[30] | key[31] << 8;
        }
        Poly13052.prototype._blocks = function(m4, mpos, bytes) {
          var hibit = this._fin ? 0 : 1 << 11;
          var h0 = this._h[0], h1 = this._h[1], h22 = this._h[2], h32 = this._h[3], h4 = this._h[4], h5 = this._h[5], h6 = this._h[6], h7 = this._h[7], h8 = this._h[8], h9 = this._h[9];
          var r0 = this._r[0], r1 = this._r[1], r2 = this._r[2], r3 = this._r[3], r4 = this._r[4], r5 = this._r[5], r6 = this._r[6], r7 = this._r[7], r8 = this._r[8], r9 = this._r[9];
          while (bytes >= 16) {
            var t0 = m4[mpos + 0] | m4[mpos + 1] << 8;
            h0 += t0 & 8191;
            var t1 = m4[mpos + 2] | m4[mpos + 3] << 8;
            h1 += (t0 >>> 13 | t1 << 3) & 8191;
            var t2 = m4[mpos + 4] | m4[mpos + 5] << 8;
            h22 += (t1 >>> 10 | t2 << 6) & 8191;
            var t3 = m4[mpos + 6] | m4[mpos + 7] << 8;
            h32 += (t2 >>> 7 | t3 << 9) & 8191;
            var t4 = m4[mpos + 8] | m4[mpos + 9] << 8;
            h4 += (t3 >>> 4 | t4 << 12) & 8191;
            h5 += t4 >>> 1 & 8191;
            var t5 = m4[mpos + 10] | m4[mpos + 11] << 8;
            h6 += (t4 >>> 14 | t5 << 2) & 8191;
            var t6 = m4[mpos + 12] | m4[mpos + 13] << 8;
            h7 += (t5 >>> 11 | t6 << 5) & 8191;
            var t7 = m4[mpos + 14] | m4[mpos + 15] << 8;
            h8 += (t6 >>> 8 | t7 << 8) & 8191;
            h9 += t7 >>> 5 | hibit;
            var c5 = 0;
            var d0 = c5;
            d0 += h0 * r0;
            d0 += h1 * (5 * r9);
            d0 += h22 * (5 * r8);
            d0 += h32 * (5 * r7);
            d0 += h4 * (5 * r6);
            c5 = d0 >>> 13;
            d0 &= 8191;
            d0 += h5 * (5 * r5);
            d0 += h6 * (5 * r4);
            d0 += h7 * (5 * r3);
            d0 += h8 * (5 * r2);
            d0 += h9 * (5 * r1);
            c5 += d0 >>> 13;
            d0 &= 8191;
            var d1 = c5;
            d1 += h0 * r1;
            d1 += h1 * r0;
            d1 += h22 * (5 * r9);
            d1 += h32 * (5 * r8);
            d1 += h4 * (5 * r7);
            c5 = d1 >>> 13;
            d1 &= 8191;
            d1 += h5 * (5 * r6);
            d1 += h6 * (5 * r5);
            d1 += h7 * (5 * r4);
            d1 += h8 * (5 * r3);
            d1 += h9 * (5 * r2);
            c5 += d1 >>> 13;
            d1 &= 8191;
            var d22 = c5;
            d22 += h0 * r2;
            d22 += h1 * r1;
            d22 += h22 * r0;
            d22 += h32 * (5 * r9);
            d22 += h4 * (5 * r8);
            c5 = d22 >>> 13;
            d22 &= 8191;
            d22 += h5 * (5 * r7);
            d22 += h6 * (5 * r6);
            d22 += h7 * (5 * r5);
            d22 += h8 * (5 * r4);
            d22 += h9 * (5 * r3);
            c5 += d22 >>> 13;
            d22 &= 8191;
            var d3 = c5;
            d3 += h0 * r3;
            d3 += h1 * r2;
            d3 += h22 * r1;
            d3 += h32 * r0;
            d3 += h4 * (5 * r9);
            c5 = d3 >>> 13;
            d3 &= 8191;
            d3 += h5 * (5 * r8);
            d3 += h6 * (5 * r7);
            d3 += h7 * (5 * r6);
            d3 += h8 * (5 * r5);
            d3 += h9 * (5 * r4);
            c5 += d3 >>> 13;
            d3 &= 8191;
            var d4 = c5;
            d4 += h0 * r4;
            d4 += h1 * r3;
            d4 += h22 * r2;
            d4 += h32 * r1;
            d4 += h4 * r0;
            c5 = d4 >>> 13;
            d4 &= 8191;
            d4 += h5 * (5 * r9);
            d4 += h6 * (5 * r8);
            d4 += h7 * (5 * r7);
            d4 += h8 * (5 * r6);
            d4 += h9 * (5 * r5);
            c5 += d4 >>> 13;
            d4 &= 8191;
            var d5 = c5;
            d5 += h0 * r5;
            d5 += h1 * r4;
            d5 += h22 * r3;
            d5 += h32 * r2;
            d5 += h4 * r1;
            c5 = d5 >>> 13;
            d5 &= 8191;
            d5 += h5 * r0;
            d5 += h6 * (5 * r9);
            d5 += h7 * (5 * r8);
            d5 += h8 * (5 * r7);
            d5 += h9 * (5 * r6);
            c5 += d5 >>> 13;
            d5 &= 8191;
            var d6 = c5;
            d6 += h0 * r6;
            d6 += h1 * r5;
            d6 += h22 * r4;
            d6 += h32 * r3;
            d6 += h4 * r2;
            c5 = d6 >>> 13;
            d6 &= 8191;
            d6 += h5 * r1;
            d6 += h6 * r0;
            d6 += h7 * (5 * r9);
            d6 += h8 * (5 * r8);
            d6 += h9 * (5 * r7);
            c5 += d6 >>> 13;
            d6 &= 8191;
            var d7 = c5;
            d7 += h0 * r7;
            d7 += h1 * r6;
            d7 += h22 * r5;
            d7 += h32 * r4;
            d7 += h4 * r3;
            c5 = d7 >>> 13;
            d7 &= 8191;
            d7 += h5 * r2;
            d7 += h6 * r1;
            d7 += h7 * r0;
            d7 += h8 * (5 * r9);
            d7 += h9 * (5 * r8);
            c5 += d7 >>> 13;
            d7 &= 8191;
            var d8 = c5;
            d8 += h0 * r8;
            d8 += h1 * r7;
            d8 += h22 * r6;
            d8 += h32 * r5;
            d8 += h4 * r4;
            c5 = d8 >>> 13;
            d8 &= 8191;
            d8 += h5 * r3;
            d8 += h6 * r2;
            d8 += h7 * r1;
            d8 += h8 * r0;
            d8 += h9 * (5 * r9);
            c5 += d8 >>> 13;
            d8 &= 8191;
            var d9 = c5;
            d9 += h0 * r9;
            d9 += h1 * r8;
            d9 += h22 * r7;
            d9 += h32 * r6;
            d9 += h4 * r5;
            c5 = d9 >>> 13;
            d9 &= 8191;
            d9 += h5 * r4;
            d9 += h6 * r3;
            d9 += h7 * r2;
            d9 += h8 * r1;
            d9 += h9 * r0;
            c5 += d9 >>> 13;
            d9 &= 8191;
            c5 = (c5 << 2) + c5 | 0;
            c5 = c5 + d0 | 0;
            d0 = c5 & 8191;
            c5 = c5 >>> 13;
            d1 += c5;
            h0 = d0;
            h1 = d1;
            h22 = d22;
            h32 = d3;
            h4 = d4;
            h5 = d5;
            h6 = d6;
            h7 = d7;
            h8 = d8;
            h9 = d9;
            mpos += 16;
            bytes -= 16;
          }
          this._h[0] = h0;
          this._h[1] = h1;
          this._h[2] = h22;
          this._h[3] = h32;
          this._h[4] = h4;
          this._h[5] = h5;
          this._h[6] = h6;
          this._h[7] = h7;
          this._h[8] = h8;
          this._h[9] = h9;
        };
        Poly13052.prototype.finish = function(mac, macpos) {
          if (macpos === void 0) {
            macpos = 0;
          }
          var g6 = new Uint16Array(10);
          var c5;
          var mask;
          var f4;
          var i3;
          if (this._leftover) {
            i3 = this._leftover;
            this._buffer[i3++] = 1;
            for (; i3 < 16; i3++) {
              this._buffer[i3] = 0;
            }
            this._fin = 1;
            this._blocks(this._buffer, 0, 16);
          }
          c5 = this._h[1] >>> 13;
          this._h[1] &= 8191;
          for (i3 = 2; i3 < 10; i3++) {
            this._h[i3] += c5;
            c5 = this._h[i3] >>> 13;
            this._h[i3] &= 8191;
          }
          this._h[0] += c5 * 5;
          c5 = this._h[0] >>> 13;
          this._h[0] &= 8191;
          this._h[1] += c5;
          c5 = this._h[1] >>> 13;
          this._h[1] &= 8191;
          this._h[2] += c5;
          g6[0] = this._h[0] + 5;
          c5 = g6[0] >>> 13;
          g6[0] &= 8191;
          for (i3 = 1; i3 < 10; i3++) {
            g6[i3] = this._h[i3] + c5;
            c5 = g6[i3] >>> 13;
            g6[i3] &= 8191;
          }
          g6[9] -= 1 << 13;
          mask = (c5 ^ 1) - 1;
          for (i3 = 0; i3 < 10; i3++) {
            g6[i3] &= mask;
          }
          mask = ~mask;
          for (i3 = 0; i3 < 10; i3++) {
            this._h[i3] = this._h[i3] & mask | g6[i3];
          }
          this._h[0] = (this._h[0] | this._h[1] << 13) & 65535;
          this._h[1] = (this._h[1] >>> 3 | this._h[2] << 10) & 65535;
          this._h[2] = (this._h[2] >>> 6 | this._h[3] << 7) & 65535;
          this._h[3] = (this._h[3] >>> 9 | this._h[4] << 4) & 65535;
          this._h[4] = (this._h[4] >>> 12 | this._h[5] << 1 | this._h[6] << 14) & 65535;
          this._h[5] = (this._h[6] >>> 2 | this._h[7] << 11) & 65535;
          this._h[6] = (this._h[7] >>> 5 | this._h[8] << 8) & 65535;
          this._h[7] = (this._h[8] >>> 8 | this._h[9] << 5) & 65535;
          f4 = this._h[0] + this._pad[0];
          this._h[0] = f4 & 65535;
          for (i3 = 1; i3 < 8; i3++) {
            f4 = (this._h[i3] + this._pad[i3] | 0) + (f4 >>> 16) | 0;
            this._h[i3] = f4 & 65535;
          }
          mac[macpos + 0] = this._h[0] >>> 0;
          mac[macpos + 1] = this._h[0] >>> 8;
          mac[macpos + 2] = this._h[1] >>> 0;
          mac[macpos + 3] = this._h[1] >>> 8;
          mac[macpos + 4] = this._h[2] >>> 0;
          mac[macpos + 5] = this._h[2] >>> 8;
          mac[macpos + 6] = this._h[3] >>> 0;
          mac[macpos + 7] = this._h[3] >>> 8;
          mac[macpos + 8] = this._h[4] >>> 0;
          mac[macpos + 9] = this._h[4] >>> 8;
          mac[macpos + 10] = this._h[5] >>> 0;
          mac[macpos + 11] = this._h[5] >>> 8;
          mac[macpos + 12] = this._h[6] >>> 0;
          mac[macpos + 13] = this._h[6] >>> 8;
          mac[macpos + 14] = this._h[7] >>> 0;
          mac[macpos + 15] = this._h[7] >>> 8;
          this._finished = true;
          return this;
        };
        Poly13052.prototype.update = function(m4) {
          var mpos = 0;
          var bytes = m4.length;
          var want;
          if (this._leftover) {
            want = 16 - this._leftover;
            if (want > bytes) {
              want = bytes;
            }
            for (var i3 = 0; i3 < want; i3++) {
              this._buffer[this._leftover + i3] = m4[mpos + i3];
            }
            bytes -= want;
            mpos += want;
            this._leftover += want;
            if (this._leftover < 16) {
              return this;
            }
            this._blocks(this._buffer, 0, 16);
            this._leftover = 0;
          }
          if (bytes >= 16) {
            want = bytes - bytes % 16;
            this._blocks(m4, mpos, want);
            mpos += want;
            bytes -= want;
          }
          if (bytes) {
            for (var i3 = 0; i3 < bytes; i3++) {
              this._buffer[this._leftover + i3] = m4[mpos + i3];
            }
            this._leftover += bytes;
          }
          return this;
        };
        Poly13052.prototype.digest = function() {
          if (this._finished) {
            throw new Error("Poly1305 was finished");
          }
          var mac = new Uint8Array(16);
          this.finish(mac);
          return mac;
        };
        Poly13052.prototype.clean = function() {
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._r);
          wipe_1.wipe(this._h);
          wipe_1.wipe(this._pad);
          this._leftover = 0;
          this._fin = 0;
          this._finished = true;
          return this;
        };
        return Poly13052;
      }()
    );
    exports.Poly1305 = Poly1305;
    function oneTimeAuth(key, data) {
      var h4 = new Poly1305(key);
      h4.update(data);
      var digest2 = h4.digest();
      h4.clean();
      return digest2;
    }
    exports.oneTimeAuth = oneTimeAuth;
    function equal(a2, b5) {
      if (a2.length !== exports.DIGEST_LENGTH || b5.length !== exports.DIGEST_LENGTH) {
        return false;
      }
      return constant_time_1.equal(a2, b5);
    }
    exports.equal = equal;
  }
});

// node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js
var require_chacha20poly1305 = __commonJS({
  "node_modules/@stablelib/chacha20poly1305/lib/chacha20poly1305.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var chacha_1 = require_chacha();
    var poly1305_1 = require_poly1305();
    var wipe_1 = require_wipe();
    var binary_1 = require_binary();
    var constant_time_1 = require_constant_time();
    exports.KEY_LENGTH = 32;
    exports.NONCE_LENGTH = 12;
    exports.TAG_LENGTH = 16;
    var ZEROS = new Uint8Array(16);
    var ChaCha20Poly1305 = (
      /** @class */
      function() {
        function ChaCha20Poly13052(key) {
          this.nonceLength = exports.NONCE_LENGTH;
          this.tagLength = exports.TAG_LENGTH;
          if (key.length !== exports.KEY_LENGTH) {
            throw new Error("ChaCha20Poly1305 needs 32-byte key");
          }
          this._key = new Uint8Array(key);
        }
        ChaCha20Poly13052.prototype.seal = function(nonce, plaintext, associatedData, dst) {
          if (nonce.length > 16) {
            throw new Error("ChaCha20Poly1305: incorrect nonce length");
          }
          var counter = new Uint8Array(16);
          counter.set(nonce, counter.length - nonce.length);
          var authKey = new Uint8Array(32);
          chacha_1.stream(this._key, counter, authKey, 4);
          var resultLength = plaintext.length + this.tagLength;
          var result;
          if (dst) {
            if (dst.length !== resultLength) {
              throw new Error("ChaCha20Poly1305: incorrect destination length");
            }
            result = dst;
          } else {
            result = new Uint8Array(resultLength);
          }
          chacha_1.streamXOR(this._key, counter, plaintext, result, 4);
          this._authenticate(result.subarray(result.length - this.tagLength, result.length), authKey, result.subarray(0, result.length - this.tagLength), associatedData);
          wipe_1.wipe(counter);
          return result;
        };
        ChaCha20Poly13052.prototype.open = function(nonce, sealed, associatedData, dst) {
          if (nonce.length > 16) {
            throw new Error("ChaCha20Poly1305: incorrect nonce length");
          }
          if (sealed.length < this.tagLength) {
            return null;
          }
          var counter = new Uint8Array(16);
          counter.set(nonce, counter.length - nonce.length);
          var authKey = new Uint8Array(32);
          chacha_1.stream(this._key, counter, authKey, 4);
          var calculatedTag = new Uint8Array(this.tagLength);
          this._authenticate(calculatedTag, authKey, sealed.subarray(0, sealed.length - this.tagLength), associatedData);
          if (!constant_time_1.equal(calculatedTag, sealed.subarray(sealed.length - this.tagLength, sealed.length))) {
            return null;
          }
          var resultLength = sealed.length - this.tagLength;
          var result;
          if (dst) {
            if (dst.length !== resultLength) {
              throw new Error("ChaCha20Poly1305: incorrect destination length");
            }
            result = dst;
          } else {
            result = new Uint8Array(resultLength);
          }
          chacha_1.streamXOR(this._key, counter, sealed.subarray(0, sealed.length - this.tagLength), result, 4);
          wipe_1.wipe(counter);
          return result;
        };
        ChaCha20Poly13052.prototype.clean = function() {
          wipe_1.wipe(this._key);
          return this;
        };
        ChaCha20Poly13052.prototype._authenticate = function(tagOut, authKey, ciphertext, associatedData) {
          var h4 = new poly1305_1.Poly1305(authKey);
          if (associatedData) {
            h4.update(associatedData);
            if (associatedData.length % 16 > 0) {
              h4.update(ZEROS.subarray(associatedData.length % 16));
            }
          }
          h4.update(ciphertext);
          if (ciphertext.length % 16 > 0) {
            h4.update(ZEROS.subarray(ciphertext.length % 16));
          }
          var length2 = new Uint8Array(8);
          if (associatedData) {
            binary_1.writeUint64LE(associatedData.length, length2);
          }
          h4.update(length2);
          binary_1.writeUint64LE(ciphertext.length, length2);
          h4.update(length2);
          var tag = h4.digest();
          for (var i3 = 0; i3 < tag.length; i3++) {
            tagOut[i3] = tag[i3];
          }
          h4.clean();
          wipe_1.wipe(tag);
          wipe_1.wipe(length2);
        };
        return ChaCha20Poly13052;
      }()
    );
    exports.ChaCha20Poly1305 = ChaCha20Poly1305;
  }
});

// node_modules/@stablelib/hash/lib/hash.js
var require_hash = __commonJS({
  "node_modules/@stablelib/hash/lib/hash.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function isSerializableHash(h4) {
      return typeof h4.saveState !== "undefined" && typeof h4.restoreState !== "undefined" && typeof h4.cleanSavedState !== "undefined";
    }
    exports.isSerializableHash = isSerializableHash;
  }
});

// node_modules/@stablelib/hmac/lib/hmac.js
var require_hmac = __commonJS({
  "node_modules/@stablelib/hmac/lib/hmac.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var hash_1 = require_hash();
    var constant_time_1 = require_constant_time();
    var wipe_1 = require_wipe();
    var HMAC = (
      /** @class */
      function() {
        function HMAC2(hash, key) {
          this._finished = false;
          this._inner = new hash();
          this._outer = new hash();
          this.blockSize = this._outer.blockSize;
          this.digestLength = this._outer.digestLength;
          var pad = new Uint8Array(this.blockSize);
          if (key.length > this.blockSize) {
            this._inner.update(key).finish(pad).clean();
          } else {
            pad.set(key);
          }
          for (var i3 = 0; i3 < pad.length; i3++) {
            pad[i3] ^= 54;
          }
          this._inner.update(pad);
          for (var i3 = 0; i3 < pad.length; i3++) {
            pad[i3] ^= 54 ^ 92;
          }
          this._outer.update(pad);
          if (hash_1.isSerializableHash(this._inner) && hash_1.isSerializableHash(this._outer)) {
            this._innerKeyedState = this._inner.saveState();
            this._outerKeyedState = this._outer.saveState();
          }
          wipe_1.wipe(pad);
        }
        HMAC2.prototype.reset = function() {
          if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {
            throw new Error("hmac: can't reset() because hash doesn't implement restoreState()");
          }
          this._inner.restoreState(this._innerKeyedState);
          this._outer.restoreState(this._outerKeyedState);
          this._finished = false;
          return this;
        };
        HMAC2.prototype.clean = function() {
          if (hash_1.isSerializableHash(this._inner)) {
            this._inner.cleanSavedState(this._innerKeyedState);
          }
          if (hash_1.isSerializableHash(this._outer)) {
            this._outer.cleanSavedState(this._outerKeyedState);
          }
          this._inner.clean();
          this._outer.clean();
        };
        HMAC2.prototype.update = function(data) {
          this._inner.update(data);
          return this;
        };
        HMAC2.prototype.finish = function(out) {
          if (this._finished) {
            this._outer.finish(out);
            return this;
          }
          this._inner.finish(out);
          this._outer.update(out.subarray(0, this.digestLength)).finish(out);
          this._finished = true;
          return this;
        };
        HMAC2.prototype.digest = function() {
          var out = new Uint8Array(this.digestLength);
          this.finish(out);
          return out;
        };
        HMAC2.prototype.saveState = function() {
          if (!hash_1.isSerializableHash(this._inner)) {
            throw new Error("hmac: can't saveState() because hash doesn't implement it");
          }
          return this._inner.saveState();
        };
        HMAC2.prototype.restoreState = function(savedState) {
          if (!hash_1.isSerializableHash(this._inner) || !hash_1.isSerializableHash(this._outer)) {
            throw new Error("hmac: can't restoreState() because hash doesn't implement it");
          }
          this._inner.restoreState(savedState);
          this._outer.restoreState(this._outerKeyedState);
          this._finished = false;
          return this;
        };
        HMAC2.prototype.cleanSavedState = function(savedState) {
          if (!hash_1.isSerializableHash(this._inner)) {
            throw new Error("hmac: can't cleanSavedState() because hash doesn't implement it");
          }
          this._inner.cleanSavedState(savedState);
        };
        return HMAC2;
      }()
    );
    exports.HMAC = HMAC;
    function hmac(hash, key, data) {
      var h4 = new HMAC(hash, key);
      h4.update(data);
      var digest2 = h4.digest();
      h4.clean();
      return digest2;
    }
    exports.hmac = hmac;
    exports.equal = constant_time_1.equal;
  }
});

// node_modules/@stablelib/hkdf/lib/hkdf.js
var require_hkdf = __commonJS({
  "node_modules/@stablelib/hkdf/lib/hkdf.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var hmac_1 = require_hmac();
    var wipe_1 = require_wipe();
    var HKDF = (
      /** @class */
      function() {
        function HKDF2(hash, key, salt, info) {
          if (salt === void 0) {
            salt = new Uint8Array(0);
          }
          this._counter = new Uint8Array(1);
          this._hash = hash;
          this._info = info;
          var okm = hmac_1.hmac(this._hash, salt, key);
          this._hmac = new hmac_1.HMAC(hash, okm);
          this._buffer = new Uint8Array(this._hmac.digestLength);
          this._bufpos = this._buffer.length;
        }
        HKDF2.prototype._fillBuffer = function() {
          this._counter[0]++;
          var ctr = this._counter[0];
          if (ctr === 0) {
            throw new Error("hkdf: cannot expand more");
          }
          this._hmac.reset();
          if (ctr > 1) {
            this._hmac.update(this._buffer);
          }
          if (this._info) {
            this._hmac.update(this._info);
          }
          this._hmac.update(this._counter);
          this._hmac.finish(this._buffer);
          this._bufpos = 0;
        };
        HKDF2.prototype.expand = function(length2) {
          var out = new Uint8Array(length2);
          for (var i3 = 0; i3 < out.length; i3++) {
            if (this._bufpos === this._buffer.length) {
              this._fillBuffer();
            }
            out[i3] = this._buffer[this._bufpos++];
          }
          return out;
        };
        HKDF2.prototype.clean = function() {
          this._hmac.clean();
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._counter);
          this._bufpos = 0;
        };
        return HKDF2;
      }()
    );
    exports.HKDF = HKDF;
  }
});

// node_modules/@stablelib/random/lib/source/browser.js
var require_browser = __commonJS({
  "node_modules/@stablelib/random/lib/source/browser.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.BrowserRandomSource = void 0;
    var QUOTA = 65536;
    var BrowserRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.isInstantiated = false;
        const browserCrypto = typeof self !== "undefined" ? self.crypto || self.msCrypto : null;
        if (browserCrypto && browserCrypto.getRandomValues !== void 0) {
          this._crypto = browserCrypto;
          this.isAvailable = true;
          this.isInstantiated = true;
        }
      }
      randomBytes(length2) {
        if (!this.isAvailable || !this._crypto) {
          throw new Error("Browser random byte generator is not available.");
        }
        const out = new Uint8Array(length2);
        for (let i3 = 0; i3 < out.length; i3 += QUOTA) {
          this._crypto.getRandomValues(out.subarray(i3, i3 + Math.min(out.length - i3, QUOTA)));
        }
        return out;
      }
    };
    exports.BrowserRandomSource = BrowserRandomSource;
  }
});

// browser-external:crypto
var require_crypto = __commonJS({
  "browser-external:crypto"(exports, module) {
    module.exports = Object.create(new Proxy({}, {
      get(_5, key) {
        if (key !== "__esModule" && key !== "__proto__" && key !== "constructor" && key !== "splice") {
          console.warn(`Module "crypto" has been externalized for browser compatibility. Cannot access "crypto.${key}" in client code. See https://vite.dev/guide/troubleshooting.html#module-externalized-for-browser-compatibility for more details.`);
        }
      }
    }));
  }
});

// node_modules/@stablelib/random/lib/source/node.js
var require_node = __commonJS({
  "node_modules/@stablelib/random/lib/source/node.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.NodeRandomSource = void 0;
    var wipe_1 = require_wipe();
    var NodeRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.isInstantiated = false;
        if (typeof __require !== "undefined") {
          const nodeCrypto = require_crypto();
          if (nodeCrypto && nodeCrypto.randomBytes) {
            this._crypto = nodeCrypto;
            this.isAvailable = true;
            this.isInstantiated = true;
          }
        }
      }
      randomBytes(length2) {
        if (!this.isAvailable || !this._crypto) {
          throw new Error("Node.js random byte generator is not available.");
        }
        let buffer = this._crypto.randomBytes(length2);
        if (buffer.length !== length2) {
          throw new Error("NodeRandomSource: got fewer bytes than requested");
        }
        const out = new Uint8Array(length2);
        for (let i3 = 0; i3 < out.length; i3++) {
          out[i3] = buffer[i3];
        }
        (0, wipe_1.wipe)(buffer);
        return out;
      }
    };
    exports.NodeRandomSource = NodeRandomSource;
  }
});

// node_modules/@stablelib/random/lib/source/system.js
var require_system = __commonJS({
  "node_modules/@stablelib/random/lib/source/system.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.SystemRandomSource = void 0;
    var browser_1 = require_browser();
    var node_1 = require_node();
    var SystemRandomSource = class {
      constructor() {
        this.isAvailable = false;
        this.name = "";
        this._source = new browser_1.BrowserRandomSource();
        if (this._source.isAvailable) {
          this.isAvailable = true;
          this.name = "Browser";
          return;
        }
        this._source = new node_1.NodeRandomSource();
        if (this._source.isAvailable) {
          this.isAvailable = true;
          this.name = "Node";
          return;
        }
      }
      randomBytes(length2) {
        if (!this.isAvailable) {
          throw new Error("System random byte generator is not available.");
        }
        return this._source.randomBytes(length2);
      }
    };
    exports.SystemRandomSource = SystemRandomSource;
  }
});

// node_modules/@stablelib/random/lib/random.js
var require_random = __commonJS({
  "node_modules/@stablelib/random/lib/random.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.randomStringForEntropy = exports.randomString = exports.randomUint32 = exports.randomBytes = exports.defaultRandomSource = void 0;
    var system_1 = require_system();
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    exports.defaultRandomSource = new system_1.SystemRandomSource();
    function randomBytes(length2, prng = exports.defaultRandomSource) {
      return prng.randomBytes(length2);
    }
    exports.randomBytes = randomBytes;
    function randomUint32(prng = exports.defaultRandomSource) {
      const buf = randomBytes(4, prng);
      const result = (0, binary_1.readUint32LE)(buf);
      (0, wipe_1.wipe)(buf);
      return result;
    }
    exports.randomUint32 = randomUint32;
    var ALPHANUMERIC = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz";
    function randomString(length2, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {
      if (charset.length < 2) {
        throw new Error("randomString charset is too short");
      }
      if (charset.length > 256) {
        throw new Error("randomString charset is too long");
      }
      let out = "";
      const charsLen = charset.length;
      const maxByte = 256 - 256 % charsLen;
      while (length2 > 0) {
        const buf = randomBytes(Math.ceil(length2 * 256 / maxByte), prng);
        for (let i3 = 0; i3 < buf.length && length2 > 0; i3++) {
          const randomByte = buf[i3];
          if (randomByte < maxByte) {
            out += charset.charAt(randomByte % charsLen);
            length2--;
          }
        }
        (0, wipe_1.wipe)(buf);
      }
      return out;
    }
    exports.randomString = randomString;
    function randomStringForEntropy(bits, charset = ALPHANUMERIC, prng = exports.defaultRandomSource) {
      const length2 = Math.ceil(bits / (Math.log(charset.length) / Math.LN2));
      return randomString(length2, charset, prng);
    }
    exports.randomStringForEntropy = randomStringForEntropy;
  }
});

// node_modules/@stablelib/sha256/lib/sha256.js
var require_sha256 = __commonJS({
  "node_modules/@stablelib/sha256/lib/sha256.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var binary_1 = require_binary();
    var wipe_1 = require_wipe();
    exports.DIGEST_LENGTH = 32;
    exports.BLOCK_SIZE = 64;
    var SHA256 = (
      /** @class */
      function() {
        function SHA2562() {
          this.digestLength = exports.DIGEST_LENGTH;
          this.blockSize = exports.BLOCK_SIZE;
          this._state = new Int32Array(8);
          this._temp = new Int32Array(64);
          this._buffer = new Uint8Array(128);
          this._bufferLength = 0;
          this._bytesHashed = 0;
          this._finished = false;
          this.reset();
        }
        SHA2562.prototype._initState = function() {
          this._state[0] = 1779033703;
          this._state[1] = 3144134277;
          this._state[2] = 1013904242;
          this._state[3] = 2773480762;
          this._state[4] = 1359893119;
          this._state[5] = 2600822924;
          this._state[6] = 528734635;
          this._state[7] = 1541459225;
        };
        SHA2562.prototype.reset = function() {
          this._initState();
          this._bufferLength = 0;
          this._bytesHashed = 0;
          this._finished = false;
          return this;
        };
        SHA2562.prototype.clean = function() {
          wipe_1.wipe(this._buffer);
          wipe_1.wipe(this._temp);
          this.reset();
        };
        SHA2562.prototype.update = function(data, dataLength) {
          if (dataLength === void 0) {
            dataLength = data.length;
          }
          if (this._finished) {
            throw new Error("SHA256: can't update because hash was finished.");
          }
          var dataPos = 0;
          this._bytesHashed += dataLength;
          if (this._bufferLength > 0) {
            while (this._bufferLength < this.blockSize && dataLength > 0) {
              this._buffer[this._bufferLength++] = data[dataPos++];
              dataLength--;
            }
            if (this._bufferLength === this.blockSize) {
              hashBlocks(this._temp, this._state, this._buffer, 0, this.blockSize);
              this._bufferLength = 0;
            }
          }
          if (dataLength >= this.blockSize) {
            dataPos = hashBlocks(this._temp, this._state, data, dataPos, dataLength);
            dataLength %= this.blockSize;
          }
          while (dataLength > 0) {
            this._buffer[this._bufferLength++] = data[dataPos++];
            dataLength--;
          }
          return this;
        };
        SHA2562.prototype.finish = function(out) {
          if (!this._finished) {
            var bytesHashed = this._bytesHashed;
            var left = this._bufferLength;
            var bitLenHi = bytesHashed / 536870912 | 0;
            var bitLenLo = bytesHashed << 3;
            var padLength = bytesHashed % 64 < 56 ? 64 : 128;
            this._buffer[left] = 128;
            for (var i3 = left + 1; i3 < padLength - 8; i3++) {
              this._buffer[i3] = 0;
            }
            binary_1.writeUint32BE(bitLenHi, this._buffer, padLength - 8);
            binary_1.writeUint32BE(bitLenLo, this._buffer, padLength - 4);
            hashBlocks(this._temp, this._state, this._buffer, 0, padLength);
            this._finished = true;
          }
          for (var i3 = 0; i3 < this.digestLength / 4; i3++) {
            binary_1.writeUint32BE(this._state[i3], out, i3 * 4);
          }
          return this;
        };
        SHA2562.prototype.digest = function() {
          var out = new Uint8Array(this.digestLength);
          this.finish(out);
          return out;
        };
        SHA2562.prototype.saveState = function() {
          if (this._finished) {
            throw new Error("SHA256: cannot save finished state");
          }
          return {
            state: new Int32Array(this._state),
            buffer: this._bufferLength > 0 ? new Uint8Array(this._buffer) : void 0,
            bufferLength: this._bufferLength,
            bytesHashed: this._bytesHashed
          };
        };
        SHA2562.prototype.restoreState = function(savedState) {
          this._state.set(savedState.state);
          this._bufferLength = savedState.bufferLength;
          if (savedState.buffer) {
            this._buffer.set(savedState.buffer);
          }
          this._bytesHashed = savedState.bytesHashed;
          this._finished = false;
          return this;
        };
        SHA2562.prototype.cleanSavedState = function(savedState) {
          wipe_1.wipe(savedState.state);
          if (savedState.buffer) {
            wipe_1.wipe(savedState.buffer);
          }
          savedState.bufferLength = 0;
          savedState.bytesHashed = 0;
        };
        return SHA2562;
      }()
    );
    exports.SHA256 = SHA256;
    var K4 = new Int32Array([
      1116352408,
      1899447441,
      3049323471,
      3921009573,
      961987163,
      1508970993,
      2453635748,
      2870763221,
      3624381080,
      310598401,
      607225278,
      1426881987,
      1925078388,
      2162078206,
      2614888103,
      3248222580,
      3835390401,
      4022224774,
      264347078,
      604807628,
      770255983,
      1249150122,
      1555081692,
      1996064986,
      2554220882,
      2821834349,
      2952996808,
      3210313671,
      3336571891,
      3584528711,
      113926993,
      338241895,
      666307205,
      773529912,
      1294757372,
      1396182291,
      1695183700,
      1986661051,
      2177026350,
      2456956037,
      2730485921,
      2820302411,
      3259730800,
      3345764771,
      3516065817,
      3600352804,
      4094571909,
      275423344,
      430227734,
      506948616,
      659060556,
      883997877,
      958139571,
      1322822218,
      1537002063,
      1747873779,
      1955562222,
      2024104815,
      2227730452,
      2361852424,
      2428436474,
      2756734187,
      3204031479,
      3329325298
    ]);
    function hashBlocks(w5, v4, p7, pos, len) {
      while (len >= 64) {
        var a2 = v4[0];
        var b5 = v4[1];
        var c5 = v4[2];
        var d3 = v4[3];
        var e2 = v4[4];
        var f4 = v4[5];
        var g6 = v4[6];
        var h4 = v4[7];
        for (var i3 = 0; i3 < 16; i3++) {
          var j7 = pos + i3 * 4;
          w5[i3] = binary_1.readUint32BE(p7, j7);
        }
        for (var i3 = 16; i3 < 64; i3++) {
          var u3 = w5[i3 - 2];
          var t1 = (u3 >>> 17 | u3 << 32 - 17) ^ (u3 >>> 19 | u3 << 32 - 19) ^ u3 >>> 10;
          u3 = w5[i3 - 15];
          var t2 = (u3 >>> 7 | u3 << 32 - 7) ^ (u3 >>> 18 | u3 << 32 - 18) ^ u3 >>> 3;
          w5[i3] = (t1 + w5[i3 - 7] | 0) + (t2 + w5[i3 - 16] | 0);
        }
        for (var i3 = 0; i3 < 64; i3++) {
          var t1 = (((e2 >>> 6 | e2 << 32 - 6) ^ (e2 >>> 11 | e2 << 32 - 11) ^ (e2 >>> 25 | e2 << 32 - 25)) + (e2 & f4 ^ ~e2 & g6) | 0) + (h4 + (K4[i3] + w5[i3] | 0) | 0) | 0;
          var t2 = ((a2 >>> 2 | a2 << 32 - 2) ^ (a2 >>> 13 | a2 << 32 - 13) ^ (a2 >>> 22 | a2 << 32 - 22)) + (a2 & b5 ^ a2 & c5 ^ b5 & c5) | 0;
          h4 = g6;
          g6 = f4;
          f4 = e2;
          e2 = d3 + t1 | 0;
          d3 = c5;
          c5 = b5;
          b5 = a2;
          a2 = t1 + t2 | 0;
        }
        v4[0] += a2;
        v4[1] += b5;
        v4[2] += c5;
        v4[3] += d3;
        v4[4] += e2;
        v4[5] += f4;
        v4[6] += g6;
        v4[7] += h4;
        pos += 64;
        len -= 64;
      }
      return pos;
    }
    function hash(data) {
      var h4 = new SHA256();
      h4.update(data);
      var digest2 = h4.digest();
      h4.clean();
      return digest2;
    }
    exports.hash = hash;
  }
});

// node_modules/@stablelib/x25519/lib/x25519.js
var require_x25519 = __commonJS({
  "node_modules/@stablelib/x25519/lib/x25519.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.sharedKey = exports.generateKeyPair = exports.generateKeyPairFromSeed = exports.scalarMultBase = exports.scalarMult = exports.SHARED_KEY_LENGTH = exports.SECRET_KEY_LENGTH = exports.PUBLIC_KEY_LENGTH = void 0;
    var random_1 = require_random();
    var wipe_1 = require_wipe();
    exports.PUBLIC_KEY_LENGTH = 32;
    exports.SECRET_KEY_LENGTH = 32;
    exports.SHARED_KEY_LENGTH = 32;
    function gf(init) {
      const r2 = new Float64Array(16);
      if (init) {
        for (let i3 = 0; i3 < init.length; i3++) {
          r2[i3] = init[i3];
        }
      }
      return r2;
    }
    var _9 = new Uint8Array(32);
    _9[0] = 9;
    var _121665 = gf([56129, 1]);
    function car25519(o3) {
      let c5 = 1;
      for (let i3 = 0; i3 < 16; i3++) {
        let v4 = o3[i3] + c5 + 65535;
        c5 = Math.floor(v4 / 65536);
        o3[i3] = v4 - c5 * 65536;
      }
      o3[0] += c5 - 1 + 37 * (c5 - 1);
    }
    function sel25519(p7, q3, b5) {
      const c5 = ~(b5 - 1);
      for (let i3 = 0; i3 < 16; i3++) {
        const t = c5 & (p7[i3] ^ q3[i3]);
        p7[i3] ^= t;
        q3[i3] ^= t;
      }
    }
    function pack25519(o3, n4) {
      const m4 = gf();
      const t = gf();
      for (let i3 = 0; i3 < 16; i3++) {
        t[i3] = n4[i3];
      }
      car25519(t);
      car25519(t);
      car25519(t);
      for (let j7 = 0; j7 < 2; j7++) {
        m4[0] = t[0] - 65517;
        for (let i3 = 1; i3 < 15; i3++) {
          m4[i3] = t[i3] - 65535 - (m4[i3 - 1] >> 16 & 1);
          m4[i3 - 1] &= 65535;
        }
        m4[15] = t[15] - 32767 - (m4[14] >> 16 & 1);
        const b5 = m4[15] >> 16 & 1;
        m4[14] &= 65535;
        sel25519(t, m4, 1 - b5);
      }
      for (let i3 = 0; i3 < 16; i3++) {
        o3[2 * i3] = t[i3] & 255;
        o3[2 * i3 + 1] = t[i3] >> 8;
      }
    }
    function unpack25519(o3, n4) {
      for (let i3 = 0; i3 < 16; i3++) {
        o3[i3] = n4[2 * i3] + (n4[2 * i3 + 1] << 8);
      }
      o3[15] &= 32767;
    }
    function add(o3, a2, b5) {
      for (let i3 = 0; i3 < 16; i3++) {
        o3[i3] = a2[i3] + b5[i3];
      }
    }
    function sub(o3, a2, b5) {
      for (let i3 = 0; i3 < 16; i3++) {
        o3[i3] = a2[i3] - b5[i3];
      }
    }
    function mul(o3, a2, b5) {
      let v4, c5, t0 = 0, t1 = 0, t2 = 0, t3 = 0, t4 = 0, t5 = 0, t6 = 0, t7 = 0, t8 = 0, t9 = 0, t10 = 0, t11 = 0, t12 = 0, t13 = 0, t14 = 0, t15 = 0, t16 = 0, t17 = 0, t18 = 0, t19 = 0, t20 = 0, t21 = 0, t22 = 0, t23 = 0, t24 = 0, t25 = 0, t26 = 0, t27 = 0, t28 = 0, t29 = 0, t30 = 0, b0 = b5[0], b1 = b5[1], b22 = b5[2], b32 = b5[3], b42 = b5[4], b52 = b5[5], b6 = b5[6], b7 = b5[7], b8 = b5[8], b9 = b5[9], b10 = b5[10], b11 = b5[11], b12 = b5[12], b13 = b5[13], b14 = b5[14], b15 = b5[15];
      v4 = a2[0];
      t0 += v4 * b0;
      t1 += v4 * b1;
      t2 += v4 * b22;
      t3 += v4 * b32;
      t4 += v4 * b42;
      t5 += v4 * b52;
      t6 += v4 * b6;
      t7 += v4 * b7;
      t8 += v4 * b8;
      t9 += v4 * b9;
      t10 += v4 * b10;
      t11 += v4 * b11;
      t12 += v4 * b12;
      t13 += v4 * b13;
      t14 += v4 * b14;
      t15 += v4 * b15;
      v4 = a2[1];
      t1 += v4 * b0;
      t2 += v4 * b1;
      t3 += v4 * b22;
      t4 += v4 * b32;
      t5 += v4 * b42;
      t6 += v4 * b52;
      t7 += v4 * b6;
      t8 += v4 * b7;
      t9 += v4 * b8;
      t10 += v4 * b9;
      t11 += v4 * b10;
      t12 += v4 * b11;
      t13 += v4 * b12;
      t14 += v4 * b13;
      t15 += v4 * b14;
      t16 += v4 * b15;
      v4 = a2[2];
      t2 += v4 * b0;
      t3 += v4 * b1;
      t4 += v4 * b22;
      t5 += v4 * b32;
      t6 += v4 * b42;
      t7 += v4 * b52;
      t8 += v4 * b6;
      t9 += v4 * b7;
      t10 += v4 * b8;
      t11 += v4 * b9;
      t12 += v4 * b10;
      t13 += v4 * b11;
      t14 += v4 * b12;
      t15 += v4 * b13;
      t16 += v4 * b14;
      t17 += v4 * b15;
      v4 = a2[3];
      t3 += v4 * b0;
      t4 += v4 * b1;
      t5 += v4 * b22;
      t6 += v4 * b32;
      t7 += v4 * b42;
      t8 += v4 * b52;
      t9 += v4 * b6;
      t10 += v4 * b7;
      t11 += v4 * b8;
      t12 += v4 * b9;
      t13 += v4 * b10;
      t14 += v4 * b11;
      t15 += v4 * b12;
      t16 += v4 * b13;
      t17 += v4 * b14;
      t18 += v4 * b15;
      v4 = a2[4];
      t4 += v4 * b0;
      t5 += v4 * b1;
      t6 += v4 * b22;
      t7 += v4 * b32;
      t8 += v4 * b42;
      t9 += v4 * b52;
      t10 += v4 * b6;
      t11 += v4 * b7;
      t12 += v4 * b8;
      t13 += v4 * b9;
      t14 += v4 * b10;
      t15 += v4 * b11;
      t16 += v4 * b12;
      t17 += v4 * b13;
      t18 += v4 * b14;
      t19 += v4 * b15;
      v4 = a2[5];
      t5 += v4 * b0;
      t6 += v4 * b1;
      t7 += v4 * b22;
      t8 += v4 * b32;
      t9 += v4 * b42;
      t10 += v4 * b52;
      t11 += v4 * b6;
      t12 += v4 * b7;
      t13 += v4 * b8;
      t14 += v4 * b9;
      t15 += v4 * b10;
      t16 += v4 * b11;
      t17 += v4 * b12;
      t18 += v4 * b13;
      t19 += v4 * b14;
      t20 += v4 * b15;
      v4 = a2[6];
      t6 += v4 * b0;
      t7 += v4 * b1;
      t8 += v4 * b22;
      t9 += v4 * b32;
      t10 += v4 * b42;
      t11 += v4 * b52;
      t12 += v4 * b6;
      t13 += v4 * b7;
      t14 += v4 * b8;
      t15 += v4 * b9;
      t16 += v4 * b10;
      t17 += v4 * b11;
      t18 += v4 * b12;
      t19 += v4 * b13;
      t20 += v4 * b14;
      t21 += v4 * b15;
      v4 = a2[7];
      t7 += v4 * b0;
      t8 += v4 * b1;
      t9 += v4 * b22;
      t10 += v4 * b32;
      t11 += v4 * b42;
      t12 += v4 * b52;
      t13 += v4 * b6;
      t14 += v4 * b7;
      t15 += v4 * b8;
      t16 += v4 * b9;
      t17 += v4 * b10;
      t18 += v4 * b11;
      t19 += v4 * b12;
      t20 += v4 * b13;
      t21 += v4 * b14;
      t22 += v4 * b15;
      v4 = a2[8];
      t8 += v4 * b0;
      t9 += v4 * b1;
      t10 += v4 * b22;
      t11 += v4 * b32;
      t12 += v4 * b42;
      t13 += v4 * b52;
      t14 += v4 * b6;
      t15 += v4 * b7;
      t16 += v4 * b8;
      t17 += v4 * b9;
      t18 += v4 * b10;
      t19 += v4 * b11;
      t20 += v4 * b12;
      t21 += v4 * b13;
      t22 += v4 * b14;
      t23 += v4 * b15;
      v4 = a2[9];
      t9 += v4 * b0;
      t10 += v4 * b1;
      t11 += v4 * b22;
      t12 += v4 * b32;
      t13 += v4 * b42;
      t14 += v4 * b52;
      t15 += v4 * b6;
      t16 += v4 * b7;
      t17 += v4 * b8;
      t18 += v4 * b9;
      t19 += v4 * b10;
      t20 += v4 * b11;
      t21 += v4 * b12;
      t22 += v4 * b13;
      t23 += v4 * b14;
      t24 += v4 * b15;
      v4 = a2[10];
      t10 += v4 * b0;
      t11 += v4 * b1;
      t12 += v4 * b22;
      t13 += v4 * b32;
      t14 += v4 * b42;
      t15 += v4 * b52;
      t16 += v4 * b6;
      t17 += v4 * b7;
      t18 += v4 * b8;
      t19 += v4 * b9;
      t20 += v4 * b10;
      t21 += v4 * b11;
      t22 += v4 * b12;
      t23 += v4 * b13;
      t24 += v4 * b14;
      t25 += v4 * b15;
      v4 = a2[11];
      t11 += v4 * b0;
      t12 += v4 * b1;
      t13 += v4 * b22;
      t14 += v4 * b32;
      t15 += v4 * b42;
      t16 += v4 * b52;
      t17 += v4 * b6;
      t18 += v4 * b7;
      t19 += v4 * b8;
      t20 += v4 * b9;
      t21 += v4 * b10;
      t22 += v4 * b11;
      t23 += v4 * b12;
      t24 += v4 * b13;
      t25 += v4 * b14;
      t26 += v4 * b15;
      v4 = a2[12];
      t12 += v4 * b0;
      t13 += v4 * b1;
      t14 += v4 * b22;
      t15 += v4 * b32;
      t16 += v4 * b42;
      t17 += v4 * b52;
      t18 += v4 * b6;
      t19 += v4 * b7;
      t20 += v4 * b8;
      t21 += v4 * b9;
      t22 += v4 * b10;
      t23 += v4 * b11;
      t24 += v4 * b12;
      t25 += v4 * b13;
      t26 += v4 * b14;
      t27 += v4 * b15;
      v4 = a2[13];
      t13 += v4 * b0;
      t14 += v4 * b1;
      t15 += v4 * b22;
      t16 += v4 * b32;
      t17 += v4 * b42;
      t18 += v4 * b52;
      t19 += v4 * b6;
      t20 += v4 * b7;
      t21 += v4 * b8;
      t22 += v4 * b9;
      t23 += v4 * b10;
      t24 += v4 * b11;
      t25 += v4 * b12;
      t26 += v4 * b13;
      t27 += v4 * b14;
      t28 += v4 * b15;
      v4 = a2[14];
      t14 += v4 * b0;
      t15 += v4 * b1;
      t16 += v4 * b22;
      t17 += v4 * b32;
      t18 += v4 * b42;
      t19 += v4 * b52;
      t20 += v4 * b6;
      t21 += v4 * b7;
      t22 += v4 * b8;
      t23 += v4 * b9;
      t24 += v4 * b10;
      t25 += v4 * b11;
      t26 += v4 * b12;
      t27 += v4 * b13;
      t28 += v4 * b14;
      t29 += v4 * b15;
      v4 = a2[15];
      t15 += v4 * b0;
      t16 += v4 * b1;
      t17 += v4 * b22;
      t18 += v4 * b32;
      t19 += v4 * b42;
      t20 += v4 * b52;
      t21 += v4 * b6;
      t22 += v4 * b7;
      t23 += v4 * b8;
      t24 += v4 * b9;
      t25 += v4 * b10;
      t26 += v4 * b11;
      t27 += v4 * b12;
      t28 += v4 * b13;
      t29 += v4 * b14;
      t30 += v4 * b15;
      t0 += 38 * t16;
      t1 += 38 * t17;
      t2 += 38 * t18;
      t3 += 38 * t19;
      t4 += 38 * t20;
      t5 += 38 * t21;
      t6 += 38 * t22;
      t7 += 38 * t23;
      t8 += 38 * t24;
      t9 += 38 * t25;
      t10 += 38 * t26;
      t11 += 38 * t27;
      t12 += 38 * t28;
      t13 += 38 * t29;
      t14 += 38 * t30;
      c5 = 1;
      v4 = t0 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t0 = v4 - c5 * 65536;
      v4 = t1 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t1 = v4 - c5 * 65536;
      v4 = t2 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t2 = v4 - c5 * 65536;
      v4 = t3 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t3 = v4 - c5 * 65536;
      v4 = t4 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t4 = v4 - c5 * 65536;
      v4 = t5 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t5 = v4 - c5 * 65536;
      v4 = t6 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t6 = v4 - c5 * 65536;
      v4 = t7 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t7 = v4 - c5 * 65536;
      v4 = t8 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t8 = v4 - c5 * 65536;
      v4 = t9 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t9 = v4 - c5 * 65536;
      v4 = t10 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t10 = v4 - c5 * 65536;
      v4 = t11 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t11 = v4 - c5 * 65536;
      v4 = t12 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t12 = v4 - c5 * 65536;
      v4 = t13 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t13 = v4 - c5 * 65536;
      v4 = t14 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t14 = v4 - c5 * 65536;
      v4 = t15 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t15 = v4 - c5 * 65536;
      t0 += c5 - 1 + 37 * (c5 - 1);
      c5 = 1;
      v4 = t0 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t0 = v4 - c5 * 65536;
      v4 = t1 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t1 = v4 - c5 * 65536;
      v4 = t2 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t2 = v4 - c5 * 65536;
      v4 = t3 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t3 = v4 - c5 * 65536;
      v4 = t4 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t4 = v4 - c5 * 65536;
      v4 = t5 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t5 = v4 - c5 * 65536;
      v4 = t6 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t6 = v4 - c5 * 65536;
      v4 = t7 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t7 = v4 - c5 * 65536;
      v4 = t8 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t8 = v4 - c5 * 65536;
      v4 = t9 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t9 = v4 - c5 * 65536;
      v4 = t10 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t10 = v4 - c5 * 65536;
      v4 = t11 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t11 = v4 - c5 * 65536;
      v4 = t12 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t12 = v4 - c5 * 65536;
      v4 = t13 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t13 = v4 - c5 * 65536;
      v4 = t14 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t14 = v4 - c5 * 65536;
      v4 = t15 + c5 + 65535;
      c5 = Math.floor(v4 / 65536);
      t15 = v4 - c5 * 65536;
      t0 += c5 - 1 + 37 * (c5 - 1);
      o3[0] = t0;
      o3[1] = t1;
      o3[2] = t2;
      o3[3] = t3;
      o3[4] = t4;
      o3[5] = t5;
      o3[6] = t6;
      o3[7] = t7;
      o3[8] = t8;
      o3[9] = t9;
      o3[10] = t10;
      o3[11] = t11;
      o3[12] = t12;
      o3[13] = t13;
      o3[14] = t14;
      o3[15] = t15;
    }
    function square(o3, a2) {
      mul(o3, a2, a2);
    }
    function inv25519(o3, inp) {
      const c5 = gf();
      for (let i3 = 0; i3 < 16; i3++) {
        c5[i3] = inp[i3];
      }
      for (let i3 = 253; i3 >= 0; i3--) {
        square(c5, c5);
        if (i3 !== 2 && i3 !== 4) {
          mul(c5, c5, inp);
        }
      }
      for (let i3 = 0; i3 < 16; i3++) {
        o3[i3] = c5[i3];
      }
    }
    function scalarMult(n4, p7) {
      const z4 = new Uint8Array(32);
      const x5 = new Float64Array(80);
      const a2 = gf(), b5 = gf(), c5 = gf(), d3 = gf(), e2 = gf(), f4 = gf();
      for (let i3 = 0; i3 < 31; i3++) {
        z4[i3] = n4[i3];
      }
      z4[31] = n4[31] & 127 | 64;
      z4[0] &= 248;
      unpack25519(x5, p7);
      for (let i3 = 0; i3 < 16; i3++) {
        b5[i3] = x5[i3];
      }
      a2[0] = d3[0] = 1;
      for (let i3 = 254; i3 >= 0; --i3) {
        const r2 = z4[i3 >>> 3] >>> (i3 & 7) & 1;
        sel25519(a2, b5, r2);
        sel25519(c5, d3, r2);
        add(e2, a2, c5);
        sub(a2, a2, c5);
        add(c5, b5, d3);
        sub(b5, b5, d3);
        square(d3, e2);
        square(f4, a2);
        mul(a2, c5, a2);
        mul(c5, b5, e2);
        add(e2, a2, c5);
        sub(a2, a2, c5);
        square(b5, a2);
        sub(c5, d3, f4);
        mul(a2, c5, _121665);
        add(a2, a2, d3);
        mul(c5, c5, a2);
        mul(a2, d3, f4);
        mul(d3, b5, x5);
        square(b5, e2);
        sel25519(a2, b5, r2);
        sel25519(c5, d3, r2);
      }
      for (let i3 = 0; i3 < 16; i3++) {
        x5[i3 + 16] = a2[i3];
        x5[i3 + 32] = c5[i3];
        x5[i3 + 48] = b5[i3];
        x5[i3 + 64] = d3[i3];
      }
      const x32 = x5.subarray(32);
      const x16 = x5.subarray(16);
      inv25519(x32, x32);
      mul(x16, x16, x32);
      const q3 = new Uint8Array(32);
      pack25519(q3, x16);
      return q3;
    }
    exports.scalarMult = scalarMult;
    function scalarMultBase(n4) {
      return scalarMult(n4, _9);
    }
    exports.scalarMultBase = scalarMultBase;
    function generateKeyPairFromSeed(seed) {
      if (seed.length !== exports.SECRET_KEY_LENGTH) {
        throw new Error(`x25519: seed must be ${exports.SECRET_KEY_LENGTH} bytes`);
      }
      const secretKey = new Uint8Array(seed);
      const publicKey = scalarMultBase(secretKey);
      return {
        publicKey,
        secretKey
      };
    }
    exports.generateKeyPairFromSeed = generateKeyPairFromSeed;
    function generateKeyPair2(prng) {
      const seed = (0, random_1.randomBytes)(32, prng);
      const result = generateKeyPairFromSeed(seed);
      (0, wipe_1.wipe)(seed);
      return result;
    }
    exports.generateKeyPair = generateKeyPair2;
    function sharedKey2(mySecretKey, theirPublicKey, rejectZero = false) {
      if (mySecretKey.length !== exports.PUBLIC_KEY_LENGTH) {
        throw new Error("X25519: incorrect secret key length");
      }
      if (theirPublicKey.length !== exports.PUBLIC_KEY_LENGTH) {
        throw new Error("X25519: incorrect public key length");
      }
      const result = scalarMult(mySecretKey, theirPublicKey);
      if (rejectZero) {
        let zeros = 0;
        for (let i3 = 0; i3 < result.length; i3++) {
          zeros |= result[i3];
        }
        if (zeros === 0) {
          throw new Error("X25519: invalid shared key");
        }
      }
      return result;
    }
    exports.sharedKey = sharedKey2;
  }
});

// node_modules/tslib/tslib.es6.js
var tslib_es6_exports = {};
__export(tslib_es6_exports, {
  __assign: () => __assign,
  __asyncDelegator: () => __asyncDelegator,
  __asyncGenerator: () => __asyncGenerator,
  __asyncValues: () => __asyncValues,
  __await: () => __await,
  __awaiter: () => __awaiter,
  __classPrivateFieldGet: () => __classPrivateFieldGet,
  __classPrivateFieldSet: () => __classPrivateFieldSet,
  __createBinding: () => __createBinding,
  __decorate: () => __decorate,
  __exportStar: () => __exportStar,
  __extends: () => __extends,
  __generator: () => __generator,
  __importDefault: () => __importDefault,
  __importStar: () => __importStar,
  __makeTemplateObject: () => __makeTemplateObject,
  __metadata: () => __metadata,
  __param: () => __param,
  __read: () => __read,
  __rest: () => __rest,
  __spread: () => __spread,
  __spreadArrays: () => __spreadArrays,
  __values: () => __values
});
function __extends(d3, b5) {
  extendStatics(d3, b5);
  function __() {
    this.constructor = d3;
  }
  d3.prototype = b5 === null ? Object.create(b5) : (__.prototype = b5.prototype, new __());
}
function __rest(s2, e2) {
  var t = {};
  for (var p7 in s2) if (Object.prototype.hasOwnProperty.call(s2, p7) && e2.indexOf(p7) < 0)
    t[p7] = s2[p7];
  if (s2 != null && typeof Object.getOwnPropertySymbols === "function")
    for (var i3 = 0, p7 = Object.getOwnPropertySymbols(s2); i3 < p7.length; i3++) {
      if (e2.indexOf(p7[i3]) < 0 && Object.prototype.propertyIsEnumerable.call(s2, p7[i3]))
        t[p7[i3]] = s2[p7[i3]];
    }
  return t;
}
function __decorate(decorators, target, key, desc) {
  var c5 = arguments.length, r2 = c5 < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d3;
  if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r2 = Reflect.decorate(decorators, target, key, desc);
  else for (var i3 = decorators.length - 1; i3 >= 0; i3--) if (d3 = decorators[i3]) r2 = (c5 < 3 ? d3(r2) : c5 > 3 ? d3(target, key, r2) : d3(target, key)) || r2;
  return c5 > 3 && r2 && Object.defineProperty(target, key, r2), r2;
}
function __param(paramIndex, decorator) {
  return function(target, key) {
    decorator(target, key, paramIndex);
  };
}
function __metadata(metadataKey, metadataValue) {
  if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(metadataKey, metadataValue);
}
function __awaiter(thisArg, _arguments, P5, generator) {
  function adopt(value) {
    return value instanceof P5 ? value : new P5(function(resolve) {
      resolve(value);
    });
  }
  return new (P5 || (P5 = Promise))(function(resolve, reject) {
    function fulfilled(value) {
      try {
        step(generator.next(value));
      } catch (e2) {
        reject(e2);
      }
    }
    function rejected(value) {
      try {
        step(generator["throw"](value));
      } catch (e2) {
        reject(e2);
      }
    }
    function step(result) {
      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);
    }
    step((generator = generator.apply(thisArg, _arguments || [])).next());
  });
}
function __generator(thisArg, body) {
  var _5 = { label: 0, sent: function() {
    if (t[0] & 1) throw t[1];
    return t[1];
  }, trys: [], ops: [] }, f4, y6, t, g6;
  return g6 = { next: verb(0), "throw": verb(1), "return": verb(2) }, typeof Symbol === "function" && (g6[Symbol.iterator] = function() {
    return this;
  }), g6;
  function verb(n4) {
    return function(v4) {
      return step([n4, v4]);
    };
  }
  function step(op) {
    if (f4) throw new TypeError("Generator is already executing.");
    while (_5) try {
      if (f4 = 1, y6 && (t = op[0] & 2 ? y6["return"] : op[0] ? y6["throw"] || ((t = y6["return"]) && t.call(y6), 0) : y6.next) && !(t = t.call(y6, op[1])).done) return t;
      if (y6 = 0, t) op = [op[0] & 2, t.value];
      switch (op[0]) {
        case 0:
        case 1:
          t = op;
          break;
        case 4:
          _5.label++;
          return { value: op[1], done: false };
        case 5:
          _5.label++;
          y6 = op[1];
          op = [0];
          continue;
        case 7:
          op = _5.ops.pop();
          _5.trys.pop();
          continue;
        default:
          if (!(t = _5.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {
            _5 = 0;
            continue;
          }
          if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {
            _5.label = op[1];
            break;
          }
          if (op[0] === 6 && _5.label < t[1]) {
            _5.label = t[1];
            t = op;
            break;
          }
          if (t && _5.label < t[2]) {
            _5.label = t[2];
            _5.ops.push(op);
            break;
          }
          if (t[2]) _5.ops.pop();
          _5.trys.pop();
          continue;
      }
      op = body.call(thisArg, _5);
    } catch (e2) {
      op = [6, e2];
      y6 = 0;
    } finally {
      f4 = t = 0;
    }
    if (op[0] & 5) throw op[1];
    return { value: op[0] ? op[1] : void 0, done: true };
  }
}
function __createBinding(o3, m4, k4, k22) {
  if (k22 === void 0) k22 = k4;
  o3[k22] = m4[k4];
}
function __exportStar(m4, exports) {
  for (var p7 in m4) if (p7 !== "default" && !exports.hasOwnProperty(p7)) exports[p7] = m4[p7];
}
function __values(o3) {
  var s2 = typeof Symbol === "function" && Symbol.iterator, m4 = s2 && o3[s2], i3 = 0;
  if (m4) return m4.call(o3);
  if (o3 && typeof o3.length === "number") return {
    next: function() {
      if (o3 && i3 >= o3.length) o3 = void 0;
      return { value: o3 && o3[i3++], done: !o3 };
    }
  };
  throw new TypeError(s2 ? "Object is not iterable." : "Symbol.iterator is not defined.");
}
function __read(o3, n4) {
  var m4 = typeof Symbol === "function" && o3[Symbol.iterator];
  if (!m4) return o3;
  var i3 = m4.call(o3), r2, ar3 = [], e2;
  try {
    while ((n4 === void 0 || n4-- > 0) && !(r2 = i3.next()).done) ar3.push(r2.value);
  } catch (error) {
    e2 = { error };
  } finally {
    try {
      if (r2 && !r2.done && (m4 = i3["return"])) m4.call(i3);
    } finally {
      if (e2) throw e2.error;
    }
  }
  return ar3;
}
function __spread() {
  for (var ar3 = [], i3 = 0; i3 < arguments.length; i3++)
    ar3 = ar3.concat(__read(arguments[i3]));
  return ar3;
}
function __spreadArrays() {
  for (var s2 = 0, i3 = 0, il = arguments.length; i3 < il; i3++) s2 += arguments[i3].length;
  for (var r2 = Array(s2), k4 = 0, i3 = 0; i3 < il; i3++)
    for (var a2 = arguments[i3], j7 = 0, jl = a2.length; j7 < jl; j7++, k4++)
      r2[k4] = a2[j7];
  return r2;
}
function __await(v4) {
  return this instanceof __await ? (this.v = v4, this) : new __await(v4);
}
function __asyncGenerator(thisArg, _arguments, generator) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var g6 = generator.apply(thisArg, _arguments || []), i3, q3 = [];
  return i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
    return this;
  }, i3;
  function verb(n4) {
    if (g6[n4]) i3[n4] = function(v4) {
      return new Promise(function(a2, b5) {
        q3.push([n4, v4, a2, b5]) > 1 || resume(n4, v4);
      });
    };
  }
  function resume(n4, v4) {
    try {
      step(g6[n4](v4));
    } catch (e2) {
      settle(q3[0][3], e2);
    }
  }
  function step(r2) {
    r2.value instanceof __await ? Promise.resolve(r2.value.v).then(fulfill, reject) : settle(q3[0][2], r2);
  }
  function fulfill(value) {
    resume("next", value);
  }
  function reject(value) {
    resume("throw", value);
  }
  function settle(f4, v4) {
    if (f4(v4), q3.shift(), q3.length) resume(q3[0][0], q3[0][1]);
  }
}
function __asyncDelegator(o3) {
  var i3, p7;
  return i3 = {}, verb("next"), verb("throw", function(e2) {
    throw e2;
  }), verb("return"), i3[Symbol.iterator] = function() {
    return this;
  }, i3;
  function verb(n4, f4) {
    i3[n4] = o3[n4] ? function(v4) {
      return (p7 = !p7) ? { value: __await(o3[n4](v4)), done: n4 === "return" } : f4 ? f4(v4) : v4;
    } : f4;
  }
}
function __asyncValues(o3) {
  if (!Symbol.asyncIterator) throw new TypeError("Symbol.asyncIterator is not defined.");
  var m4 = o3[Symbol.asyncIterator], i3;
  return m4 ? m4.call(o3) : (o3 = typeof __values === "function" ? __values(o3) : o3[Symbol.iterator](), i3 = {}, verb("next"), verb("throw"), verb("return"), i3[Symbol.asyncIterator] = function() {
    return this;
  }, i3);
  function verb(n4) {
    i3[n4] = o3[n4] && function(v4) {
      return new Promise(function(resolve, reject) {
        v4 = o3[n4](v4), settle(resolve, reject, v4.done, v4.value);
      });
    };
  }
  function settle(resolve, reject, d3, v4) {
    Promise.resolve(v4).then(function(v5) {
      resolve({ value: v5, done: d3 });
    }, reject);
  }
}
function __makeTemplateObject(cooked, raw) {
  if (Object.defineProperty) {
    Object.defineProperty(cooked, "raw", { value: raw });
  } else {
    cooked.raw = raw;
  }
  return cooked;
}
function __importStar(mod) {
  if (mod && mod.__esModule) return mod;
  var result = {};
  if (mod != null) {
    for (var k4 in mod) if (Object.hasOwnProperty.call(mod, k4)) result[k4] = mod[k4];
  }
  result.default = mod;
  return result;
}
function __importDefault(mod) {
  return mod && mod.__esModule ? mod : { default: mod };
}
function __classPrivateFieldGet(receiver, privateMap) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to get private field on non-instance");
  }
  return privateMap.get(receiver);
}
function __classPrivateFieldSet(receiver, privateMap, value) {
  if (!privateMap.has(receiver)) {
    throw new TypeError("attempted to set private field on non-instance");
  }
  privateMap.set(receiver, value);
  return value;
}
var extendStatics, __assign;
var init_tslib_es6 = __esm({
  "node_modules/tslib/tslib.es6.js"() {
    extendStatics = function(d3, b5) {
      extendStatics = Object.setPrototypeOf || { __proto__: [] } instanceof Array && function(d4, b6) {
        d4.__proto__ = b6;
      } || function(d4, b6) {
        for (var p7 in b6) if (b6.hasOwnProperty(p7)) d4[p7] = b6[p7];
      };
      return extendStatics(d3, b5);
    };
    __assign = function() {
      __assign = Object.assign || function __assign2(t) {
        for (var s2, i3 = 1, n4 = arguments.length; i3 < n4; i3++) {
          s2 = arguments[i3];
          for (var p7 in s2) if (Object.prototype.hasOwnProperty.call(s2, p7)) t[p7] = s2[p7];
        }
        return t;
      };
      return __assign.apply(this, arguments);
    };
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/delay.js
var require_delay = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/delay.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.delay = void 0;
    function delay(timeout) {
      return new Promise((resolve) => {
        setTimeout(() => {
          resolve(true);
        }, timeout);
      });
    }
    exports.delay = delay;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/misc.js
var require_misc = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/misc.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ONE_THOUSAND = exports.ONE_HUNDRED = void 0;
    exports.ONE_HUNDRED = 100;
    exports.ONE_THOUSAND = 1e3;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/time.js
var require_time = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/time.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.ONE_YEAR = exports.FOUR_WEEKS = exports.THREE_WEEKS = exports.TWO_WEEKS = exports.ONE_WEEK = exports.THIRTY_DAYS = exports.SEVEN_DAYS = exports.FIVE_DAYS = exports.THREE_DAYS = exports.ONE_DAY = exports.TWENTY_FOUR_HOURS = exports.TWELVE_HOURS = exports.SIX_HOURS = exports.THREE_HOURS = exports.ONE_HOUR = exports.SIXTY_MINUTES = exports.THIRTY_MINUTES = exports.TEN_MINUTES = exports.FIVE_MINUTES = exports.ONE_MINUTE = exports.SIXTY_SECONDS = exports.THIRTY_SECONDS = exports.TEN_SECONDS = exports.FIVE_SECONDS = exports.ONE_SECOND = void 0;
    exports.ONE_SECOND = 1;
    exports.FIVE_SECONDS = 5;
    exports.TEN_SECONDS = 10;
    exports.THIRTY_SECONDS = 30;
    exports.SIXTY_SECONDS = 60;
    exports.ONE_MINUTE = exports.SIXTY_SECONDS;
    exports.FIVE_MINUTES = exports.ONE_MINUTE * 5;
    exports.TEN_MINUTES = exports.ONE_MINUTE * 10;
    exports.THIRTY_MINUTES = exports.ONE_MINUTE * 30;
    exports.SIXTY_MINUTES = exports.ONE_MINUTE * 60;
    exports.ONE_HOUR = exports.SIXTY_MINUTES;
    exports.THREE_HOURS = exports.ONE_HOUR * 3;
    exports.SIX_HOURS = exports.ONE_HOUR * 6;
    exports.TWELVE_HOURS = exports.ONE_HOUR * 12;
    exports.TWENTY_FOUR_HOURS = exports.ONE_HOUR * 24;
    exports.ONE_DAY = exports.TWENTY_FOUR_HOURS;
    exports.THREE_DAYS = exports.ONE_DAY * 3;
    exports.FIVE_DAYS = exports.ONE_DAY * 5;
    exports.SEVEN_DAYS = exports.ONE_DAY * 7;
    exports.THIRTY_DAYS = exports.ONE_DAY * 30;
    exports.ONE_WEEK = exports.SEVEN_DAYS;
    exports.TWO_WEEKS = exports.ONE_WEEK * 2;
    exports.THREE_WEEKS = exports.ONE_WEEK * 3;
    exports.FOUR_WEEKS = exports.ONE_WEEK * 4;
    exports.ONE_YEAR = exports.ONE_DAY * 365;
  }
});

// node_modules/@walletconnect/time/dist/cjs/constants/index.js
var require_constants = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/constants/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_misc(), exports);
    tslib_1.__exportStar(require_time(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/convert.js
var require_convert = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/convert.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.fromMiliseconds = exports.toMiliseconds = void 0;
    var constants_1 = require_constants();
    function toMiliseconds(seconds) {
      return seconds * constants_1.ONE_THOUSAND;
    }
    exports.toMiliseconds = toMiliseconds;
    function fromMiliseconds(miliseconds) {
      return Math.floor(miliseconds / constants_1.ONE_THOUSAND);
    }
    exports.fromMiliseconds = fromMiliseconds;
  }
});

// node_modules/@walletconnect/time/dist/cjs/utils/index.js
var require_utils = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/utils/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_delay(), exports);
    tslib_1.__exportStar(require_convert(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/watch.js
var require_watch = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/watch.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.Watch = void 0;
    var Watch = class {
      constructor() {
        this.timestamps = /* @__PURE__ */ new Map();
      }
      start(label) {
        if (this.timestamps.has(label)) {
          throw new Error(`Watch already started for label: ${label}`);
        }
        this.timestamps.set(label, { started: Date.now() });
      }
      stop(label) {
        const timestamp = this.get(label);
        if (typeof timestamp.elapsed !== "undefined") {
          throw new Error(`Watch already stopped for label: ${label}`);
        }
        const elapsed = Date.now() - timestamp.started;
        this.timestamps.set(label, { started: timestamp.started, elapsed });
      }
      get(label) {
        const timestamp = this.timestamps.get(label);
        if (typeof timestamp === "undefined") {
          throw new Error(`No timestamp found for label: ${label}`);
        }
        return timestamp;
      }
      elapsed(label) {
        const timestamp = this.get(label);
        const elapsed = timestamp.elapsed || Date.now() - timestamp.started;
        return elapsed;
      }
    };
    exports.Watch = Watch;
    exports.default = Watch;
  }
});

// node_modules/@walletconnect/time/dist/cjs/types/watch.js
var require_watch2 = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/types/watch.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IWatch = void 0;
    var IWatch = class {
    };
    exports.IWatch = IWatch;
  }
});

// node_modules/@walletconnect/time/dist/cjs/types/index.js
var require_types = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/types/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_watch2(), exports);
  }
});

// node_modules/@walletconnect/time/dist/cjs/index.js
var require_cjs = __commonJS({
  "node_modules/@walletconnect/time/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_utils(), exports);
    tslib_1.__exportStar(require_watch(), exports);
    tslib_1.__exportStar(require_types(), exports);
    tslib_1.__exportStar(require_constants(), exports);
  }
});

// node_modules/@walletconnect/window-getters/dist/cjs/index.js
var require_cjs2 = __commonJS({
  "node_modules/@walletconnect/window-getters/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getLocalStorage = exports.getLocalStorageOrThrow = exports.getCrypto = exports.getCryptoOrThrow = exports.getLocation = exports.getLocationOrThrow = exports.getNavigator = exports.getNavigatorOrThrow = exports.getDocument = exports.getDocumentOrThrow = exports.getFromWindowOrThrow = exports.getFromWindow = void 0;
    function getFromWindow(name2) {
      let res = void 0;
      if (typeof window !== "undefined" && typeof window[name2] !== "undefined") {
        res = window[name2];
      }
      return res;
    }
    exports.getFromWindow = getFromWindow;
    function getFromWindowOrThrow(name2) {
      const res = getFromWindow(name2);
      if (!res) {
        throw new Error(`${name2} is not defined in Window`);
      }
      return res;
    }
    exports.getFromWindowOrThrow = getFromWindowOrThrow;
    function getDocumentOrThrow() {
      return getFromWindowOrThrow("document");
    }
    exports.getDocumentOrThrow = getDocumentOrThrow;
    function getDocument() {
      return getFromWindow("document");
    }
    exports.getDocument = getDocument;
    function getNavigatorOrThrow() {
      return getFromWindowOrThrow("navigator");
    }
    exports.getNavigatorOrThrow = getNavigatorOrThrow;
    function getNavigator() {
      return getFromWindow("navigator");
    }
    exports.getNavigator = getNavigator;
    function getLocationOrThrow() {
      return getFromWindowOrThrow("location");
    }
    exports.getLocationOrThrow = getLocationOrThrow;
    function getLocation() {
      return getFromWindow("location");
    }
    exports.getLocation = getLocation;
    function getCryptoOrThrow() {
      return getFromWindowOrThrow("crypto");
    }
    exports.getCryptoOrThrow = getCryptoOrThrow;
    function getCrypto() {
      return getFromWindow("crypto");
    }
    exports.getCrypto = getCrypto;
    function getLocalStorageOrThrow() {
      return getFromWindowOrThrow("localStorage");
    }
    exports.getLocalStorageOrThrow = getLocalStorageOrThrow;
    function getLocalStorage() {
      return getFromWindow("localStorage");
    }
    exports.getLocalStorage = getLocalStorage;
  }
});

// node_modules/@walletconnect/window-metadata/dist/cjs/index.js
var require_cjs3 = __commonJS({
  "node_modules/@walletconnect/window-metadata/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.getWindowMetadata = void 0;
    var window_getters_1 = require_cjs2();
    function getWindowMetadata() {
      let doc;
      let loc;
      try {
        doc = window_getters_1.getDocumentOrThrow();
        loc = window_getters_1.getLocationOrThrow();
      } catch (e2) {
        return null;
      }
      function getIcons() {
        const links = doc.getElementsByTagName("link");
        const icons2 = [];
        for (let i3 = 0; i3 < links.length; i3++) {
          const link = links[i3];
          const rel = link.getAttribute("rel");
          if (rel) {
            if (rel.toLowerCase().indexOf("icon") > -1) {
              const href = link.getAttribute("href");
              if (href) {
                if (href.toLowerCase().indexOf("https:") === -1 && href.toLowerCase().indexOf("http:") === -1 && href.indexOf("//") !== 0) {
                  let absoluteHref = loc.protocol + "//" + loc.host;
                  if (href.indexOf("/") === 0) {
                    absoluteHref += href;
                  } else {
                    const path = loc.pathname.split("/");
                    path.pop();
                    const finalPath = path.join("/");
                    absoluteHref += finalPath + "/" + href;
                  }
                  icons2.push(absoluteHref);
                } else if (href.indexOf("//") === 0) {
                  const absoluteUrl = loc.protocol + href;
                  icons2.push(absoluteUrl);
                } else {
                  icons2.push(href);
                }
              }
            }
          }
        }
        return icons2;
      }
      function getWindowMetadataOfAny(...args) {
        const metaTags = doc.getElementsByTagName("meta");
        for (let i3 = 0; i3 < metaTags.length; i3++) {
          const tag = metaTags[i3];
          const attributes = ["itemprop", "property", "name"].map((target) => tag.getAttribute(target)).filter((attr) => {
            if (attr) {
              return args.includes(attr);
            }
            return false;
          });
          if (attributes.length && attributes) {
            const content = tag.getAttribute("content");
            if (content) {
              return content;
            }
          }
        }
        return "";
      }
      function getName() {
        let name3 = getWindowMetadataOfAny("name", "og:site_name", "og:title", "twitter:title");
        if (!name3) {
          name3 = doc.title;
        }
        return name3;
      }
      function getDescription() {
        const description2 = getWindowMetadataOfAny("description", "og:description", "twitter:description", "keywords");
        return description2;
      }
      const name2 = getName();
      const description = getDescription();
      const url = loc.origin;
      const icons = getIcons();
      const meta = {
        description,
        url,
        icons,
        name: name2
      };
      return meta;
    }
    exports.getWindowMetadata = getWindowMetadata;
  }
});

// node_modules/strict-uri-encode/index.js
var require_strict_uri_encode = __commonJS({
  "node_modules/strict-uri-encode/index.js"(exports, module) {
    "use strict";
    module.exports = (str) => encodeURIComponent(str).replace(/[!'()*]/g, (x5) => `%${x5.charCodeAt(0).toString(16).toUpperCase()}`);
  }
});

// node_modules/decode-uri-component/index.js
var require_decode_uri_component = __commonJS({
  "node_modules/decode-uri-component/index.js"(exports, module) {
    "use strict";
    var token = "%[a-f0-9]{2}";
    var singleMatcher = new RegExp("(" + token + ")|([^%]+?)", "gi");
    var multiMatcher = new RegExp("(" + token + ")+", "gi");
    function decodeComponents(components, split) {
      try {
        return [decodeURIComponent(components.join(""))];
      } catch (err) {
      }
      if (components.length === 1) {
        return components;
      }
      split = split || 1;
      var left = components.slice(0, split);
      var right = components.slice(split);
      return Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));
    }
    function decode6(input) {
      try {
        return decodeURIComponent(input);
      } catch (err) {
        var tokens = input.match(singleMatcher) || [];
        for (var i3 = 1; i3 < tokens.length; i3++) {
          input = decodeComponents(tokens, i3).join("");
          tokens = input.match(singleMatcher) || [];
        }
        return input;
      }
    }
    function customDecodeURIComponent(input) {
      var replaceMap = {
        "%FE%FF": "��",
        "%FF%FE": "��"
      };
      var match = multiMatcher.exec(input);
      while (match) {
        try {
          replaceMap[match[0]] = decodeURIComponent(match[0]);
        } catch (err) {
          var result = decode6(match[0]);
          if (result !== match[0]) {
            replaceMap[match[0]] = result;
          }
        }
        match = multiMatcher.exec(input);
      }
      replaceMap["%C2"] = "�";
      var entries = Object.keys(replaceMap);
      for (var i3 = 0; i3 < entries.length; i3++) {
        var key = entries[i3];
        input = input.replace(new RegExp(key, "g"), replaceMap[key]);
      }
      return input;
    }
    module.exports = function(encodedURI) {
      if (typeof encodedURI !== "string") {
        throw new TypeError("Expected `encodedURI` to be of type `string`, got `" + typeof encodedURI + "`");
      }
      try {
        encodedURI = encodedURI.replace(/\+/g, " ");
        return decodeURIComponent(encodedURI);
      } catch (err) {
        return customDecodeURIComponent(encodedURI);
      }
    };
  }
});

// node_modules/split-on-first/index.js
var require_split_on_first = __commonJS({
  "node_modules/split-on-first/index.js"(exports, module) {
    "use strict";
    module.exports = (string2, separator) => {
      if (!(typeof string2 === "string" && typeof separator === "string")) {
        throw new TypeError("Expected the arguments to be of type `string`");
      }
      if (separator === "") {
        return [string2];
      }
      const separatorIndex = string2.indexOf(separator);
      if (separatorIndex === -1) {
        return [string2];
      }
      return [
        string2.slice(0, separatorIndex),
        string2.slice(separatorIndex + separator.length)
      ];
    };
  }
});

// node_modules/filter-obj/index.js
var require_filter_obj = __commonJS({
  "node_modules/filter-obj/index.js"(exports, module) {
    "use strict";
    module.exports = function(obj, predicate) {
      var ret = {};
      var keys2 = Object.keys(obj);
      var isArr = Array.isArray(predicate);
      for (var i3 = 0; i3 < keys2.length; i3++) {
        var key = keys2[i3];
        var val = obj[key];
        if (isArr ? predicate.indexOf(key) !== -1 : predicate(key, val, obj)) {
          ret[key] = val;
        }
      }
      return ret;
    };
  }
});

// node_modules/query-string/index.js
var require_query_string = __commonJS({
  "node_modules/query-string/index.js"(exports) {
    "use strict";
    var strictUriEncode = require_strict_uri_encode();
    var decodeComponent = require_decode_uri_component();
    var splitOnFirst = require_split_on_first();
    var filterObject = require_filter_obj();
    var isNullOrUndefined = (value) => value === null || value === void 0;
    var encodeFragmentIdentifier = Symbol("encodeFragmentIdentifier");
    function encoderForArrayFormat(options) {
      switch (options.arrayFormat) {
        case "index":
          return (key) => (result, value) => {
            const index = result.length;
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), "[", index, "]"].join("")];
            }
            return [
              ...result,
              [encode5(key, options), "[", encode5(index, options), "]=", encode5(value, options)].join("")
            ];
          };
        case "bracket":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), "[]"].join("")];
            }
            return [...result, [encode5(key, options), "[]=", encode5(value, options)].join("")];
          };
        case "colon-list-separator":
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, [encode5(key, options), ":list="].join("")];
            }
            return [...result, [encode5(key, options), ":list=", encode5(value, options)].join("")];
          };
        case "comma":
        case "separator":
        case "bracket-separator": {
          const keyValueSep = options.arrayFormat === "bracket-separator" ? "[]=" : "=";
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            value = value === null ? "" : value;
            if (result.length === 0) {
              return [[encode5(key, options), keyValueSep, encode5(value, options)].join("")];
            }
            return [[result, encode5(value, options)].join(options.arrayFormatSeparator)];
          };
        }
        default:
          return (key) => (result, value) => {
            if (value === void 0 || options.skipNull && value === null || options.skipEmptyString && value === "") {
              return result;
            }
            if (value === null) {
              return [...result, encode5(key, options)];
            }
            return [...result, [encode5(key, options), "=", encode5(value, options)].join("")];
          };
      }
    }
    function parserForArrayFormat(options) {
      let result;
      switch (options.arrayFormat) {
        case "index":
          return (key, value, accumulator) => {
            result = /\[(\d*)\]$/.exec(key);
            key = key.replace(/\[\d*\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = {};
            }
            accumulator[key][result[1]] = value;
          };
        case "bracket":
          return (key, value, accumulator) => {
            result = /(\[\])$/.exec(key);
            key = key.replace(/\[\]$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "colon-list-separator":
          return (key, value, accumulator) => {
            result = /(:list)$/.exec(key);
            key = key.replace(/:list$/, "");
            if (!result) {
              accumulator[key] = value;
              return;
            }
            if (accumulator[key] === void 0) {
              accumulator[key] = [value];
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
        case "comma":
        case "separator":
          return (key, value, accumulator) => {
            const isArray = typeof value === "string" && value.includes(options.arrayFormatSeparator);
            const isEncodedArray = typeof value === "string" && !isArray && decode6(value, options).includes(options.arrayFormatSeparator);
            value = isEncodedArray ? decode6(value, options) : value;
            const newValue = isArray || isEncodedArray ? value.split(options.arrayFormatSeparator).map((item) => decode6(item, options)) : value === null ? value : decode6(value, options);
            accumulator[key] = newValue;
          };
        case "bracket-separator":
          return (key, value, accumulator) => {
            const isArray = /(\[\])$/.test(key);
            key = key.replace(/\[\]$/, "");
            if (!isArray) {
              accumulator[key] = value ? decode6(value, options) : value;
              return;
            }
            const arrayValue = value === null ? [] : value.split(options.arrayFormatSeparator).map((item) => decode6(item, options));
            if (accumulator[key] === void 0) {
              accumulator[key] = arrayValue;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], arrayValue);
          };
        default:
          return (key, value, accumulator) => {
            if (accumulator[key] === void 0) {
              accumulator[key] = value;
              return;
            }
            accumulator[key] = [].concat(accumulator[key], value);
          };
      }
    }
    function validateArrayFormatSeparator(value) {
      if (typeof value !== "string" || value.length !== 1) {
        throw new TypeError("arrayFormatSeparator must be single character string");
      }
    }
    function encode5(value, options) {
      if (options.encode) {
        return options.strict ? strictUriEncode(value) : encodeURIComponent(value);
      }
      return value;
    }
    function decode6(value, options) {
      if (options.decode) {
        return decodeComponent(value);
      }
      return value;
    }
    function keysSorter(input) {
      if (Array.isArray(input)) {
        return input.sort();
      }
      if (typeof input === "object") {
        return keysSorter(Object.keys(input)).sort((a2, b5) => Number(a2) - Number(b5)).map((key) => input[key]);
      }
      return input;
    }
    function removeHash(input) {
      const hashStart = input.indexOf("#");
      if (hashStart !== -1) {
        input = input.slice(0, hashStart);
      }
      return input;
    }
    function getHash(url) {
      let hash = "";
      const hashStart = url.indexOf("#");
      if (hashStart !== -1) {
        hash = url.slice(hashStart);
      }
      return hash;
    }
    function extract(input) {
      input = removeHash(input);
      const queryStart = input.indexOf("?");
      if (queryStart === -1) {
        return "";
      }
      return input.slice(queryStart + 1);
    }
    function parseValue(value, options) {
      if (options.parseNumbers && !Number.isNaN(Number(value)) && (typeof value === "string" && value.trim() !== "")) {
        value = Number(value);
      } else if (options.parseBooleans && value !== null && (value.toLowerCase() === "true" || value.toLowerCase() === "false")) {
        value = value.toLowerCase() === "true";
      }
      return value;
    }
    function parse2(query, options) {
      options = Object.assign({
        decode: true,
        sort: true,
        arrayFormat: "none",
        arrayFormatSeparator: ",",
        parseNumbers: false,
        parseBooleans: false
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const formatter = parserForArrayFormat(options);
      const ret = /* @__PURE__ */ Object.create(null);
      if (typeof query !== "string") {
        return ret;
      }
      query = query.trim().replace(/^[?#&]/, "");
      if (!query) {
        return ret;
      }
      for (const param of query.split("&")) {
        if (param === "") {
          continue;
        }
        let [key, value] = splitOnFirst(options.decode ? param.replace(/\+/g, " ") : param, "=");
        value = value === void 0 ? null : ["comma", "separator", "bracket-separator"].includes(options.arrayFormat) ? value : decode6(value, options);
        formatter(decode6(key, options), value, ret);
      }
      for (const key of Object.keys(ret)) {
        const value = ret[key];
        if (typeof value === "object" && value !== null) {
          for (const k4 of Object.keys(value)) {
            value[k4] = parseValue(value[k4], options);
          }
        } else {
          ret[key] = parseValue(value, options);
        }
      }
      if (options.sort === false) {
        return ret;
      }
      return (options.sort === true ? Object.keys(ret).sort() : Object.keys(ret).sort(options.sort)).reduce((result, key) => {
        const value = ret[key];
        if (Boolean(value) && typeof value === "object" && !Array.isArray(value)) {
          result[key] = keysSorter(value);
        } else {
          result[key] = value;
        }
        return result;
      }, /* @__PURE__ */ Object.create(null));
    }
    exports.extract = extract;
    exports.parse = parse2;
    exports.stringify = (object, options) => {
      if (!object) {
        return "";
      }
      options = Object.assign({
        encode: true,
        strict: true,
        arrayFormat: "none",
        arrayFormatSeparator: ","
      }, options);
      validateArrayFormatSeparator(options.arrayFormatSeparator);
      const shouldFilter = (key) => options.skipNull && isNullOrUndefined(object[key]) || options.skipEmptyString && object[key] === "";
      const formatter = encoderForArrayFormat(options);
      const objectCopy = {};
      for (const key of Object.keys(object)) {
        if (!shouldFilter(key)) {
          objectCopy[key] = object[key];
        }
      }
      const keys2 = Object.keys(objectCopy);
      if (options.sort !== false) {
        keys2.sort(options.sort);
      }
      return keys2.map((key) => {
        const value = object[key];
        if (value === void 0) {
          return "";
        }
        if (value === null) {
          return encode5(key, options);
        }
        if (Array.isArray(value)) {
          if (value.length === 0 && options.arrayFormat === "bracket-separator") {
            return encode5(key, options) + "[]";
          }
          return value.reduce(formatter(key), []).join("&");
        }
        return encode5(key, options) + "=" + encode5(value, options);
      }).filter((x5) => x5.length > 0).join("&");
    };
    exports.parseUrl = (url, options) => {
      options = Object.assign({
        decode: true
      }, options);
      const [url_, hash] = splitOnFirst(url, "#");
      return Object.assign(
        {
          url: url_.split("?")[0] || "",
          query: parse2(extract(url), options)
        },
        options && options.parseFragmentIdentifier && hash ? { fragmentIdentifier: decode6(hash, options) } : {}
      );
    };
    exports.stringifyUrl = (object, options) => {
      options = Object.assign({
        encode: true,
        strict: true,
        [encodeFragmentIdentifier]: true
      }, options);
      const url = removeHash(object.url).split("?")[0] || "";
      const queryFromUrl = exports.extract(object.url);
      const parsedQueryFromUrl = exports.parse(queryFromUrl, { sort: false });
      const query = Object.assign(parsedQueryFromUrl, object.query);
      let queryString = exports.stringify(query, options);
      if (queryString) {
        queryString = `?${queryString}`;
      }
      let hash = getHash(object.url);
      if (object.fragmentIdentifier) {
        hash = `#${options[encodeFragmentIdentifier] ? encode5(object.fragmentIdentifier, options) : object.fragmentIdentifier}`;
      }
      return `${url}${queryString}${hash}`;
    };
    exports.pick = (input, filter, options) => {
      options = Object.assign({
        parseFragmentIdentifier: true,
        [encodeFragmentIdentifier]: false
      }, options);
      const { url, query, fragmentIdentifier } = exports.parseUrl(input, options);
      return exports.stringifyUrl({
        url,
        query: filterObject(query, filter),
        fragmentIdentifier
      }, options);
    };
    exports.exclude = (input, filter, options) => {
      const exclusionFilter = Array.isArray(filter) ? (key) => !filter.includes(key) : (key, value) => !filter(key, value);
      return exports.pick(input, exclusionFilter, options);
    };
  }
});

// node_modules/@walletconnect/events/dist/esm/events.js
var IEvents;
var init_events = __esm({
  "node_modules/@walletconnect/events/dist/esm/events.js"() {
    IEvents = class {
    };
  }
});

// node_modules/@walletconnect/events/dist/esm/index.js
var esm_exports = {};
__export(esm_exports, {
  IEvents: () => IEvents
});
var init_esm = __esm({
  "node_modules/@walletconnect/events/dist/esm/index.js"() {
    init_events();
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js
var require_heartbeat = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/types/heartbeat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.IHeartBeat = void 0;
    var events_1 = (init_esm(), __toCommonJS(esm_exports));
    var IHeartBeat = class extends events_1.IEvents {
      constructor(opts) {
        super();
      }
    };
    exports.IHeartBeat = IHeartBeat;
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js
var require_types2 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/types/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_heartbeat(), exports);
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js
var require_heartbeat2 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/constants/heartbeat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HEARTBEAT_EVENTS = exports.HEARTBEAT_INTERVAL = void 0;
    var time_1 = require_cjs();
    exports.HEARTBEAT_INTERVAL = time_1.FIVE_SECONDS;
    exports.HEARTBEAT_EVENTS = {
      pulse: "heartbeat_pulse"
    };
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js
var require_constants2 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/constants/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_heartbeat2(), exports);
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js
var require_heartbeat3 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/heartbeat.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.HeartBeat = void 0;
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    var events_1 = require_events();
    var time_1 = require_cjs();
    var types_1 = require_types2();
    var constants_1 = require_constants2();
    var HeartBeat = class _HeartBeat extends types_1.IHeartBeat {
      constructor(opts) {
        super(opts);
        this.events = new events_1.EventEmitter();
        this.interval = constants_1.HEARTBEAT_INTERVAL;
        this.interval = (opts === null || opts === void 0 ? void 0 : opts.interval) || constants_1.HEARTBEAT_INTERVAL;
      }
      static init(opts) {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          const heartbeat = new _HeartBeat(opts);
          yield heartbeat.init();
          return heartbeat;
        });
      }
      init() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          yield this.initialize();
        });
      }
      stop() {
        clearInterval(this.intervalRef);
      }
      on(event, listener) {
        this.events.on(event, listener);
      }
      once(event, listener) {
        this.events.once(event, listener);
      }
      off(event, listener) {
        this.events.off(event, listener);
      }
      removeListener(event, listener) {
        this.events.removeListener(event, listener);
      }
      initialize() {
        return tslib_1.__awaiter(this, void 0, void 0, function* () {
          this.intervalRef = setInterval(() => this.pulse(), time_1.toMiliseconds(this.interval));
        });
      }
      pulse() {
        this.events.emit(constants_1.HEARTBEAT_EVENTS.pulse);
      }
    };
    exports.HeartBeat = HeartBeat;
  }
});

// node_modules/@walletconnect/heartbeat/dist/cjs/index.js
var require_cjs4 = __commonJS({
  "node_modules/@walletconnect/heartbeat/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_heartbeat3(), exports);
    tslib_1.__exportStar(require_types2(), exports);
    tslib_1.__exportStar(require_constants2(), exports);
  }
});

// node_modules/quick-format-unescaped/index.js
var require_quick_format_unescaped = __commonJS({
  "node_modules/quick-format-unescaped/index.js"(exports, module) {
    "use strict";
    function tryStringify(o3) {
      try {
        return JSON.stringify(o3);
      } catch (e2) {
        return '"[Circular]"';
      }
    }
    module.exports = format;
    function format(f4, args, opts) {
      var ss2 = opts && opts.stringify || tryStringify;
      var offset = 1;
      if (typeof f4 === "object" && f4 !== null) {
        var len = args.length + offset;
        if (len === 1) return f4;
        var objects = new Array(len);
        objects[0] = ss2(f4);
        for (var index = 1; index < len; index++) {
          objects[index] = ss2(args[index]);
        }
        return objects.join(" ");
      }
      if (typeof f4 !== "string") {
        return f4;
      }
      var argLen = args.length;
      if (argLen === 0) return f4;
      var str = "";
      var a2 = 1 - offset;
      var lastPos = -1;
      var flen = f4 && f4.length || 0;
      for (var i3 = 0; i3 < flen; ) {
        if (f4.charCodeAt(i3) === 37 && i3 + 1 < flen) {
          lastPos = lastPos > -1 ? lastPos : 0;
          switch (f4.charCodeAt(i3 + 1)) {
            case 100:
            // 'd'
            case 102:
              if (a2 >= argLen)
                break;
              if (args[a2] == null) break;
              if (lastPos < i3)
                str += f4.slice(lastPos, i3);
              str += Number(args[a2]);
              lastPos = i3 + 2;
              i3++;
              break;
            case 105:
              if (a2 >= argLen)
                break;
              if (args[a2] == null) break;
              if (lastPos < i3)
                str += f4.slice(lastPos, i3);
              str += Math.floor(Number(args[a2]));
              lastPos = i3 + 2;
              i3++;
              break;
            case 79:
            // 'O'
            case 111:
            // 'o'
            case 106:
              if (a2 >= argLen)
                break;
              if (args[a2] === void 0) break;
              if (lastPos < i3)
                str += f4.slice(lastPos, i3);
              var type = typeof args[a2];
              if (type === "string") {
                str += "'" + args[a2] + "'";
                lastPos = i3 + 2;
                i3++;
                break;
              }
              if (type === "function") {
                str += args[a2].name || "<anonymous>";
                lastPos = i3 + 2;
                i3++;
                break;
              }
              str += ss2(args[a2]);
              lastPos = i3 + 2;
              i3++;
              break;
            case 115:
              if (a2 >= argLen)
                break;
              if (lastPos < i3)
                str += f4.slice(lastPos, i3);
              str += String(args[a2]);
              lastPos = i3 + 2;
              i3++;
              break;
            case 37:
              if (lastPos < i3)
                str += f4.slice(lastPos, i3);
              str += "%";
              lastPos = i3 + 2;
              i3++;
              a2--;
              break;
          }
          ++a2;
        }
        ++i3;
      }
      if (lastPos === -1)
        return f4;
      else if (lastPos < flen) {
        str += f4.slice(lastPos);
      }
      return str;
    }
  }
});

// node_modules/pino/browser.js
var require_browser2 = __commonJS({
  "node_modules/pino/browser.js"(exports, module) {
    "use strict";
    var format = require_quick_format_unescaped();
    module.exports = pino;
    var _console = pfGlobalThisOrFallback().console || {};
    var stdSerializers = {
      mapHttpRequest: mock,
      mapHttpResponse: mock,
      wrapRequestSerializer: passthrough,
      wrapResponseSerializer: passthrough,
      wrapErrorSerializer: passthrough,
      req: mock,
      res: mock,
      err: asErrValue
    };
    function shouldSerialize(serialize, serializers) {
      if (Array.isArray(serialize)) {
        const hasToFilter = serialize.filter(function(k4) {
          return k4 !== "!stdSerializers.err";
        });
        return hasToFilter;
      } else if (serialize === true) {
        return Object.keys(serializers);
      }
      return false;
    }
    function pino(opts) {
      opts = opts || {};
      opts.browser = opts.browser || {};
      const transmit2 = opts.browser.transmit;
      if (transmit2 && typeof transmit2.send !== "function") {
        throw Error("pino: transmit option must have a send function");
      }
      const proto = opts.browser.write || _console;
      if (opts.browser.write) opts.browser.asObject = true;
      const serializers = opts.serializers || {};
      const serialize = shouldSerialize(opts.browser.serialize, serializers);
      let stdErrSerialize = opts.browser.serialize;
      if (Array.isArray(opts.browser.serialize) && opts.browser.serialize.indexOf("!stdSerializers.err") > -1) stdErrSerialize = false;
      const levels = ["error", "fatal", "warn", "info", "debug", "trace"];
      if (typeof proto === "function") {
        proto.error = proto.fatal = proto.warn = proto.info = proto.debug = proto.trace = proto;
      }
      if (opts.enabled === false) opts.level = "silent";
      const level = opts.level || "info";
      const logger = Object.create(proto);
      if (!logger.log) logger.log = noop;
      Object.defineProperty(logger, "levelVal", {
        get: getLevelVal
      });
      Object.defineProperty(logger, "level", {
        get: getLevel,
        set: setLevel
      });
      const setOpts = {
        transmit: transmit2,
        serialize,
        asObject: opts.browser.asObject,
        levels,
        timestamp: getTimeFunction(opts)
      };
      logger.levels = pino.levels;
      logger.level = level;
      logger.setMaxListeners = logger.getMaxListeners = logger.emit = logger.addListener = logger.on = logger.prependListener = logger.once = logger.prependOnceListener = logger.removeListener = logger.removeAllListeners = logger.listeners = logger.listenerCount = logger.eventNames = logger.write = logger.flush = noop;
      logger.serializers = serializers;
      logger._serialize = serialize;
      logger._stdErrSerialize = stdErrSerialize;
      logger.child = child;
      if (transmit2) logger._logEvent = createLogEventShape();
      function getLevelVal() {
        return this.level === "silent" ? Infinity : this.levels.values[this.level];
      }
      function getLevel() {
        return this._level;
      }
      function setLevel(level2) {
        if (level2 !== "silent" && !this.levels.values[level2]) {
          throw Error("unknown level " + level2);
        }
        this._level = level2;
        set2(setOpts, logger, "error", "log");
        set2(setOpts, logger, "fatal", "error");
        set2(setOpts, logger, "warn", "error");
        set2(setOpts, logger, "info", "log");
        set2(setOpts, logger, "debug", "log");
        set2(setOpts, logger, "trace", "log");
      }
      function child(bindings, childOptions) {
        if (!bindings) {
          throw new Error("missing bindings for child Pino");
        }
        childOptions = childOptions || {};
        if (serialize && bindings.serializers) {
          childOptions.serializers = bindings.serializers;
        }
        const childOptionsSerializers = childOptions.serializers;
        if (serialize && childOptionsSerializers) {
          var childSerializers = Object.assign({}, serializers, childOptionsSerializers);
          var childSerialize = opts.browser.serialize === true ? Object.keys(childSerializers) : serialize;
          delete bindings.serializers;
          applySerializers([bindings], childSerialize, childSerializers, this._stdErrSerialize);
        }
        function Child(parent) {
          this._childLevel = (parent._childLevel | 0) + 1;
          this.error = bind(parent, bindings, "error");
          this.fatal = bind(parent, bindings, "fatal");
          this.warn = bind(parent, bindings, "warn");
          this.info = bind(parent, bindings, "info");
          this.debug = bind(parent, bindings, "debug");
          this.trace = bind(parent, bindings, "trace");
          if (childSerializers) {
            this.serializers = childSerializers;
            this._serialize = childSerialize;
          }
          if (transmit2) {
            this._logEvent = createLogEventShape(
              [].concat(parent._logEvent.bindings, bindings)
            );
          }
        }
        Child.prototype = this;
        return new Child(this);
      }
      return logger;
    }
    pino.levels = {
      values: {
        fatal: 60,
        error: 50,
        warn: 40,
        info: 30,
        debug: 20,
        trace: 10
      },
      labels: {
        10: "trace",
        20: "debug",
        30: "info",
        40: "warn",
        50: "error",
        60: "fatal"
      }
    };
    pino.stdSerializers = stdSerializers;
    pino.stdTimeFunctions = Object.assign({}, { nullTime, epochTime, unixTime, isoTime });
    function set2(opts, logger, level, fallback) {
      const proto = Object.getPrototypeOf(logger);
      logger[level] = logger.levelVal > logger.levels.values[level] ? noop : proto[level] ? proto[level] : _console[level] || _console[fallback] || noop;
      wrap(opts, logger, level);
    }
    function wrap(opts, logger, level) {
      if (!opts.transmit && logger[level] === noop) return;
      logger[level] = /* @__PURE__ */ function(write) {
        return function LOG() {
          const ts3 = opts.timestamp();
          const args = new Array(arguments.length);
          const proto = Object.getPrototypeOf && Object.getPrototypeOf(this) === _console ? _console : this;
          for (var i3 = 0; i3 < args.length; i3++) args[i3] = arguments[i3];
          if (opts.serialize && !opts.asObject) {
            applySerializers(args, this._serialize, this.serializers, this._stdErrSerialize);
          }
          if (opts.asObject) write.call(proto, asObject(this, level, args, ts3));
          else write.apply(proto, args);
          if (opts.transmit) {
            const transmitLevel = opts.transmit.level || logger.level;
            const transmitValue = pino.levels.values[transmitLevel];
            const methodValue = pino.levels.values[level];
            if (methodValue < transmitValue) return;
            transmit(this, {
              ts: ts3,
              methodLevel: level,
              methodValue,
              transmitLevel,
              transmitValue: pino.levels.values[opts.transmit.level || logger.level],
              send: opts.transmit.send,
              val: logger.levelVal
            }, args);
          }
        };
      }(logger[level]);
    }
    function asObject(logger, level, args, ts3) {
      if (logger._serialize) applySerializers(args, logger._serialize, logger.serializers, logger._stdErrSerialize);
      const argsCloned = args.slice();
      let msg = argsCloned[0];
      const o3 = {};
      if (ts3) {
        o3.time = ts3;
      }
      o3.level = pino.levels.values[level];
      let lvl = (logger._childLevel | 0) + 1;
      if (lvl < 1) lvl = 1;
      if (msg !== null && typeof msg === "object") {
        while (lvl-- && typeof argsCloned[0] === "object") {
          Object.assign(o3, argsCloned.shift());
        }
        msg = argsCloned.length ? format(argsCloned.shift(), argsCloned) : void 0;
      } else if (typeof msg === "string") msg = format(argsCloned.shift(), argsCloned);
      if (msg !== void 0) o3.msg = msg;
      return o3;
    }
    function applySerializers(args, serialize, serializers, stdErrSerialize) {
      for (const i3 in args) {
        if (stdErrSerialize && args[i3] instanceof Error) {
          args[i3] = pino.stdSerializers.err(args[i3]);
        } else if (typeof args[i3] === "object" && !Array.isArray(args[i3])) {
          for (const k4 in args[i3]) {
            if (serialize && serialize.indexOf(k4) > -1 && k4 in serializers) {
              args[i3][k4] = serializers[k4](args[i3][k4]);
            }
          }
        }
      }
    }
    function bind(parent, bindings, level) {
      return function() {
        const args = new Array(1 + arguments.length);
        args[0] = bindings;
        for (var i3 = 1; i3 < args.length; i3++) {
          args[i3] = arguments[i3 - 1];
        }
        return parent[level].apply(this, args);
      };
    }
    function transmit(logger, opts, args) {
      const send = opts.send;
      const ts3 = opts.ts;
      const methodLevel = opts.methodLevel;
      const methodValue = opts.methodValue;
      const val = opts.val;
      const bindings = logger._logEvent.bindings;
      applySerializers(
        args,
        logger._serialize || Object.keys(logger.serializers),
        logger.serializers,
        logger._stdErrSerialize === void 0 ? true : logger._stdErrSerialize
      );
      logger._logEvent.ts = ts3;
      logger._logEvent.messages = args.filter(function(arg) {
        return bindings.indexOf(arg) === -1;
      });
      logger._logEvent.level.label = methodLevel;
      logger._logEvent.level.value = methodValue;
      send(methodLevel, logger._logEvent, val);
      logger._logEvent = createLogEventShape(bindings);
    }
    function createLogEventShape(bindings) {
      return {
        ts: 0,
        messages: [],
        bindings: bindings || [],
        level: { label: "", value: 0 }
      };
    }
    function asErrValue(err) {
      const obj = {
        type: err.constructor.name,
        msg: err.message,
        stack: err.stack
      };
      for (const key in err) {
        if (obj[key] === void 0) {
          obj[key] = err[key];
        }
      }
      return obj;
    }
    function getTimeFunction(opts) {
      if (typeof opts.timestamp === "function") {
        return opts.timestamp;
      }
      if (opts.timestamp === false) {
        return nullTime;
      }
      return epochTime;
    }
    function mock() {
      return {};
    }
    function passthrough(a2) {
      return a2;
    }
    function noop() {
    }
    function nullTime() {
      return false;
    }
    function epochTime() {
      return Date.now();
    }
    function unixTime() {
      return Math.round(Date.now() / 1e3);
    }
    function isoTime() {
      return new Date(Date.now()).toISOString();
    }
    function pfGlobalThisOrFallback() {
      function defd(o3) {
        return typeof o3 !== "undefined" && o3;
      }
      try {
        if (typeof globalThis !== "undefined") return globalThis;
        Object.defineProperty(Object.prototype, "globalThis", {
          get: function() {
            delete Object.prototype.globalThis;
            return this.globalThis = this;
          },
          configurable: true
        });
        return globalThis;
      } catch (e2) {
        return defd(self) || defd(window) || defd(this) || {};
      }
    }
  }
});

// node_modules/@walletconnect/environment/dist/cjs/crypto.js
var require_crypto2 = __commonJS({
  "node_modules/@walletconnect/environment/dist/cjs/crypto.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isBrowserCryptoAvailable = exports.getSubtleCrypto = exports.getBrowerCrypto = void 0;
    function getBrowerCrypto() {
      return (global === null || global === void 0 ? void 0 : global.crypto) || (global === null || global === void 0 ? void 0 : global.msCrypto) || {};
    }
    exports.getBrowerCrypto = getBrowerCrypto;
    function getSubtleCrypto() {
      const browserCrypto = getBrowerCrypto();
      return browserCrypto.subtle || browserCrypto.webkitSubtle;
    }
    exports.getSubtleCrypto = getSubtleCrypto;
    function isBrowserCryptoAvailable() {
      return !!getBrowerCrypto() && !!getSubtleCrypto();
    }
    exports.isBrowserCryptoAvailable = isBrowserCryptoAvailable;
  }
});

// node_modules/@walletconnect/environment/dist/cjs/env.js
var require_env = __commonJS({
  "node_modules/@walletconnect/environment/dist/cjs/env.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    exports.isBrowser = exports.isNode = exports.isReactNative = void 0;
    function isReactNative2() {
      return typeof document === "undefined" && typeof navigator !== "undefined" && navigator.product === "ReactNative";
    }
    exports.isReactNative = isReactNative2;
    function isNode2() {
      return typeof process !== "undefined" && typeof process.versions !== "undefined" && typeof process.versions.node !== "undefined";
    }
    exports.isNode = isNode2;
    function isBrowser() {
      return !isReactNative2() && !isNode2();
    }
    exports.isBrowser = isBrowser;
  }
});

// node_modules/@walletconnect/environment/dist/cjs/index.js
var require_cjs5 = __commonJS({
  "node_modules/@walletconnect/environment/dist/cjs/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var tslib_1 = (init_tslib_es6(), __toCommonJS(tslib_es6_exports));
    tslib_1.__exportStar(require_crypto2(), exports);
    tslib_1.__exportStar(require_env(), exports);
  }
});

// node_modules/ws/browser.js
var require_browser3 = __commonJS({
  "node_modules/ws/browser.js"(exports, module) {
    "use strict";
    module.exports = function() {
      throw new Error(
        "ws does not work in the browser. Browser clients must use the native WebSocket object"
      );
    };
  }
});

// node_modules/lodash.isequal/index.js
var require_lodash = __commonJS({
  "node_modules/lodash.isequal/index.js"(exports, module) {
    var LARGE_ARRAY_SIZE = 200;
    var HASH_UNDEFINED = "__lodash_hash_undefined__";
    var COMPARE_PARTIAL_FLAG = 1;
    var COMPARE_UNORDERED_FLAG = 2;
    var MAX_SAFE_INTEGER = 9007199254740991;
    var argsTag = "[object Arguments]";
    var arrayTag = "[object Array]";
    var asyncTag = "[object AsyncFunction]";
    var boolTag = "[object Boolean]";
    var dateTag = "[object Date]";
    var errorTag = "[object Error]";
    var funcTag = "[object Function]";
    var genTag = "[object GeneratorFunction]";
    var mapTag = "[object Map]";
    var numberTag = "[object Number]";
    var nullTag = "[object Null]";
    var objectTag = "[object Object]";
    var promiseTag = "[object Promise]";
    var proxyTag = "[object Proxy]";
    var regexpTag = "[object RegExp]";
    var setTag = "[object Set]";
    var stringTag = "[object String]";
    var symbolTag = "[object Symbol]";
    var undefinedTag = "[object Undefined]";
    var weakMapTag = "[object WeakMap]";
    var arrayBufferTag = "[object ArrayBuffer]";
    var dataViewTag = "[object DataView]";
    var float32Tag = "[object Float32Array]";
    var float64Tag = "[object Float64Array]";
    var int8Tag = "[object Int8Array]";
    var int16Tag = "[object Int16Array]";
    var int32Tag = "[object Int32Array]";
    var uint8Tag = "[object Uint8Array]";
    var uint8ClampedTag = "[object Uint8ClampedArray]";
    var uint16Tag = "[object Uint16Array]";
    var uint32Tag = "[object Uint32Array]";
    var reRegExpChar = /[\\^$.*+?()[\]{}|]/g;
    var reIsHostCtor = /^\[object .+?Constructor\]$/;
    var reIsUint = /^(?:0|[1-9]\d*)$/;
    var typedArrayTags = {};
    typedArrayTags[float32Tag] = typedArrayTags[float64Tag] = typedArrayTags[int8Tag] = typedArrayTags[int16Tag] = typedArrayTags[int32Tag] = typedArrayTags[uint8Tag] = typedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] = typedArrayTags[uint32Tag] = true;
    typedArrayTags[argsTag] = typedArrayTags[arrayTag] = typedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] = typedArrayTags[dataViewTag] = typedArrayTags[dateTag] = typedArrayTags[errorTag] = typedArrayTags[funcTag] = typedArrayTags[mapTag] = typedArrayTags[numberTag] = typedArrayTags[objectTag] = typedArrayTags[regexpTag] = typedArrayTags[setTag] = typedArrayTags[stringTag] = typedArrayTags[weakMapTag] = false;
    var freeGlobal = typeof global == "object" && global && global.Object === Object && global;
    var freeSelf = typeof self == "object" && self && self.Object === Object && self;
    var root = freeGlobal || freeSelf || Function("return this")();
    var freeExports = typeof exports == "object" && exports && !exports.nodeType && exports;
    var freeModule = freeExports && typeof module == "object" && module && !module.nodeType && module;
    var moduleExports = freeModule && freeModule.exports === freeExports;
    var freeProcess = moduleExports && freeGlobal.process;
    var nodeUtil = function() {
      try {
        return freeProcess && freeProcess.binding && freeProcess.binding("util");
      } catch (e2) {
      }
    }();
    var nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;
    function arrayFilter(array, predicate) {
      var index = -1, length2 = array == null ? 0 : array.length, resIndex = 0, result = [];
      while (++index < length2) {
        var value = array[index];
        if (predicate(value, index, array)) {
          result[resIndex++] = value;
        }
      }
      return result;
    }
    function arrayPush(array, values) {
      var index = -1, length2 = values.length, offset = array.length;
      while (++index < length2) {
        array[offset + index] = values[index];
      }
      return array;
    }
    function arraySome(array, predicate) {
      var index = -1, length2 = array == null ? 0 : array.length;
      while (++index < length2) {
        if (predicate(array[index], index, array)) {
          return true;
        }
      }
      return false;
    }
    function baseTimes(n4, iteratee) {
      var index = -1, result = Array(n4);
      while (++index < n4) {
        result[index] = iteratee(index);
      }
      return result;
    }
    function baseUnary(func) {
      return function(value) {
        return func(value);
      };
    }
    function cacheHas(cache, key) {
      return cache.has(key);
    }
    function getValue(object, key) {
      return object == null ? void 0 : object[key];
    }
    function mapToArray(map) {
      var index = -1, result = Array(map.size);
      map.forEach(function(value, key) {
        result[++index] = [key, value];
      });
      return result;
    }
    function overArg(func, transform) {
      return function(arg) {
        return func(transform(arg));
      };
    }
    function setToArray(set2) {
      var index = -1, result = Array(set2.size);
      set2.forEach(function(value) {
        result[++index] = value;
      });
      return result;
    }
    var arrayProto = Array.prototype;
    var funcProto = Function.prototype;
    var objectProto = Object.prototype;
    var coreJsData = root["__core-js_shared__"];
    var funcToString = funcProto.toString;
    var hasOwnProperty = objectProto.hasOwnProperty;
    var maskSrcKey = function() {
      var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || "");
      return uid ? "Symbol(src)_1." + uid : "";
    }();
    var nativeObjectToString = objectProto.toString;
    var reIsNative = RegExp(
      "^" + funcToString.call(hasOwnProperty).replace(reRegExpChar, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"
    );
    var Buffer2 = moduleExports ? root.Buffer : void 0;
    var Symbol2 = root.Symbol;
    var Uint8Array2 = root.Uint8Array;
    var propertyIsEnumerable = objectProto.propertyIsEnumerable;
    var splice = arrayProto.splice;
    var symToStringTag = Symbol2 ? Symbol2.toStringTag : void 0;
    var nativeGetSymbols = Object.getOwnPropertySymbols;
    var nativeIsBuffer = Buffer2 ? Buffer2.isBuffer : void 0;
    var nativeKeys = overArg(Object.keys, Object);
    var DataView2 = getNative(root, "DataView");
    var Map2 = getNative(root, "Map");
    var Promise2 = getNative(root, "Promise");
    var Set2 = getNative(root, "Set");
    var WeakMap2 = getNative(root, "WeakMap");
    var nativeCreate = getNative(Object, "create");
    var dataViewCtorString = toSource(DataView2);
    var mapCtorString = toSource(Map2);
    var promiseCtorString = toSource(Promise2);
    var setCtorString = toSource(Set2);
    var weakMapCtorString = toSource(WeakMap2);
    var symbolProto = Symbol2 ? Symbol2.prototype : void 0;
    var symbolValueOf = symbolProto ? symbolProto.valueOf : void 0;
    function Hash(entries) {
      var index = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length2) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function hashClear() {
      this.__data__ = nativeCreate ? nativeCreate(null) : {};
      this.size = 0;
    }
    function hashDelete(key) {
      var result = this.has(key) && delete this.__data__[key];
      this.size -= result ? 1 : 0;
      return result;
    }
    function hashGet(key) {
      var data = this.__data__;
      if (nativeCreate) {
        var result = data[key];
        return result === HASH_UNDEFINED ? void 0 : result;
      }
      return hasOwnProperty.call(data, key) ? data[key] : void 0;
    }
    function hashHas(key) {
      var data = this.__data__;
      return nativeCreate ? data[key] !== void 0 : hasOwnProperty.call(data, key);
    }
    function hashSet(key, value) {
      var data = this.__data__;
      this.size += this.has(key) ? 0 : 1;
      data[key] = nativeCreate && value === void 0 ? HASH_UNDEFINED : value;
      return this;
    }
    Hash.prototype.clear = hashClear;
    Hash.prototype["delete"] = hashDelete;
    Hash.prototype.get = hashGet;
    Hash.prototype.has = hashHas;
    Hash.prototype.set = hashSet;
    function ListCache(entries) {
      var index = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length2) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function listCacheClear() {
      this.__data__ = [];
      this.size = 0;
    }
    function listCacheDelete(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        return false;
      }
      var lastIndex = data.length - 1;
      if (index == lastIndex) {
        data.pop();
      } else {
        splice.call(data, index, 1);
      }
      --this.size;
      return true;
    }
    function listCacheGet(key) {
      var data = this.__data__, index = assocIndexOf(data, key);
      return index < 0 ? void 0 : data[index][1];
    }
    function listCacheHas(key) {
      return assocIndexOf(this.__data__, key) > -1;
    }
    function listCacheSet(key, value) {
      var data = this.__data__, index = assocIndexOf(data, key);
      if (index < 0) {
        ++this.size;
        data.push([key, value]);
      } else {
        data[index][1] = value;
      }
      return this;
    }
    ListCache.prototype.clear = listCacheClear;
    ListCache.prototype["delete"] = listCacheDelete;
    ListCache.prototype.get = listCacheGet;
    ListCache.prototype.has = listCacheHas;
    ListCache.prototype.set = listCacheSet;
    function MapCache(entries) {
      var index = -1, length2 = entries == null ? 0 : entries.length;
      this.clear();
      while (++index < length2) {
        var entry = entries[index];
        this.set(entry[0], entry[1]);
      }
    }
    function mapCacheClear() {
      this.size = 0;
      this.__data__ = {
        "hash": new Hash(),
        "map": new (Map2 || ListCache)(),
        "string": new Hash()
      };
    }
    function mapCacheDelete(key) {
      var result = getMapData(this, key)["delete"](key);
      this.size -= result ? 1 : 0;
      return result;
    }
    function mapCacheGet(key) {
      return getMapData(this, key).get(key);
    }
    function mapCacheHas(key) {
      return getMapData(this, key).has(key);
    }
    function mapCacheSet(key, value) {
      var data = getMapData(this, key), size = data.size;
      data.set(key, value);
      this.size += data.size == size ? 0 : 1;
      return this;
    }
    MapCache.prototype.clear = mapCacheClear;
    MapCache.prototype["delete"] = mapCacheDelete;
    MapCache.prototype.get = mapCacheGet;
    MapCache.prototype.has = mapCacheHas;
    MapCache.prototype.set = mapCacheSet;
    function SetCache(values) {
      var index = -1, length2 = values == null ? 0 : values.length;
      this.__data__ = new MapCache();
      while (++index < length2) {
        this.add(values[index]);
      }
    }
    function setCacheAdd(value) {
      this.__data__.set(value, HASH_UNDEFINED);
      return this;
    }
    function setCacheHas(value) {
      return this.__data__.has(value);
    }
    SetCache.prototype.add = SetCache.prototype.push = setCacheAdd;
    SetCache.prototype.has = setCacheHas;
    function Stack(entries) {
      var data = this.__data__ = new ListCache(entries);
      this.size = data.size;
    }
    function stackClear() {
      this.__data__ = new ListCache();
      this.size = 0;
    }
    function stackDelete(key) {
      var data = this.__data__, result = data["delete"](key);
      this.size = data.size;
      return result;
    }
    function stackGet(key) {
      return this.__data__.get(key);
    }
    function stackHas(key) {
      return this.__data__.has(key);
    }
    function stackSet(key, value) {
      var data = this.__data__;
      if (data instanceof ListCache) {
        var pairs = data.__data__;
        if (!Map2 || pairs.length < LARGE_ARRAY_SIZE - 1) {
          pairs.push([key, value]);
          this.size = ++data.size;
          return this;
        }
        data = this.__data__ = new MapCache(pairs);
      }
      data.set(key, value);
      this.size = data.size;
      return this;
    }
    Stack.prototype.clear = stackClear;
    Stack.prototype["delete"] = stackDelete;
    Stack.prototype.get = stackGet;
    Stack.prototype.has = stackHas;
    Stack.prototype.set = stackSet;
    function arrayLikeKeys(value, inherited) {
      var isArr = isArray(value), isArg = !isArr && isArguments(value), isBuff = !isArr && !isArg && isBuffer(value), isType = !isArr && !isArg && !isBuff && isTypedArray(value), skipIndexes = isArr || isArg || isBuff || isType, result = skipIndexes ? baseTimes(value.length, String) : [], length2 = result.length;
      for (var key in value) {
        if ((inherited || hasOwnProperty.call(value, key)) && !(skipIndexes && // Safari 9 has enumerable `arguments.length` in strict mode.
        (key == "length" || // Node.js 0.10 has enumerable non-index properties on buffers.
        isBuff && (key == "offset" || key == "parent") || // PhantomJS 2 has enumerable non-index properties on typed arrays.
        isType && (key == "buffer" || key == "byteLength" || key == "byteOffset") || // Skip index properties.
        isIndex(key, length2)))) {
          result.push(key);
        }
      }
      return result;
    }
    function assocIndexOf(array, key) {
      var length2 = array.length;
      while (length2--) {
        if (eq(array[length2][0], key)) {
          return length2;
        }
      }
      return -1;
    }
    function baseGetAllKeys(object, keysFunc, symbolsFunc) {
      var result = keysFunc(object);
      return isArray(object) ? result : arrayPush(result, symbolsFunc(object));
    }
    function baseGetTag(value) {
      if (value == null) {
        return value === void 0 ? undefinedTag : nullTag;
      }
      return symToStringTag && symToStringTag in Object(value) ? getRawTag(value) : objectToString(value);
    }
    function baseIsArguments(value) {
      return isObjectLike(value) && baseGetTag(value) == argsTag;
    }
    function baseIsEqual(value, other, bitmask, customizer, stack) {
      if (value === other) {
        return true;
      }
      if (value == null || other == null || !isObjectLike(value) && !isObjectLike(other)) {
        return value !== value && other !== other;
      }
      return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);
    }
    function baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {
      var objIsArr = isArray(object), othIsArr = isArray(other), objTag = objIsArr ? arrayTag : getTag(object), othTag = othIsArr ? arrayTag : getTag(other);
      objTag = objTag == argsTag ? objectTag : objTag;
      othTag = othTag == argsTag ? objectTag : othTag;
      var objIsObj = objTag == objectTag, othIsObj = othTag == objectTag, isSameTag = objTag == othTag;
      if (isSameTag && isBuffer(object)) {
        if (!isBuffer(other)) {
          return false;
        }
        objIsArr = true;
        objIsObj = false;
      }
      if (isSameTag && !objIsObj) {
        stack || (stack = new Stack());
        return objIsArr || isTypedArray(object) ? equalArrays(object, other, bitmask, customizer, equalFunc, stack) : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);
      }
      if (!(bitmask & COMPARE_PARTIAL_FLAG)) {
        var objIsWrapped = objIsObj && hasOwnProperty.call(object, "__wrapped__"), othIsWrapped = othIsObj && hasOwnProperty.call(other, "__wrapped__");
        if (objIsWrapped || othIsWrapped) {
          var objUnwrapped = objIsWrapped ? object.value() : object, othUnwrapped = othIsWrapped ? other.value() : other;
          stack || (stack = new Stack());
          return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);
        }
      }
      if (!isSameTag) {
        return false;
      }
      stack || (stack = new Stack());
      return equalObjects(object, other, bitmask, customizer, equalFunc, stack);
    }
    function baseIsNative(value) {
      if (!isObject(value) || isMasked(value)) {
        return false;
      }
      var pattern = isFunction(value) ? reIsNative : reIsHostCtor;
      return pattern.test(toSource(value));
    }
    function baseIsTypedArray(value) {
      return isObjectLike(value) && isLength(value.length) && !!typedArrayTags[baseGetTag(value)];
    }
    function baseKeys(object) {
      if (!isPrototype(object)) {
        return nativeKeys(object);
      }
      var result = [];
      for (var key in Object(object)) {
        if (hasOwnProperty.call(object, key) && key != "constructor") {
          result.push(key);
        }
      }
      return result;
    }
    function equalArrays(array, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, arrLength = array.length, othLength = other.length;
      if (arrLength != othLength && !(isPartial && othLength > arrLength)) {
        return false;
      }
      var stacked = stack.get(array);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var index = -1, result = true, seen = bitmask & COMPARE_UNORDERED_FLAG ? new SetCache() : void 0;
      stack.set(array, other);
      stack.set(other, array);
      while (++index < arrLength) {
        var arrValue = array[index], othValue = other[index];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, arrValue, index, other, array, stack) : customizer(arrValue, othValue, index, array, other, stack);
        }
        if (compared !== void 0) {
          if (compared) {
            continue;
          }
          result = false;
          break;
        }
        if (seen) {
          if (!arraySome(other, function(othValue2, othIndex) {
            if (!cacheHas(seen, othIndex) && (arrValue === othValue2 || equalFunc(arrValue, othValue2, bitmask, customizer, stack))) {
              return seen.push(othIndex);
            }
          })) {
            result = false;
            break;
          }
        } else if (!(arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {
          result = false;
          break;
        }
      }
      stack["delete"](array);
      stack["delete"](other);
      return result;
    }
    function equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {
      switch (tag) {
        case dataViewTag:
          if (object.byteLength != other.byteLength || object.byteOffset != other.byteOffset) {
            return false;
          }
          object = object.buffer;
          other = other.buffer;
        case arrayBufferTag:
          if (object.byteLength != other.byteLength || !equalFunc(new Uint8Array2(object), new Uint8Array2(other))) {
            return false;
          }
          return true;
        case boolTag:
        case dateTag:
        case numberTag:
          return eq(+object, +other);
        case errorTag:
          return object.name == other.name && object.message == other.message;
        case regexpTag:
        case stringTag:
          return object == other + "";
        case mapTag:
          var convert = mapToArray;
        case setTag:
          var isPartial = bitmask & COMPARE_PARTIAL_FLAG;
          convert || (convert = setToArray);
          if (object.size != other.size && !isPartial) {
            return false;
          }
          var stacked = stack.get(object);
          if (stacked) {
            return stacked == other;
          }
          bitmask |= COMPARE_UNORDERED_FLAG;
          stack.set(object, other);
          var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);
          stack["delete"](object);
          return result;
        case symbolTag:
          if (symbolValueOf) {
            return symbolValueOf.call(object) == symbolValueOf.call(other);
          }
      }
      return false;
    }
    function equalObjects(object, other, bitmask, customizer, equalFunc, stack) {
      var isPartial = bitmask & COMPARE_PARTIAL_FLAG, objProps = getAllKeys(object), objLength = objProps.length, othProps = getAllKeys(other), othLength = othProps.length;
      if (objLength != othLength && !isPartial) {
        return false;
      }
      var index = objLength;
      while (index--) {
        var key = objProps[index];
        if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {
          return false;
        }
      }
      var stacked = stack.get(object);
      if (stacked && stack.get(other)) {
        return stacked == other;
      }
      var result = true;
      stack.set(object, other);
      stack.set(other, object);
      var skipCtor = isPartial;
      while (++index < objLength) {
        key = objProps[index];
        var objValue = object[key], othValue = other[key];
        if (customizer) {
          var compared = isPartial ? customizer(othValue, objValue, key, other, object, stack) : customizer(objValue, othValue, key, object, other, stack);
        }
        if (!(compared === void 0 ? objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack) : compared)) {
          result = false;
          break;
        }
        skipCtor || (skipCtor = key == "constructor");
      }
      if (result && !skipCtor) {
        var objCtor = object.constructor, othCtor = other.constructor;
        if (objCtor != othCtor && ("constructor" in object && "constructor" in other) && !(typeof objCtor == "function" && objCtor instanceof objCtor && typeof othCtor == "function" && othCtor instanceof othCtor)) {
          result = false;
        }
      }
      stack["delete"](object);
      stack["delete"](other);
      return result;
    }
    function getAllKeys(object) {
      return baseGetAllKeys(object, keys2, getSymbols);
    }
    function getMapData(map, key) {
      var data = map.__data__;
      return isKeyable(key) ? data[typeof key == "string" ? "string" : "hash"] : data.map;
    }
    function getNative(object, key) {
      var value = getValue(object, key);
      return baseIsNative(value) ? value : void 0;
    }
    function getRawTag(value) {
      var isOwn = hasOwnProperty.call(value, symToStringTag), tag = value[symToStringTag];
      try {
        value[symToStringTag] = void 0;
        var unmasked = true;
      } catch (e2) {
      }
      var result = nativeObjectToString.call(value);
      if (unmasked) {
        if (isOwn) {
          value[symToStringTag] = tag;
        } else {
          delete value[symToStringTag];
        }
      }
      return result;
    }
    var getSymbols = !nativeGetSymbols ? stubArray : function(object) {
      if (object == null) {
        return [];
      }
      object = Object(object);
      return arrayFilter(nativeGetSymbols(object), function(symbol) {
        return propertyIsEnumerable.call(object, symbol);
      });
    };
    var getTag = baseGetTag;
    if (DataView2 && getTag(new DataView2(new ArrayBuffer(1))) != dataViewTag || Map2 && getTag(new Map2()) != mapTag || Promise2 && getTag(Promise2.resolve()) != promiseTag || Set2 && getTag(new Set2()) != setTag || WeakMap2 && getTag(new WeakMap2()) != weakMapTag) {
      getTag = function(value) {
        var result = baseGetTag(value), Ctor = result == objectTag ? value.constructor : void 0, ctorString = Ctor ? toSource(Ctor) : "";
        if (ctorString) {
          switch (ctorString) {
            case dataViewCtorString:
              return dataViewTag;
            case mapCtorString:
              return mapTag;
            case promiseCtorString:
              return promiseTag;
            case setCtorString:
              return setTag;
            case weakMapCtorString:
              return weakMapTag;
          }
        }
        return result;
      };
    }
    function isIndex(value, length2) {
      length2 = length2 == null ? MAX_SAFE_INTEGER : length2;
      return !!length2 && (typeof value == "number" || reIsUint.test(value)) && (value > -1 && value % 1 == 0 && value < length2);
    }
    function isKeyable(value) {
      var type = typeof value;
      return type == "string" || type == "number" || type == "symbol" || type == "boolean" ? value !== "__proto__" : value === null;
    }
    function isMasked(func) {
      return !!maskSrcKey && maskSrcKey in func;
    }
    function isPrototype(value) {
      var Ctor = value && value.constructor, proto = typeof Ctor == "function" && Ctor.prototype || objectProto;
      return value === proto;
    }
    function objectToString(value) {
      return nativeObjectToString.call(value);
    }
    function toSource(func) {
      if (func != null) {
        try {
          return funcToString.call(func);
        } catch (e2) {
        }
        try {
          return func + "";
        } catch (e2) {
        }
      }
      return "";
    }
    function eq(value, other) {
      return value === other || value !== value && other !== other;
    }
    var isArguments = baseIsArguments(/* @__PURE__ */ function() {
      return arguments;
    }()) ? baseIsArguments : function(value) {
      return isObjectLike(value) && hasOwnProperty.call(value, "callee") && !propertyIsEnumerable.call(value, "callee");
    };
    var isArray = Array.isArray;
    function isArrayLike(value) {
      return value != null && isLength(value.length) && !isFunction(value);
    }
    var isBuffer = nativeIsBuffer || stubFalse;
    function isEqual(value, other) {
      return baseIsEqual(value, other);
    }
    function isFunction(value) {
      if (!isObject(value)) {
        return false;
      }
      var tag = baseGetTag(value);
      return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;
    }
    function isLength(value) {
      return typeof value == "number" && value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;
    }
    function isObject(value) {
      var type = typeof value;
      return value != null && (type == "object" || type == "function");
    }
    function isObjectLike(value) {
      return value != null && typeof value == "object";
    }
    var isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;
    function keys2(object) {
      return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);
    }
    function stubArray() {
      return [];
    }
    function stubFalse() {
      return false;
    }
    module.exports = isEqual;
  }
});

// node_modules/cross-fetch/dist/browser-ponyfill.js
var require_browser_ponyfill = __commonJS({
  "node_modules/cross-fetch/dist/browser-ponyfill.js"(exports, module) {
    var __global__ = typeof globalThis !== "undefined" && globalThis || typeof self !== "undefined" && self || typeof global !== "undefined" && global;
    var __globalThis__ = function() {
      function F() {
        this.fetch = false;
        this.DOMException = __global__.DOMException;
      }
      F.prototype = __global__;
      return new F();
    }();
    (function(globalThis2) {
      var irrelevant = function(exports2) {
        var g6 = typeof globalThis2 !== "undefined" && globalThis2 || typeof self !== "undefined" && self || // eslint-disable-next-line no-undef
        typeof global !== "undefined" && global || {};
        var support = {
          searchParams: "URLSearchParams" in g6,
          iterable: "Symbol" in g6 && "iterator" in Symbol,
          blob: "FileReader" in g6 && "Blob" in g6 && function() {
            try {
              new Blob();
              return true;
            } catch (e2) {
              return false;
            }
          }(),
          formData: "FormData" in g6,
          arrayBuffer: "ArrayBuffer" in g6
        };
        function isDataView(obj) {
          return obj && DataView.prototype.isPrototypeOf(obj);
        }
        if (support.arrayBuffer) {
          var viewClasses = [
            "[object Int8Array]",
            "[object Uint8Array]",
            "[object Uint8ClampedArray]",
            "[object Int16Array]",
            "[object Uint16Array]",
            "[object Int32Array]",
            "[object Uint32Array]",
            "[object Float32Array]",
            "[object Float64Array]"
          ];
          var isArrayBufferView = ArrayBuffer.isView || function(obj) {
            return obj && viewClasses.indexOf(Object.prototype.toString.call(obj)) > -1;
          };
        }
        function normalizeName(name2) {
          if (typeof name2 !== "string") {
            name2 = String(name2);
          }
          if (/[^a-z0-9\-#$%&'*+.^_`|~!]/i.test(name2) || name2 === "") {
            throw new TypeError('Invalid character in header field name: "' + name2 + '"');
          }
          return name2.toLowerCase();
        }
        function normalizeValue(value) {
          if (typeof value !== "string") {
            value = String(value);
          }
          return value;
        }
        function iteratorFor(items) {
          var iterator = {
            next: function() {
              var value = items.shift();
              return { done: value === void 0, value };
            }
          };
          if (support.iterable) {
            iterator[Symbol.iterator] = function() {
              return iterator;
            };
          }
          return iterator;
        }
        function Headers(headers) {
          this.map = {};
          if (headers instanceof Headers) {
            headers.forEach(function(value, name2) {
              this.append(name2, value);
            }, this);
          } else if (Array.isArray(headers)) {
            headers.forEach(function(header) {
              if (header.length != 2) {
                throw new TypeError("Headers constructor: expected name/value pair to be length 2, found" + header.length);
              }
              this.append(header[0], header[1]);
            }, this);
          } else if (headers) {
            Object.getOwnPropertyNames(headers).forEach(function(name2) {
              this.append(name2, headers[name2]);
            }, this);
          }
        }
        Headers.prototype.append = function(name2, value) {
          name2 = normalizeName(name2);
          value = normalizeValue(value);
          var oldValue = this.map[name2];
          this.map[name2] = oldValue ? oldValue + ", " + value : value;
        };
        Headers.prototype["delete"] = function(name2) {
          delete this.map[normalizeName(name2)];
        };
        Headers.prototype.get = function(name2) {
          name2 = normalizeName(name2);
          return this.has(name2) ? this.map[name2] : null;
        };
        Headers.prototype.has = function(name2) {
          return this.map.hasOwnProperty(normalizeName(name2));
        };
        Headers.prototype.set = function(name2, value) {
          this.map[normalizeName(name2)] = normalizeValue(value);
        };
        Headers.prototype.forEach = function(callback, thisArg) {
          for (var name2 in this.map) {
            if (this.map.hasOwnProperty(name2)) {
              callback.call(thisArg, this.map[name2], name2, this);
            }
          }
        };
        Headers.prototype.keys = function() {
          var items = [];
          this.forEach(function(value, name2) {
            items.push(name2);
          });
          return iteratorFor(items);
        };
        Headers.prototype.values = function() {
          var items = [];
          this.forEach(function(value) {
            items.push(value);
          });
          return iteratorFor(items);
        };
        Headers.prototype.entries = function() {
          var items = [];
          this.forEach(function(value, name2) {
            items.push([name2, value]);
          });
          return iteratorFor(items);
        };
        if (support.iterable) {
          Headers.prototype[Symbol.iterator] = Headers.prototype.entries;
        }
        function consumed(body) {
          if (body._noBody) return;
          if (body.bodyUsed) {
            return Promise.reject(new TypeError("Already read"));
          }
          body.bodyUsed = true;
        }
        function fileReaderReady(reader) {
          return new Promise(function(resolve, reject) {
            reader.onload = function() {
              resolve(reader.result);
            };
            reader.onerror = function() {
              reject(reader.error);
            };
          });
        }
        function readBlobAsArrayBuffer(blob) {
          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          reader.readAsArrayBuffer(blob);
          return promise;
        }
        function readBlobAsText(blob) {
          var reader = new FileReader();
          var promise = fileReaderReady(reader);
          var match = /charset=([A-Za-z0-9_-]+)/.exec(blob.type);
          var encoding = match ? match[1] : "utf-8";
          reader.readAsText(blob, encoding);
          return promise;
        }
        function readArrayBufferAsText(buf) {
          var view = new Uint8Array(buf);
          var chars = new Array(view.length);
          for (var i3 = 0; i3 < view.length; i3++) {
            chars[i3] = String.fromCharCode(view[i3]);
          }
          return chars.join("");
        }
        function bufferClone(buf) {
          if (buf.slice) {
            return buf.slice(0);
          } else {
            var view = new Uint8Array(buf.byteLength);
            view.set(new Uint8Array(buf));
            return view.buffer;
          }
        }
        function Body() {
          this.bodyUsed = false;
          this._initBody = function(body) {
            this.bodyUsed = this.bodyUsed;
            this._bodyInit = body;
            if (!body) {
              this._noBody = true;
              this._bodyText = "";
            } else if (typeof body === "string") {
              this._bodyText = body;
            } else if (support.blob && Blob.prototype.isPrototypeOf(body)) {
              this._bodyBlob = body;
            } else if (support.formData && FormData.prototype.isPrototypeOf(body)) {
              this._bodyFormData = body;
            } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
              this._bodyText = body.toString();
            } else if (support.arrayBuffer && support.blob && isDataView(body)) {
              this._bodyArrayBuffer = bufferClone(body.buffer);
              this._bodyInit = new Blob([this._bodyArrayBuffer]);
            } else if (support.arrayBuffer && (ArrayBuffer.prototype.isPrototypeOf(body) || isArrayBufferView(body))) {
              this._bodyArrayBuffer = bufferClone(body);
            } else {
              this._bodyText = body = Object.prototype.toString.call(body);
            }
            if (!this.headers.get("content-type")) {
              if (typeof body === "string") {
                this.headers.set("content-type", "text/plain;charset=UTF-8");
              } else if (this._bodyBlob && this._bodyBlob.type) {
                this.headers.set("content-type", this._bodyBlob.type);
              } else if (support.searchParams && URLSearchParams.prototype.isPrototypeOf(body)) {
                this.headers.set("content-type", "application/x-www-form-urlencoded;charset=UTF-8");
              }
            }
          };
          if (support.blob) {
            this.blob = function() {
              var rejected = consumed(this);
              if (rejected) {
                return rejected;
              }
              if (this._bodyBlob) {
                return Promise.resolve(this._bodyBlob);
              } else if (this._bodyArrayBuffer) {
                return Promise.resolve(new Blob([this._bodyArrayBuffer]));
              } else if (this._bodyFormData) {
                throw new Error("could not read FormData body as blob");
              } else {
                return Promise.resolve(new Blob([this._bodyText]));
              }
            };
          }
          this.arrayBuffer = function() {
            if (this._bodyArrayBuffer) {
              var isConsumed = consumed(this);
              if (isConsumed) {
                return isConsumed;
              } else if (ArrayBuffer.isView(this._bodyArrayBuffer)) {
                return Promise.resolve(
                  this._bodyArrayBuffer.buffer.slice(
                    this._bodyArrayBuffer.byteOffset,
                    this._bodyArrayBuffer.byteOffset + this._bodyArrayBuffer.byteLength
                  )
                );
              } else {
                return Promise.resolve(this._bodyArrayBuffer);
              }
            } else if (support.blob) {
              return this.blob().then(readBlobAsArrayBuffer);
            } else {
              throw new Error("could not read as ArrayBuffer");
            }
          };
          this.text = function() {
            var rejected = consumed(this);
            if (rejected) {
              return rejected;
            }
            if (this._bodyBlob) {
              return readBlobAsText(this._bodyBlob);
            } else if (this._bodyArrayBuffer) {
              return Promise.resolve(readArrayBufferAsText(this._bodyArrayBuffer));
            } else if (this._bodyFormData) {
              throw new Error("could not read FormData body as text");
            } else {
              return Promise.resolve(this._bodyText);
            }
          };
          if (support.formData) {
            this.formData = function() {
              return this.text().then(decode6);
            };
          }
          this.json = function() {
            return this.text().then(JSON.parse);
          };
          return this;
        }
        var methods = ["CONNECT", "DELETE", "GET", "HEAD", "OPTIONS", "PATCH", "POST", "PUT", "TRACE"];
        function normalizeMethod(method) {
          var upcased = method.toUpperCase();
          return methods.indexOf(upcased) > -1 ? upcased : method;
        }
        function Request(input, options) {
          if (!(this instanceof Request)) {
            throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
          }
          options = options || {};
          var body = options.body;
          if (input instanceof Request) {
            if (input.bodyUsed) {
              throw new TypeError("Already read");
            }
            this.url = input.url;
            this.credentials = input.credentials;
            if (!options.headers) {
              this.headers = new Headers(input.headers);
            }
            this.method = input.method;
            this.mode = input.mode;
            this.signal = input.signal;
            if (!body && input._bodyInit != null) {
              body = input._bodyInit;
              input.bodyUsed = true;
            }
          } else {
            this.url = String(input);
          }
          this.credentials = options.credentials || this.credentials || "same-origin";
          if (options.headers || !this.headers) {
            this.headers = new Headers(options.headers);
          }
          this.method = normalizeMethod(options.method || this.method || "GET");
          this.mode = options.mode || this.mode || null;
          this.signal = options.signal || this.signal || function() {
            if ("AbortController" in g6) {
              var ctrl = new AbortController();
              return ctrl.signal;
            }
          }();
          this.referrer = null;
          if ((this.method === "GET" || this.method === "HEAD") && body) {
            throw new TypeError("Body not allowed for GET or HEAD requests");
          }
          this._initBody(body);
          if (this.method === "GET" || this.method === "HEAD") {
            if (options.cache === "no-store" || options.cache === "no-cache") {
              var reParamSearch = /([?&])_=[^&]*/;
              if (reParamSearch.test(this.url)) {
                this.url = this.url.replace(reParamSearch, "$1_=" + (/* @__PURE__ */ new Date()).getTime());
              } else {
                var reQueryString = /\?/;
                this.url += (reQueryString.test(this.url) ? "&" : "?") + "_=" + (/* @__PURE__ */ new Date()).getTime();
              }
            }
          }
        }
        Request.prototype.clone = function() {
          return new Request(this, { body: this._bodyInit });
        };
        function decode6(body) {
          var form = new FormData();
          body.trim().split("&").forEach(function(bytes) {
            if (bytes) {
              var split = bytes.split("=");
              var name2 = split.shift().replace(/\+/g, " ");
              var value = split.join("=").replace(/\+/g, " ");
              form.append(decodeURIComponent(name2), decodeURIComponent(value));
            }
          });
          return form;
        }
        function parseHeaders(rawHeaders) {
          var headers = new Headers();
          var preProcessedHeaders = rawHeaders.replace(/\r?\n[\t ]+/g, " ");
          preProcessedHeaders.split("\r").map(function(header) {
            return header.indexOf("\n") === 0 ? header.substr(1, header.length) : header;
          }).forEach(function(line) {
            var parts = line.split(":");
            var key = parts.shift().trim();
            if (key) {
              var value = parts.join(":").trim();
              try {
                headers.append(key, value);
              } catch (error) {
                console.warn("Response " + error.message);
              }
            }
          });
          return headers;
        }
        Body.call(Request.prototype);
        function Response(bodyInit, options) {
          if (!(this instanceof Response)) {
            throw new TypeError('Please use the "new" operator, this DOM object constructor cannot be called as a function.');
          }
          if (!options) {
            options = {};
          }
          this.type = "default";
          this.status = options.status === void 0 ? 200 : options.status;
          if (this.status < 200 || this.status > 599) {
            throw new RangeError("Failed to construct 'Response': The status provided (0) is outside the range [200, 599].");
          }
          this.ok = this.status >= 200 && this.status < 300;
          this.statusText = options.statusText === void 0 ? "" : "" + options.statusText;
          this.headers = new Headers(options.headers);
          this.url = options.url || "";
          this._initBody(bodyInit);
        }
        Body.call(Response.prototype);
        Response.prototype.clone = function() {
          return new Response(this._bodyInit, {
            status: this.status,
            statusText: this.statusText,
            headers: new Headers(this.headers),
            url: this.url
          });
        };
        Response.error = function() {
          var response = new Response(null, { status: 200, statusText: "" });
          response.ok = false;
          response.status = 0;
          response.type = "error";
          return response;
        };
        var redirectStatuses = [301, 302, 303, 307, 308];
        Response.redirect = function(url, status) {
          if (redirectStatuses.indexOf(status) === -1) {
            throw new RangeError("Invalid status code");
          }
          return new Response(null, { status, headers: { location: url } });
        };
        exports2.DOMException = g6.DOMException;
        try {
          new exports2.DOMException();
        } catch (err) {
          exports2.DOMException = function(message, name2) {
            this.message = message;
            this.name = name2;
            var error = Error(message);
            this.stack = error.stack;
          };
          exports2.DOMException.prototype = Object.create(Error.prototype);
          exports2.DOMException.prototype.constructor = exports2.DOMException;
        }
        function fetch2(input, init) {
          return new Promise(function(resolve, reject) {
            var request = new Request(input, init);
            if (request.signal && request.signal.aborted) {
              return reject(new exports2.DOMException("Aborted", "AbortError"));
            }
            var xhr = new XMLHttpRequest();
            function abortXhr() {
              xhr.abort();
            }
            xhr.onload = function() {
              var options = {
                statusText: xhr.statusText,
                headers: parseHeaders(xhr.getAllResponseHeaders() || "")
              };
              if (request.url.indexOf("file://") === 0 && (xhr.status < 200 || xhr.status > 599)) {
                options.status = 200;
              } else {
                options.status = xhr.status;
              }
              options.url = "responseURL" in xhr ? xhr.responseURL : options.headers.get("X-Request-URL");
              var body = "response" in xhr ? xhr.response : xhr.responseText;
              setTimeout(function() {
                resolve(new Response(body, options));
              }, 0);
            };
            xhr.onerror = function() {
              setTimeout(function() {
                reject(new TypeError("Network request failed"));
              }, 0);
            };
            xhr.ontimeout = function() {
              setTimeout(function() {
                reject(new TypeError("Network request timed out"));
              }, 0);
            };
            xhr.onabort = function() {
              setTimeout(function() {
                reject(new exports2.DOMException("Aborted", "AbortError"));
              }, 0);
            };
            function fixUrl(url) {
              try {
                return url === "" && g6.location.href ? g6.location.href : url;
              } catch (e2) {
                return url;
              }
            }
            xhr.open(request.method, fixUrl(request.url), true);
            if (request.credentials === "include") {
              xhr.withCredentials = true;
            } else if (request.credentials === "omit") {
              xhr.withCredentials = false;
            }
            if ("responseType" in xhr) {
              if (support.blob) {
                xhr.responseType = "blob";
              } else if (support.arrayBuffer) {
                xhr.responseType = "arraybuffer";
              }
            }
            if (init && typeof init.headers === "object" && !(init.headers instanceof Headers || g6.Headers && init.headers instanceof g6.Headers)) {
              var names = [];
              Object.getOwnPropertyNames(init.headers).forEach(function(name2) {
                names.push(normalizeName(name2));
                xhr.setRequestHeader(name2, normalizeValue(init.headers[name2]));
              });
              request.headers.forEach(function(value, name2) {
                if (names.indexOf(name2) === -1) {
                  xhr.setRequestHeader(name2, value);
                }
              });
            } else {
              request.headers.forEach(function(value, name2) {
                xhr.setRequestHeader(name2, value);
              });
            }
            if (request.signal) {
              request.signal.addEventListener("abort", abortXhr);
              xhr.onreadystatechange = function() {
                if (xhr.readyState === 4) {
                  request.signal.removeEventListener("abort", abortXhr);
                }
              };
            }
            xhr.send(typeof request._bodyInit === "undefined" ? null : request._bodyInit);
          });
        }
        fetch2.polyfill = true;
        if (!g6.fetch) {
          g6.fetch = fetch2;
          g6.Headers = Headers;
          g6.Request = Request;
          g6.Response = Response;
        }
        exports2.Headers = Headers;
        exports2.Request = Request;
        exports2.Response = Response;
        exports2.fetch = fetch2;
        Object.defineProperty(exports2, "__esModule", { value: true });
        return exports2;
      }({});
    })(__globalThis__);
    __globalThis__.fetch.ponyfill = true;
    delete __globalThis__.fetch.polyfill;
    var ctx = __global__.fetch ? __global__ : __globalThis__;
    exports = ctx.fetch;
    exports.default = ctx.fetch;
    exports.fetch = ctx.fetch;
    exports.Headers = ctx.Headers;
    exports.Request = ctx.Request;
    exports.Response = ctx.Response;
    module.exports = exports;
  }
});

// node_modules/@walletconnect/ethereum-provider/dist/index.es.js
var import_events10 = __toESM(require_events());

// node_modules/@walletconnect/utils/dist/index.es.js
var import_chacha20poly1305 = __toESM(require_chacha20poly1305());
var import_hkdf = __toESM(require_hkdf());
var import_random = __toESM(require_random());
var import_sha256 = __toESM(require_sha256());
var ue = __toESM(require_x25519());

// node_modules/uint8arrays/esm/src/util/as-uint8array.js
function asUint8Array(buf) {
  if (globalThis.Buffer != null) {
    return new Uint8Array(buf.buffer, buf.byteOffset, buf.byteLength);
  }
  return buf;
}

// node_modules/uint8arrays/esm/src/alloc.js
function allocUnsafe(size = 0) {
  if (globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null) {
    return asUint8Array(globalThis.Buffer.allocUnsafe(size));
  }
  return new Uint8Array(size);
}

// node_modules/uint8arrays/esm/src/concat.js
function concat(arrays, length2) {
  if (!length2) {
    length2 = arrays.reduce((acc, curr) => acc + curr.length, 0);
  }
  const output = allocUnsafe(length2);
  let offset = 0;
  for (const arr of arrays) {
    output.set(arr, offset);
    offset += arr.length;
  }
  return asUint8Array(output);
}

// node_modules/multiformats/esm/src/bases/identity.js
var identity_exports = {};
__export(identity_exports, {
  identity: () => identity
});

// node_modules/multiformats/esm/vendor/base-x.js
function base(ALPHABET, name2) {
  if (ALPHABET.length >= 255) {
    throw new TypeError("Alphabet too long");
  }
  var BASE_MAP = new Uint8Array(256);
  for (var j7 = 0; j7 < BASE_MAP.length; j7++) {
    BASE_MAP[j7] = 255;
  }
  for (var i3 = 0; i3 < ALPHABET.length; i3++) {
    var x5 = ALPHABET.charAt(i3);
    var xc = x5.charCodeAt(0);
    if (BASE_MAP[xc] !== 255) {
      throw new TypeError(x5 + " is ambiguous");
    }
    BASE_MAP[xc] = i3;
  }
  var BASE = ALPHABET.length;
  var LEADER = ALPHABET.charAt(0);
  var FACTOR = Math.log(BASE) / Math.log(256);
  var iFACTOR = Math.log(256) / Math.log(BASE);
  function encode5(source) {
    if (source instanceof Uint8Array) ;
    else if (ArrayBuffer.isView(source)) {
      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);
    } else if (Array.isArray(source)) {
      source = Uint8Array.from(source);
    }
    if (!(source instanceof Uint8Array)) {
      throw new TypeError("Expected Uint8Array");
    }
    if (source.length === 0) {
      return "";
    }
    var zeroes = 0;
    var length2 = 0;
    var pbegin = 0;
    var pend = source.length;
    while (pbegin !== pend && source[pbegin] === 0) {
      pbegin++;
      zeroes++;
    }
    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;
    var b58 = new Uint8Array(size);
    while (pbegin !== pend) {
      var carry = source[pbegin];
      var i4 = 0;
      for (var it1 = size - 1; (carry !== 0 || i4 < length2) && it1 !== -1; it1--, i4++) {
        carry += 256 * b58[it1] >>> 0;
        b58[it1] = carry % BASE >>> 0;
        carry = carry / BASE >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length2 = i4;
      pbegin++;
    }
    var it22 = size - length2;
    while (it22 !== size && b58[it22] === 0) {
      it22++;
    }
    var str = LEADER.repeat(zeroes);
    for (; it22 < size; ++it22) {
      str += ALPHABET.charAt(b58[it22]);
    }
    return str;
  }
  function decodeUnsafe(source) {
    if (typeof source !== "string") {
      throw new TypeError("Expected String");
    }
    if (source.length === 0) {
      return new Uint8Array();
    }
    var psz = 0;
    if (source[psz] === " ") {
      return;
    }
    var zeroes = 0;
    var length2 = 0;
    while (source[psz] === LEADER) {
      zeroes++;
      psz++;
    }
    var size = (source.length - psz) * FACTOR + 1 >>> 0;
    var b256 = new Uint8Array(size);
    while (source[psz]) {
      var carry = BASE_MAP[source.charCodeAt(psz)];
      if (carry === 255) {
        return;
      }
      var i4 = 0;
      for (var it32 = size - 1; (carry !== 0 || i4 < length2) && it32 !== -1; it32--, i4++) {
        carry += BASE * b256[it32] >>> 0;
        b256[it32] = carry % 256 >>> 0;
        carry = carry / 256 >>> 0;
      }
      if (carry !== 0) {
        throw new Error("Non-zero carry");
      }
      length2 = i4;
      psz++;
    }
    if (source[psz] === " ") {
      return;
    }
    var it4 = size - length2;
    while (it4 !== size && b256[it4] === 0) {
      it4++;
    }
    var vch = new Uint8Array(zeroes + (size - it4));
    var j8 = zeroes;
    while (it4 !== size) {
      vch[j8++] = b256[it4++];
    }
    return vch;
  }
  function decode6(string2) {
    var buffer = decodeUnsafe(string2);
    if (buffer) {
      return buffer;
    }
    throw new Error(`Non-${name2} character`);
  }
  return {
    encode: encode5,
    decodeUnsafe,
    decode: decode6
  };
}
var src = base;
var _brrp__multiformats_scope_baseX = src;
var base_x_default = _brrp__multiformats_scope_baseX;

// node_modules/multiformats/esm/src/bytes.js
var empty = new Uint8Array(0);
var equals = (aa, bb) => {
  if (aa === bb)
    return true;
  if (aa.byteLength !== bb.byteLength) {
    return false;
  }
  for (let ii = 0; ii < aa.byteLength; ii++) {
    if (aa[ii] !== bb[ii]) {
      return false;
    }
  }
  return true;
};
var coerce = (o3) => {
  if (o3 instanceof Uint8Array && o3.constructor.name === "Uint8Array")
    return o3;
  if (o3 instanceof ArrayBuffer)
    return new Uint8Array(o3);
  if (ArrayBuffer.isView(o3)) {
    return new Uint8Array(o3.buffer, o3.byteOffset, o3.byteLength);
  }
  throw new Error("Unknown type, must be binary type");
};
var fromString = (str) => new TextEncoder().encode(str);
var toString = (b5) => new TextDecoder().decode(b5);

// node_modules/multiformats/esm/src/bases/base.js
var Encoder = class {
  constructor(name2, prefix, baseEncode) {
    this.name = name2;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
  }
  encode(bytes) {
    if (bytes instanceof Uint8Array) {
      return `${this.prefix}${this.baseEncode(bytes)}`;
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};
var Decoder = class {
  constructor(name2, prefix, baseDecode) {
    this.name = name2;
    this.prefix = prefix;
    if (prefix.codePointAt(0) === void 0) {
      throw new Error("Invalid prefix character");
    }
    this.prefixCodePoint = prefix.codePointAt(0);
    this.baseDecode = baseDecode;
  }
  decode(text) {
    if (typeof text === "string") {
      if (text.codePointAt(0) !== this.prefixCodePoint) {
        throw Error(`Unable to decode multibase string ${JSON.stringify(text)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      }
      return this.baseDecode(text.slice(this.prefix.length));
    } else {
      throw Error("Can only multibase decode strings");
    }
  }
  or(decoder) {
    return or(this, decoder);
  }
};
var ComposedDecoder = class {
  constructor(decoders) {
    this.decoders = decoders;
  }
  or(decoder) {
    return or(this, decoder);
  }
  decode(input) {
    const prefix = input[0];
    const decoder = this.decoders[prefix];
    if (decoder) {
      return decoder.decode(input);
    } else {
      throw RangeError(`Unable to decode multibase string ${JSON.stringify(input)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
    }
  }
};
var or = (left, right) => new ComposedDecoder({
  ...left.decoders || { [left.prefix]: left },
  ...right.decoders || { [right.prefix]: right }
});
var Codec = class {
  constructor(name2, prefix, baseEncode, baseDecode) {
    this.name = name2;
    this.prefix = prefix;
    this.baseEncode = baseEncode;
    this.baseDecode = baseDecode;
    this.encoder = new Encoder(name2, prefix, baseEncode);
    this.decoder = new Decoder(name2, prefix, baseDecode);
  }
  encode(input) {
    return this.encoder.encode(input);
  }
  decode(input) {
    return this.decoder.decode(input);
  }
};
var from = ({ name: name2, prefix, encode: encode5, decode: decode6 }) => new Codec(name2, prefix, encode5, decode6);
var baseX = ({ prefix, name: name2, alphabet: alphabet2 }) => {
  const { encode: encode5, decode: decode6 } = base_x_default(alphabet2, name2);
  return from({
    prefix,
    name: name2,
    encode: encode5,
    decode: (text) => coerce(decode6(text))
  });
};
var decode = (string2, alphabet2, bitsPerChar, name2) => {
  const codes = {};
  for (let i3 = 0; i3 < alphabet2.length; ++i3) {
    codes[alphabet2[i3]] = i3;
  }
  let end = string2.length;
  while (string2[end - 1] === "=") {
    --end;
  }
  const out = new Uint8Array(end * bitsPerChar / 8 | 0);
  let bits = 0;
  let buffer = 0;
  let written = 0;
  for (let i3 = 0; i3 < end; ++i3) {
    const value = codes[string2[i3]];
    if (value === void 0) {
      throw new SyntaxError(`Non-${name2} character`);
    }
    buffer = buffer << bitsPerChar | value;
    bits += bitsPerChar;
    if (bits >= 8) {
      bits -= 8;
      out[written++] = 255 & buffer >> bits;
    }
  }
  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {
    throw new SyntaxError("Unexpected end of data");
  }
  return out;
};
var encode = (data, alphabet2, bitsPerChar) => {
  const pad = alphabet2[alphabet2.length - 1] === "=";
  const mask = (1 << bitsPerChar) - 1;
  let out = "";
  let bits = 0;
  let buffer = 0;
  for (let i3 = 0; i3 < data.length; ++i3) {
    buffer = buffer << 8 | data[i3];
    bits += 8;
    while (bits > bitsPerChar) {
      bits -= bitsPerChar;
      out += alphabet2[mask & buffer >> bits];
    }
  }
  if (bits) {
    out += alphabet2[mask & buffer << bitsPerChar - bits];
  }
  if (pad) {
    while (out.length * bitsPerChar & 7) {
      out += "=";
    }
  }
  return out;
};
var rfc4648 = ({ name: name2, prefix, bitsPerChar, alphabet: alphabet2 }) => {
  return from({
    prefix,
    name: name2,
    encode(input) {
      return encode(input, alphabet2, bitsPerChar);
    },
    decode(input) {
      return decode(input, alphabet2, bitsPerChar, name2);
    }
  });
};

// node_modules/multiformats/esm/src/bases/identity.js
var identity = from({
  prefix: "\0",
  name: "identity",
  encode: (buf) => toString(buf),
  decode: (str) => fromString(str)
});

// node_modules/multiformats/esm/src/bases/base2.js
var base2_exports = {};
__export(base2_exports, {
  base2: () => base2
});
var base2 = rfc4648({
  prefix: "0",
  name: "base2",
  alphabet: "01",
  bitsPerChar: 1
});

// node_modules/multiformats/esm/src/bases/base8.js
var base8_exports = {};
__export(base8_exports, {
  base8: () => base8
});
var base8 = rfc4648({
  prefix: "7",
  name: "base8",
  alphabet: "01234567",
  bitsPerChar: 3
});

// node_modules/multiformats/esm/src/bases/base10.js
var base10_exports = {};
__export(base10_exports, {
  base10: () => base10
});
var base10 = baseX({
  prefix: "9",
  name: "base10",
  alphabet: "0123456789"
});

// node_modules/multiformats/esm/src/bases/base16.js
var base16_exports = {};
__export(base16_exports, {
  base16: () => base16,
  base16upper: () => base16upper
});
var base16 = rfc4648({
  prefix: "f",
  name: "base16",
  alphabet: "0123456789abcdef",
  bitsPerChar: 4
});
var base16upper = rfc4648({
  prefix: "F",
  name: "base16upper",
  alphabet: "0123456789ABCDEF",
  bitsPerChar: 4
});

// node_modules/multiformats/esm/src/bases/base32.js
var base32_exports = {};
__export(base32_exports, {
  base32: () => base32,
  base32hex: () => base32hex,
  base32hexpad: () => base32hexpad,
  base32hexpadupper: () => base32hexpadupper,
  base32hexupper: () => base32hexupper,
  base32pad: () => base32pad,
  base32padupper: () => base32padupper,
  base32upper: () => base32upper,
  base32z: () => base32z
});
var base32 = rfc4648({
  prefix: "b",
  name: "base32",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567",
  bitsPerChar: 5
});
var base32upper = rfc4648({
  prefix: "B",
  name: "base32upper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567",
  bitsPerChar: 5
});
var base32pad = rfc4648({
  prefix: "c",
  name: "base32pad",
  alphabet: "abcdefghijklmnopqrstuvwxyz234567=",
  bitsPerChar: 5
});
var base32padupper = rfc4648({
  prefix: "C",
  name: "base32padupper",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=",
  bitsPerChar: 5
});
var base32hex = rfc4648({
  prefix: "v",
  name: "base32hex",
  alphabet: "0123456789abcdefghijklmnopqrstuv",
  bitsPerChar: 5
});
var base32hexupper = rfc4648({
  prefix: "V",
  name: "base32hexupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV",
  bitsPerChar: 5
});
var base32hexpad = rfc4648({
  prefix: "t",
  name: "base32hexpad",
  alphabet: "0123456789abcdefghijklmnopqrstuv=",
  bitsPerChar: 5
});
var base32hexpadupper = rfc4648({
  prefix: "T",
  name: "base32hexpadupper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=",
  bitsPerChar: 5
});
var base32z = rfc4648({
  prefix: "h",
  name: "base32z",
  alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769",
  bitsPerChar: 5
});

// node_modules/multiformats/esm/src/bases/base36.js
var base36_exports = {};
__export(base36_exports, {
  base36: () => base36,
  base36upper: () => base36upper
});
var base36 = baseX({
  prefix: "k",
  name: "base36",
  alphabet: "0123456789abcdefghijklmnopqrstuvwxyz"
});
var base36upper = baseX({
  prefix: "K",
  name: "base36upper",
  alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ"
});

// node_modules/multiformats/esm/src/bases/base58.js
var base58_exports = {};
__export(base58_exports, {
  base58btc: () => base58btc,
  base58flickr: () => base58flickr
});
var base58btc = baseX({
  name: "base58btc",
  prefix: "z",
  alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz"
});
var base58flickr = baseX({
  name: "base58flickr",
  prefix: "Z",
  alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ"
});

// node_modules/multiformats/esm/src/bases/base64.js
var base64_exports = {};
__export(base64_exports, {
  base64: () => base64,
  base64pad: () => base64pad,
  base64url: () => base64url,
  base64urlpad: () => base64urlpad
});
var base64 = rfc4648({
  prefix: "m",
  name: "base64",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",
  bitsPerChar: 6
});
var base64pad = rfc4648({
  prefix: "M",
  name: "base64pad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=",
  bitsPerChar: 6
});
var base64url = rfc4648({
  prefix: "u",
  name: "base64url",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_",
  bitsPerChar: 6
});
var base64urlpad = rfc4648({
  prefix: "U",
  name: "base64urlpad",
  alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=",
  bitsPerChar: 6
});

// node_modules/multiformats/esm/src/bases/base256emoji.js
var base256emoji_exports = {};
__export(base256emoji_exports, {
  base256emoji: () => base256emoji
});
var alphabet = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var alphabetBytesToChars = alphabet.reduce((p7, c5, i3) => {
  p7[i3] = c5;
  return p7;
}, []);
var alphabetCharsToBytes = alphabet.reduce((p7, c5, i3) => {
  p7[c5.codePointAt(0)] = i3;
  return p7;
}, []);
function encode2(data) {
  return data.reduce((p7, c5) => {
    p7 += alphabetBytesToChars[c5];
    return p7;
  }, "");
}
function decode2(str) {
  const byts = [];
  for (const char of str) {
    const byt = alphabetCharsToBytes[char.codePointAt(0)];
    if (byt === void 0) {
      throw new Error(`Non-base256emoji character: ${char}`);
    }
    byts.push(byt);
  }
  return new Uint8Array(byts);
}
var base256emoji = from({
  prefix: "🚀",
  name: "base256emoji",
  encode: encode2,
  decode: decode2
});

// node_modules/multiformats/esm/src/hashes/sha2-browser.js
var sha2_browser_exports = {};
__export(sha2_browser_exports, {
  sha256: () => sha256,
  sha512: () => sha512
});

// node_modules/multiformats/esm/vendor/varint.js
var encode_1 = encode3;
var MSB = 128;
var REST = 127;
var MSBALL = ~REST;
var INT = Math.pow(2, 31);
function encode3(num, out, offset) {
  out = out || [];
  offset = offset || 0;
  var oldOffset = offset;
  while (num >= INT) {
    out[offset++] = num & 255 | MSB;
    num /= 128;
  }
  while (num & MSBALL) {
    out[offset++] = num & 255 | MSB;
    num >>>= 7;
  }
  out[offset] = num | 0;
  encode3.bytes = offset - oldOffset + 1;
  return out;
}
var decode3 = read;
var MSB$1 = 128;
var REST$1 = 127;
function read(buf, offset) {
  var res = 0, offset = offset || 0, shift = 0, counter = offset, b5, l4 = buf.length;
  do {
    if (counter >= l4) {
      read.bytes = 0;
      throw new RangeError("Could not decode varint");
    }
    b5 = buf[counter++];
    res += shift < 28 ? (b5 & REST$1) << shift : (b5 & REST$1) * Math.pow(2, shift);
    shift += 7;
  } while (b5 >= MSB$1);
  read.bytes = counter - offset;
  return res;
}
var N1 = Math.pow(2, 7);
var N2 = Math.pow(2, 14);
var N3 = Math.pow(2, 21);
var N4 = Math.pow(2, 28);
var N5 = Math.pow(2, 35);
var N6 = Math.pow(2, 42);
var N7 = Math.pow(2, 49);
var N8 = Math.pow(2, 56);
var N9 = Math.pow(2, 63);
var length = function(value) {
  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;
};
var varint = {
  encode: encode_1,
  decode: decode3,
  encodingLength: length
};
var _brrp_varint = varint;
var varint_default = _brrp_varint;

// node_modules/multiformats/esm/src/varint.js
var decode4 = (data, offset = 0) => {
  const code2 = varint_default.decode(data, offset);
  return [
    code2,
    varint_default.decode.bytes
  ];
};
var encodeTo = (int, target, offset = 0) => {
  varint_default.encode(int, target, offset);
  return target;
};
var encodingLength = (int) => {
  return varint_default.encodingLength(int);
};

// node_modules/multiformats/esm/src/hashes/digest.js
var create = (code2, digest2) => {
  const size = digest2.byteLength;
  const sizeOffset = encodingLength(code2);
  const digestOffset = sizeOffset + encodingLength(size);
  const bytes = new Uint8Array(digestOffset + size);
  encodeTo(code2, bytes, 0);
  encodeTo(size, bytes, sizeOffset);
  bytes.set(digest2, digestOffset);
  return new Digest(code2, size, digest2, bytes);
};
var decode5 = (multihash) => {
  const bytes = coerce(multihash);
  const [code2, sizeOffset] = decode4(bytes);
  const [size, digestOffset] = decode4(bytes.subarray(sizeOffset));
  const digest2 = bytes.subarray(sizeOffset + digestOffset);
  if (digest2.byteLength !== size) {
    throw new Error("Incorrect length");
  }
  return new Digest(code2, size, digest2, bytes);
};
var equals2 = (a2, b5) => {
  if (a2 === b5) {
    return true;
  } else {
    return a2.code === b5.code && a2.size === b5.size && equals(a2.bytes, b5.bytes);
  }
};
var Digest = class {
  constructor(code2, size, digest2, bytes) {
    this.code = code2;
    this.size = size;
    this.digest = digest2;
    this.bytes = bytes;
  }
};

// node_modules/multiformats/esm/src/hashes/hasher.js
var from2 = ({ name: name2, code: code2, encode: encode5 }) => new Hasher(name2, code2, encode5);
var Hasher = class {
  constructor(name2, code2, encode5) {
    this.name = name2;
    this.code = code2;
    this.encode = encode5;
  }
  digest(input) {
    if (input instanceof Uint8Array) {
      const result = this.encode(input);
      return result instanceof Uint8Array ? create(this.code, result) : result.then((digest2) => create(this.code, digest2));
    } else {
      throw Error("Unknown type, must be binary type");
    }
  }
};

// node_modules/multiformats/esm/src/hashes/sha2-browser.js
var sha = (name2) => async (data) => new Uint8Array(await crypto.subtle.digest(name2, data));
var sha256 = from2({
  name: "sha2-256",
  code: 18,
  encode: sha("SHA-256")
});
var sha512 = from2({
  name: "sha2-512",
  code: 19,
  encode: sha("SHA-512")
});

// node_modules/multiformats/esm/src/hashes/identity.js
var identity_exports2 = {};
__export(identity_exports2, {
  identity: () => identity2
});
var code = 0;
var name = "identity";
var encode4 = coerce;
var digest = (input) => create(code, encode4(input));
var identity2 = {
  code,
  name,
  encode: encode4,
  digest
};

// node_modules/multiformats/esm/src/codecs/json.js
var textEncoder = new TextEncoder();
var textDecoder = new TextDecoder();

// node_modules/multiformats/esm/src/cid.js
var CID = class _CID {
  constructor(version2, code2, multihash, bytes) {
    this.code = code2;
    this.version = version2;
    this.multihash = multihash;
    this.bytes = bytes;
    this.byteOffset = bytes.byteOffset;
    this.byteLength = bytes.byteLength;
    this.asCID = this;
    this._baseCache = /* @__PURE__ */ new Map();
    Object.defineProperties(this, {
      byteOffset: hidden,
      byteLength: hidden,
      code: readonly,
      version: readonly,
      multihash: readonly,
      bytes: readonly,
      _baseCache: hidden,
      asCID: hidden
    });
  }
  toV0() {
    switch (this.version) {
      case 0: {
        return this;
      }
      default: {
        const { code: code2, multihash } = this;
        if (code2 !== DAG_PB_CODE) {
          throw new Error("Cannot convert a non dag-pb CID to CIDv0");
        }
        if (multihash.code !== SHA_256_CODE) {
          throw new Error("Cannot convert non sha2-256 multihash CID to CIDv0");
        }
        return _CID.createV0(multihash);
      }
    }
  }
  toV1() {
    switch (this.version) {
      case 0: {
        const { code: code2, digest: digest2 } = this.multihash;
        const multihash = create(code2, digest2);
        return _CID.createV1(this.code, multihash);
      }
      case 1: {
        return this;
      }
      default: {
        throw Error(`Can not convert CID version ${this.version} to version 0. This is a bug please report`);
      }
    }
  }
  equals(other) {
    return other && this.code === other.code && this.version === other.version && equals2(this.multihash, other.multihash);
  }
  toString(base3) {
    const { bytes, version: version2, _baseCache } = this;
    switch (version2) {
      case 0:
        return toStringV0(bytes, _baseCache, base3 || base58btc.encoder);
      default:
        return toStringV1(bytes, _baseCache, base3 || base32.encoder);
    }
  }
  toJSON() {
    return {
      code: this.code,
      version: this.version,
      hash: this.multihash.bytes
    };
  }
  get [Symbol.toStringTag]() {
    return "CID";
  }
  [Symbol.for("nodejs.util.inspect.custom")]() {
    return "CID(" + this.toString() + ")";
  }
  static isCID(value) {
    deprecate(/^0\.0/, IS_CID_DEPRECATION);
    return !!(value && (value[cidSymbol] || value.asCID === value));
  }
  get toBaseEncodedString() {
    throw new Error("Deprecated, use .toString()");
  }
  get codec() {
    throw new Error('"codec" property is deprecated, use integer "code" property instead');
  }
  get buffer() {
    throw new Error("Deprecated .buffer property, use .bytes to get Uint8Array instead");
  }
  get multibaseName() {
    throw new Error('"multibaseName" property is deprecated');
  }
  get prefix() {
    throw new Error('"prefix" property is deprecated');
  }
  static asCID(value) {
    if (value instanceof _CID) {
      return value;
    } else if (value != null && value.asCID === value) {
      const { version: version2, code: code2, multihash, bytes } = value;
      return new _CID(version2, code2, multihash, bytes || encodeCID(version2, code2, multihash.bytes));
    } else if (value != null && value[cidSymbol] === true) {
      const { version: version2, multihash, code: code2 } = value;
      const digest2 = decode5(multihash);
      return _CID.create(version2, code2, digest2);
    } else {
      return null;
    }
  }
  static create(version2, code2, digest2) {
    if (typeof code2 !== "number") {
      throw new Error("String codecs are no longer supported");
    }
    switch (version2) {
      case 0: {
        if (code2 !== DAG_PB_CODE) {
          throw new Error(`Version 0 CID must use dag-pb (code: ${DAG_PB_CODE}) block encoding`);
        } else {
          return new _CID(version2, code2, digest2, digest2.bytes);
        }
      }
      case 1: {
        const bytes = encodeCID(version2, code2, digest2.bytes);
        return new _CID(version2, code2, digest2, bytes);
      }
      default: {
        throw new Error("Invalid version");
      }
    }
  }
  static createV0(digest2) {
    return _CID.create(0, DAG_PB_CODE, digest2);
  }
  static createV1(code2, digest2) {
    return _CID.create(1, code2, digest2);
  }
  static decode(bytes) {
    const [cid, remainder] = _CID.decodeFirst(bytes);
    if (remainder.length) {
      throw new Error("Incorrect length");
    }
    return cid;
  }
  static decodeFirst(bytes) {
    const specs = _CID.inspectBytes(bytes);
    const prefixSize = specs.size - specs.multihashSize;
    const multihashBytes = coerce(bytes.subarray(prefixSize, prefixSize + specs.multihashSize));
    if (multihashBytes.byteLength !== specs.multihashSize) {
      throw new Error("Incorrect length");
    }
    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);
    const digest2 = new Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);
    const cid = specs.version === 0 ? _CID.createV0(digest2) : _CID.createV1(specs.codec, digest2);
    return [
      cid,
      bytes.subarray(specs.size)
    ];
  }
  static inspectBytes(initialBytes) {
    let offset = 0;
    const next = () => {
      const [i3, length2] = decode4(initialBytes.subarray(offset));
      offset += length2;
      return i3;
    };
    let version2 = next();
    let codec = DAG_PB_CODE;
    if (version2 === 18) {
      version2 = 0;
      offset = 0;
    } else if (version2 === 1) {
      codec = next();
    }
    if (version2 !== 0 && version2 !== 1) {
      throw new RangeError(`Invalid CID version ${version2}`);
    }
    const prefixSize = offset;
    const multihashCode = next();
    const digestSize = next();
    const size = offset + digestSize;
    const multihashSize = size - prefixSize;
    return {
      version: version2,
      codec,
      multihashCode,
      digestSize,
      multihashSize,
      size
    };
  }
  static parse(source, base3) {
    const [prefix, bytes] = parseCIDtoBytes(source, base3);
    const cid = _CID.decode(bytes);
    cid._baseCache.set(prefix, source);
    return cid;
  }
};
var parseCIDtoBytes = (source, base3) => {
  switch (source[0]) {
    case "Q": {
      const decoder = base3 || base58btc;
      return [
        base58btc.prefix,
        decoder.decode(`${base58btc.prefix}${source}`)
      ];
    }
    case base58btc.prefix: {
      const decoder = base3 || base58btc;
      return [
        base58btc.prefix,
        decoder.decode(source)
      ];
    }
    case base32.prefix: {
      const decoder = base3 || base32;
      return [
        base32.prefix,
        decoder.decode(source)
      ];
    }
    default: {
      if (base3 == null) {
        throw Error("To parse non base32 or base58btc encoded CID multibase decoder must be provided");
      }
      return [
        source[0],
        base3.decode(source)
      ];
    }
  }
};
var toStringV0 = (bytes, cache, base3) => {
  const { prefix } = base3;
  if (prefix !== base58btc.prefix) {
    throw Error(`Cannot string encode V0 in ${base3.name} encoding`);
  }
  const cid = cache.get(prefix);
  if (cid == null) {
    const cid2 = base3.encode(bytes).slice(1);
    cache.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
};
var toStringV1 = (bytes, cache, base3) => {
  const { prefix } = base3;
  const cid = cache.get(prefix);
  if (cid == null) {
    const cid2 = base3.encode(bytes);
    cache.set(prefix, cid2);
    return cid2;
  } else {
    return cid;
  }
};
var DAG_PB_CODE = 112;
var SHA_256_CODE = 18;
var encodeCID = (version2, code2, multihash) => {
  const codeOffset = encodingLength(version2);
  const hashOffset = codeOffset + encodingLength(code2);
  const bytes = new Uint8Array(hashOffset + multihash.byteLength);
  encodeTo(version2, bytes, 0);
  encodeTo(code2, bytes, codeOffset);
  bytes.set(multihash, hashOffset);
  return bytes;
};
var cidSymbol = Symbol.for("@ipld/js-cid/CID");
var readonly = {
  writable: false,
  configurable: false,
  enumerable: true
};
var hidden = {
  writable: false,
  enumerable: false,
  configurable: false
};
var version = "0.0.0-dev";
var deprecate = (range, message) => {
  if (range.test(version)) {
    console.warn(message);
  } else {
    throw new Error(message);
  }
};
var IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.
Following code pattern:

if (CID.isCID(value)) {
  doSomethingWithCID(value)
}

Is replaced with:

const cid = CID.asCID(value)
if (cid) {
  // Make sure to use cid instead of value
  doSomethingWithCID(cid)
}
`;

// node_modules/multiformats/esm/src/basics.js
var bases = {
  ...identity_exports,
  ...base2_exports,
  ...base8_exports,
  ...base10_exports,
  ...base16_exports,
  ...base32_exports,
  ...base36_exports,
  ...base58_exports,
  ...base64_exports,
  ...base256emoji_exports
};
var hashes = {
  ...sha2_browser_exports,
  ...identity_exports2
};

// node_modules/uint8arrays/esm/src/util/bases.js
function createCodec(name2, prefix, encode5, decode6) {
  return {
    name: name2,
    prefix,
    encoder: {
      name: name2,
      prefix,
      encode: encode5
    },
    decoder: { decode: decode6 }
  };
}
var string = createCodec("utf8", "u", (buf) => {
  const decoder = new TextDecoder("utf8");
  return "u" + decoder.decode(buf);
}, (str) => {
  const encoder = new TextEncoder();
  return encoder.encode(str.substring(1));
});
var ascii = createCodec("ascii", "a", (buf) => {
  let string2 = "a";
  for (let i3 = 0; i3 < buf.length; i3++) {
    string2 += String.fromCharCode(buf[i3]);
  }
  return string2;
}, (str) => {
  str = str.substring(1);
  const buf = allocUnsafe(str.length);
  for (let i3 = 0; i3 < str.length; i3++) {
    buf[i3] = str.charCodeAt(i3);
  }
  return buf;
});
var BASES = {
  utf8: string,
  "utf-8": string,
  hex: bases.base16,
  latin1: ascii,
  ascii,
  binary: ascii,
  ...bases
};
var bases_default = BASES;

// node_modules/uint8arrays/esm/src/from-string.js
function fromString2(string2, encoding = "utf8") {
  const base3 = bases_default[encoding];
  if (!base3) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return asUint8Array(globalThis.Buffer.from(string2, "utf-8"));
  }
  return base3.decoder.decode(`${base3.prefix}${string2}`);
}

// node_modules/uint8arrays/esm/src/to-string.js
function toString2(array, encoding = "utf8") {
  const base3 = bases_default[encoding];
  if (!base3) {
    throw new Error(`Unsupported encoding "${encoding}"`);
  }
  if ((encoding === "utf8" || encoding === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null) {
    return globalThis.Buffer.from(array.buffer, array.byteOffset, array.byteLength).toString("utf8");
  }
  return base3.encoder.encode(array).substring(1);
}

// node_modules/detect-browser/es/index.js
var __spreadArray = function(to2, from3, pack) {
  if (pack || arguments.length === 2) for (var i3 = 0, l4 = from3.length, ar3; i3 < l4; i3++) {
    if (ar3 || !(i3 in from3)) {
      if (!ar3) ar3 = Array.prototype.slice.call(from3, 0, i3);
      ar3[i3] = from3[i3];
    }
  }
  return to2.concat(ar3 || Array.prototype.slice.call(from3));
};
var BrowserInfo = (
  /** @class */
  /* @__PURE__ */ function() {
    function BrowserInfo2(name2, version2, os3) {
      this.name = name2;
      this.version = version2;
      this.os = os3;
      this.type = "browser";
    }
    return BrowserInfo2;
  }()
);
var NodeInfo = (
  /** @class */
  /* @__PURE__ */ function() {
    function NodeInfo2(version2) {
      this.version = version2;
      this.type = "node";
      this.name = "node";
      this.os = process.platform;
    }
    return NodeInfo2;
  }()
);
var SearchBotDeviceInfo = (
  /** @class */
  /* @__PURE__ */ function() {
    function SearchBotDeviceInfo2(name2, version2, os3, bot) {
      this.name = name2;
      this.version = version2;
      this.os = os3;
      this.bot = bot;
      this.type = "bot-device";
    }
    return SearchBotDeviceInfo2;
  }()
);
var BotInfo = (
  /** @class */
  /* @__PURE__ */ function() {
    function BotInfo2() {
      this.type = "bot";
      this.bot = true;
      this.name = "bot";
      this.version = null;
      this.os = null;
    }
    return BotInfo2;
  }()
);
var ReactNativeInfo = (
  /** @class */
  /* @__PURE__ */ function() {
    function ReactNativeInfo2() {
      this.type = "react-native";
      this.name = "react-native";
      this.version = null;
      this.os = null;
    }
    return ReactNativeInfo2;
  }()
);
var SEARCHBOX_UA_REGEX = /alexa|bot|crawl(er|ing)|facebookexternalhit|feedburner|google web preview|nagios|postrank|pingdom|slurp|spider|yahoo!|yandex/;
var SEARCHBOT_OS_REGEX = /(nuhk|curl|Googlebot|Yammybot|Openbot|Slurp|MSNBot|Ask\ Jeeves\/Teoma|ia_archiver)/;
var REQUIRED_VERSION_PARTS = 3;
var userAgentRules = [
  ["aol", /AOLShield\/([0-9\._]+)/],
  ["edge", /Edge\/([0-9\._]+)/],
  ["edge-ios", /EdgiOS\/([0-9\._]+)/],
  ["yandexbrowser", /YaBrowser\/([0-9\._]+)/],
  ["kakaotalk", /KAKAOTALK\s([0-9\.]+)/],
  ["samsung", /SamsungBrowser\/([0-9\.]+)/],
  ["silk", /\bSilk\/([0-9._-]+)\b/],
  ["miui", /MiuiBrowser\/([0-9\.]+)$/],
  ["beaker", /BeakerBrowser\/([0-9\.]+)/],
  ["edge-chromium", /EdgA?\/([0-9\.]+)/],
  [
    "chromium-webview",
    /(?!Chrom.*OPR)wv\).*Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/
  ],
  ["chrome", /(?!Chrom.*OPR)Chrom(?:e|ium)\/([0-9\.]+)(:?\s|$)/],
  ["phantomjs", /PhantomJS\/([0-9\.]+)(:?\s|$)/],
  ["crios", /CriOS\/([0-9\.]+)(:?\s|$)/],
  ["firefox", /Firefox\/([0-9\.]+)(?:\s|$)/],
  ["fxios", /FxiOS\/([0-9\.]+)/],
  ["opera-mini", /Opera Mini.*Version\/([0-9\.]+)/],
  ["opera", /Opera\/([0-9\.]+)(?:\s|$)/],
  ["opera", /OPR\/([0-9\.]+)(:?\s|$)/],
  ["pie", /^Microsoft Pocket Internet Explorer\/(\d+\.\d+)$/],
  ["pie", /^Mozilla\/\d\.\d+\s\(compatible;\s(?:MSP?IE|MSInternet Explorer) (\d+\.\d+);.*Windows CE.*\)$/],
  ["netfront", /^Mozilla\/\d\.\d+.*NetFront\/(\d.\d)/],
  ["ie", /Trident\/7\.0.*rv\:([0-9\.]+).*\).*Gecko$/],
  ["ie", /MSIE\s([0-9\.]+);.*Trident\/[4-7].0/],
  ["ie", /MSIE\s(7\.0)/],
  ["bb10", /BB10;\sTouch.*Version\/([0-9\.]+)/],
  ["android", /Android\s([0-9\.]+)/],
  ["ios", /Version\/([0-9\._]+).*Mobile.*Safari.*/],
  ["safari", /Version\/([0-9\._]+).*Safari/],
  ["facebook", /FB[AS]V\/([0-9\.]+)/],
  ["instagram", /Instagram\s([0-9\.]+)/],
  ["ios-webview", /AppleWebKit\/([0-9\.]+).*Mobile/],
  ["ios-webview", /AppleWebKit\/([0-9\.]+).*Gecko\)$/],
  ["curl", /^curl\/([0-9\.]+)$/],
  ["searchbot", SEARCHBOX_UA_REGEX]
];
var operatingSystemRules = [
  ["iOS", /iP(hone|od|ad)/],
  ["Android OS", /Android/],
  ["BlackBerry OS", /BlackBerry|BB10/],
  ["Windows Mobile", /IEMobile/],
  ["Amazon OS", /Kindle/],
  ["Windows 3.11", /Win16/],
  ["Windows 95", /(Windows 95)|(Win95)|(Windows_95)/],
  ["Windows 98", /(Windows 98)|(Win98)/],
  ["Windows 2000", /(Windows NT 5.0)|(Windows 2000)/],
  ["Windows XP", /(Windows NT 5.1)|(Windows XP)/],
  ["Windows Server 2003", /(Windows NT 5.2)/],
  ["Windows Vista", /(Windows NT 6.0)/],
  ["Windows 7", /(Windows NT 6.1)/],
  ["Windows 8", /(Windows NT 6.2)/],
  ["Windows 8.1", /(Windows NT 6.3)/],
  ["Windows 10", /(Windows NT 10.0)/],
  ["Windows ME", /Windows ME/],
  ["Windows CE", /Windows CE|WinCE|Microsoft Pocket Internet Explorer/],
  ["Open BSD", /OpenBSD/],
  ["Sun OS", /SunOS/],
  ["Chrome OS", /CrOS/],
  ["Linux", /(Linux)|(X11)/],
  ["Mac OS", /(Mac_PowerPC)|(Macintosh)/],
  ["QNX", /QNX/],
  ["BeOS", /BeOS/],
  ["OS/2", /OS\/2/]
];
function detect(userAgent) {
  if (!!userAgent) {
    return parseUserAgent(userAgent);
  }
  if (typeof document === "undefined" && typeof navigator !== "undefined" && navigator.product === "ReactNative") {
    return new ReactNativeInfo();
  }
  if (typeof navigator !== "undefined") {
    return parseUserAgent(navigator.userAgent);
  }
  return getNodeVersion();
}
function matchUserAgent(ua) {
  return ua !== "" && userAgentRules.reduce(function(matched, _a) {
    var browser = _a[0], regex = _a[1];
    if (matched) {
      return matched;
    }
    var uaMatch = regex.exec(ua);
    return !!uaMatch && [browser, uaMatch];
  }, false);
}
function parseUserAgent(ua) {
  var matchedRule = matchUserAgent(ua);
  if (!matchedRule) {
    return null;
  }
  var name2 = matchedRule[0], match = matchedRule[1];
  if (name2 === "searchbot") {
    return new BotInfo();
  }
  var versionParts = match[1] && match[1].split(".").join("_").split("_").slice(0, 3);
  if (versionParts) {
    if (versionParts.length < REQUIRED_VERSION_PARTS) {
      versionParts = __spreadArray(__spreadArray([], versionParts, true), createVersionParts(REQUIRED_VERSION_PARTS - versionParts.length), true);
    }
  } else {
    versionParts = [];
  }
  var version2 = versionParts.join(".");
  var os3 = detectOS(ua);
  var searchBotMatch = SEARCHBOT_OS_REGEX.exec(ua);
  if (searchBotMatch && searchBotMatch[1]) {
    return new SearchBotDeviceInfo(name2, version2, os3, searchBotMatch[1]);
  }
  return new BrowserInfo(name2, version2, os3);
}
function detectOS(ua) {
  for (var ii = 0, count = operatingSystemRules.length; ii < count; ii++) {
    var _a = operatingSystemRules[ii], os3 = _a[0], regex = _a[1];
    var match = regex.exec(ua);
    if (match) {
      return os3;
    }
  }
  return null;
}
function getNodeVersion() {
  var isNode2 = typeof process !== "undefined" && process.version;
  return isNode2 ? new NodeInfo(process.version.slice(1)) : null;
}
function createVersionParts(count) {
  var output = [];
  for (var ii = 0; ii < count; ii++) {
    output.push("0");
  }
  return output;
}

// node_modules/@walletconnect/utils/dist/index.es.js
var import_time = __toESM(require_cjs());
var import_window_getters = __toESM(require_cjs2());
var import_window_metadata = __toESM(require_cjs3());
var V = __toESM(require_query_string());

// node_modules/@walletconnect/relay-api/dist/index.es.js
var C = { waku: { publish: "waku_publish", batchPublish: "waku_batchPublish", subscribe: "waku_subscribe", batchSubscribe: "waku_batchSubscribe", subscription: "waku_subscription", unsubscribe: "waku_unsubscribe", batchUnsubscribe: "waku_batchUnsubscribe", batchFetchMessages: "waku_batchFetchMessages" }, irn: { publish: "irn_publish", batchPublish: "irn_batchPublish", subscribe: "irn_subscribe", batchSubscribe: "irn_batchSubscribe", subscription: "irn_subscription", unsubscribe: "irn_unsubscribe", batchUnsubscribe: "irn_batchUnsubscribe", batchFetchMessages: "irn_batchFetchMessages" }, iridium: { publish: "iridium_publish", batchPublish: "iridium_batchPublish", subscribe: "iridium_subscribe", batchSubscribe: "iridium_batchSubscribe", subscription: "iridium_subscription", unsubscribe: "iridium_unsubscribe", batchUnsubscribe: "iridium_batchUnsubscribe", batchFetchMessages: "iridium_batchFetchMessages" } };

// node_modules/@walletconnect/utils/dist/index.es.js
function On(e2, n4 = []) {
  const t = [];
  return Object.keys(e2).forEach((r2) => {
    if (n4.length && !n4.includes(r2)) return;
    const o3 = e2[r2];
    t.push(...o3.accounts);
  }), t;
}
function M(e2, n4) {
  return e2.includes(":") ? [e2] : n4.chains || [];
}
var B = "base10";
var p = "base16";
var L = "base64pad";
var x = "utf8";
var Y = 0;
var U = 1;
var wn = 0;
var Oe = 1;
var J = 12;
var Q = 32;
function Rn() {
  const e2 = ue.generateKeyPair();
  return { privateKey: toString2(e2.secretKey, p), publicKey: toString2(e2.publicKey, p) };
}
function An() {
  const e2 = (0, import_random.randomBytes)(Q);
  return toString2(e2, p);
}
function Un(e2, n4) {
  const t = ue.sharedKey(fromString2(e2, p), fromString2(n4, p)), r2 = new import_hkdf.HKDF(import_sha256.SHA256, t).expand(Q);
  return toString2(r2, p);
}
function _n(e2) {
  const n4 = (0, import_sha256.hash)(fromString2(e2, p));
  return toString2(n4, p);
}
function $n(e2) {
  const n4 = (0, import_sha256.hash)(fromString2(e2, x));
  return toString2(n4, p);
}
function Se(e2) {
  return fromString2(`${e2}`, B);
}
function $(e2) {
  return Number(toString2(e2, B));
}
function jn(e2) {
  const n4 = Se(typeof e2.type < "u" ? e2.type : Y);
  if ($(n4) === U && typeof e2.senderPublicKey > "u") throw new Error("Missing sender public key for type 1 envelope");
  const t = typeof e2.senderPublicKey < "u" ? fromString2(e2.senderPublicKey, p) : void 0, r2 = typeof e2.iv < "u" ? fromString2(e2.iv, p) : (0, import_random.randomBytes)(J), o3 = new import_chacha20poly1305.ChaCha20Poly1305(fromString2(e2.symKey, p)).seal(r2, fromString2(e2.message, x));
  return Ie({ type: n4, sealed: o3, iv: r2, senderPublicKey: t });
}
function Cn(e2) {
  const n4 = new import_chacha20poly1305.ChaCha20Poly1305(fromString2(e2.symKey, p)), { sealed: t, iv: r2 } = Z(e2.encoded), o3 = n4.open(r2, t);
  if (o3 === null) throw new Error("Failed to decrypt");
  return toString2(o3, x);
}
function Ie(e2) {
  if ($(e2.type) === U) {
    if (typeof e2.senderPublicKey > "u") throw new Error("Missing sender public key for type 1 envelope");
    return toString2(concat([e2.type, e2.senderPublicKey, e2.iv, e2.sealed]), L);
  }
  return toString2(concat([e2.type, e2.iv, e2.sealed]), L);
}
function Z(e2) {
  const n4 = fromString2(e2, L), t = n4.slice(wn, Oe), r2 = Oe;
  if ($(t) === U) {
    const d3 = r2 + Q, l4 = d3 + J, c5 = n4.slice(r2, d3), u3 = n4.slice(d3, l4), a2 = n4.slice(l4);
    return { type: t, sealed: a2, iv: u3, senderPublicKey: c5 };
  }
  const o3 = r2 + J, s2 = n4.slice(r2, o3), i3 = n4.slice(o3);
  return { type: t, sealed: i3, iv: s2 };
}
function Dn(e2, n4) {
  const t = Z(e2);
  return Pe({ type: $(t.type), senderPublicKey: typeof t.senderPublicKey < "u" ? toString2(t.senderPublicKey, p) : void 0, receiverPublicKey: n4 == null ? void 0 : n4.receiverPublicKey });
}
function Pe(e2) {
  const n4 = (e2 == null ? void 0 : e2.type) || Y;
  if (n4 === U) {
    if (typeof (e2 == null ? void 0 : e2.senderPublicKey) > "u") throw new Error("missing sender public key");
    if (typeof (e2 == null ? void 0 : e2.receiverPublicKey) > "u") throw new Error("missing receiver public key");
  }
  return { type: n4, senderPublicKey: e2 == null ? void 0 : e2.senderPublicKey, receiverPublicKey: e2 == null ? void 0 : e2.receiverPublicKey };
}
function Vn(e2) {
  return e2.type === U && typeof e2.senderPublicKey == "string" && typeof e2.receiverPublicKey == "string";
}
var kn = Object.defineProperty;
var Te = Object.getOwnPropertySymbols;
var Mn = Object.prototype.hasOwnProperty;
var Kn = Object.prototype.propertyIsEnumerable;
var we = (e2, n4, t) => n4 in e2 ? kn(e2, n4, { enumerable: true, configurable: true, writable: true, value: t }) : e2[n4] = t;
var Re = (e2, n4) => {
  for (var t in n4 || (n4 = {})) Mn.call(n4, t) && we(e2, t, n4[t]);
  if (Te) for (var t of Te(n4)) Kn.call(n4, t) && we(e2, t, n4[t]);
  return e2;
};
var Ae = "ReactNative";
var b = { reactNative: "react-native", node: "node", browser: "browser", unknown: "unknown" };
var _e = "js";
function ee() {
  return typeof process < "u" && typeof process.versions < "u" && typeof process.versions.node < "u";
}
function $e() {
  return !(0, import_window_getters.getDocument)() && !!(0, import_window_getters.getNavigator)() && navigator.product === Ae;
}
function je() {
  return !ee() && !!(0, import_window_getters.getNavigator)();
}
function j() {
  return $e() ? b.reactNative : ee() ? b.node : je() ? b.browser : b.unknown;
}
function Ce(e2, n4) {
  let t = V.parse(e2);
  return t = Re(Re({}, t), n4), e2 = V.stringify(t), e2;
}
function Fn() {
  return (0, import_window_metadata.getWindowMetadata)() || { name: "", description: "", url: "", icons: [""] };
}
function De() {
  if (j() === b.reactNative && typeof global < "u" && typeof (global == null ? void 0 : global.Platform) < "u") {
    const { OS: t, Version: r2 } = global.Platform;
    return [t, r2].join("-");
  }
  const e2 = detect();
  if (e2 === null) return "unknown";
  const n4 = e2.os ? e2.os.replace(" ", "").toLowerCase() : "unknown";
  return e2.type === "browser" ? [n4, e2.name, e2.version].join("-") : [n4, e2.version].join("-");
}
function Ve() {
  var e2;
  const n4 = j();
  return n4 === b.browser ? [n4, ((e2 = (0, import_window_getters.getLocation)()) == null ? void 0 : e2.host) || "unknown"].join(":") : n4;
}
function ke(e2, n4, t) {
  const r2 = De(), o3 = Ve();
  return [[e2, n4].join("-"), [_e, t].join("-"), r2, o3].join("/");
}
function qn({ protocol: e2, version: n4, relayUrl: t, sdkVersion: r2, auth: o3, projectId: s2, useOnCloseEvent: i3 }) {
  const d3 = t.split("?"), l4 = ke(e2, n4, r2), c5 = { auth: o3, ua: l4, projectId: s2, useOnCloseEvent: i3 || void 0 }, u3 = Ce(d3[1] || "", c5);
  return d3[0] + "?" + u3;
}
function O(e2, n4) {
  return e2.filter((t) => n4.includes(t)).length === e2.length;
}
function Bn(e2) {
  return Object.fromEntries(e2.entries());
}
function Yn(e2) {
  return new Map(Object.entries(e2));
}
function Xn(e2 = import_time.FIVE_MINUTES, n4) {
  const t = (0, import_time.toMiliseconds)(e2 || import_time.FIVE_MINUTES);
  let r2, o3, s2;
  return { resolve: (i3) => {
    s2 && r2 && (clearTimeout(s2), r2(i3));
  }, reject: (i3) => {
    s2 && o3 && (clearTimeout(s2), o3(i3));
  }, done: () => new Promise((i3, d3) => {
    s2 = setTimeout(() => {
      d3(new Error(n4));
    }, t), r2 = i3, o3 = d3;
  }) };
}
function et(e2, n4, t) {
  return new Promise(async (r2, o3) => {
    const s2 = setTimeout(() => o3(new Error(t)), n4);
    try {
      const i3 = await e2;
      r2(i3);
    } catch (i3) {
      o3(i3);
    }
    clearTimeout(s2);
  });
}
function ne(e2, n4) {
  if (typeof n4 == "string" && n4.startsWith(`${e2}:`)) return n4;
  if (e2.toLowerCase() === "topic") {
    if (typeof n4 != "string") throw new Error('Value must be "string" for expirer target type: topic');
    return `topic:${n4}`;
  } else if (e2.toLowerCase() === "id") {
    if (typeof n4 != "number") throw new Error('Value must be "number" for expirer target type: id');
    return `id:${n4}`;
  }
  throw new Error(`Unknown expirer target type: ${e2}`);
}
function nt(e2) {
  return ne("topic", e2);
}
function tt(e2) {
  return ne("id", e2);
}
function rt(e2) {
  const [n4, t] = e2.split(":"), r2 = { id: void 0, topic: void 0 };
  if (n4 === "topic" && typeof t == "string") r2.topic = t;
  else if (n4 === "id" && Number.isInteger(Number(t))) r2.id = Number(t);
  else throw new Error(`Invalid target, expected id:number or topic:string, got ${n4}:${t}`);
  return r2;
}
function ot(e2, n4) {
  return (0, import_time.fromMiliseconds)((n4 || Date.now()) + (0, import_time.toMiliseconds)(e2));
}
function st(e2) {
  return Date.now() >= (0, import_time.toMiliseconds)(e2);
}
function it(e2, n4) {
  return `${e2}${n4 ? `:${n4}` : ""}`;
}
function S(e2 = [], n4 = []) {
  return [.../* @__PURE__ */ new Set([...e2, ...n4])];
}
async function ct({ id: e2, topic: n4, wcDeepLink: t }) {
  try {
    if (!t) return;
    const r2 = typeof t == "string" ? JSON.parse(t) : t;
    let o3 = r2 == null ? void 0 : r2.href;
    if (typeof o3 != "string") return;
    o3.endsWith("/") && (o3 = o3.slice(0, -1));
    const s2 = `${o3}/wc?requestId=${e2}&sessionTopic=${n4}`, i3 = j();
    i3 === b.browser ? s2.startsWith("https://") ? window.open(s2, "_blank", "noreferrer noopener") : window.open(s2, "_self", "noreferrer noopener") : i3 === b.reactNative && typeof (global == null ? void 0 : global.Linking) < "u" && await global.Linking.openURL(s2);
  } catch (r2) {
    console.error(r2);
  }
}
var xe = "irn";
function at(e2) {
  return (e2 == null ? void 0 : e2.relay) || { protocol: xe };
}
function ut(e2) {
  const n4 = C[e2];
  if (typeof n4 > "u") throw new Error(`Relay Protocol not supported: ${e2}`);
  return n4;
}
var dt = Object.defineProperty;
var Fe = Object.getOwnPropertySymbols;
var lt = Object.prototype.hasOwnProperty;
var ft = Object.prototype.propertyIsEnumerable;
var He = (e2, n4, t) => n4 in e2 ? dt(e2, n4, { enumerable: true, configurable: true, writable: true, value: t }) : e2[n4] = t;
var pt = (e2, n4) => {
  for (var t in n4 || (n4 = {})) lt.call(n4, t) && He(e2, t, n4[t]);
  if (Fe) for (var t of Fe(n4)) ft.call(n4, t) && He(e2, t, n4[t]);
  return e2;
};
function qe(e2, n4 = "-") {
  const t = {}, r2 = "relay" + n4;
  return Object.keys(e2).forEach((o3) => {
    if (o3.startsWith(r2)) {
      const s2 = o3.replace(r2, ""), i3 = e2[o3];
      t[s2] = i3;
    }
  }), t;
}
function mt(e2) {
  const n4 = e2.indexOf(":"), t = e2.indexOf("?") !== -1 ? e2.indexOf("?") : void 0, r2 = e2.substring(0, n4), o3 = e2.substring(n4 + 1, t).split("@"), s2 = typeof t < "u" ? e2.substring(t) : "", i3 = V.parse(s2);
  return { protocol: r2, topic: Ge(o3[0]), version: parseInt(o3[1], 10), symKey: i3.symKey, relay: qe(i3) };
}
function Ge(e2) {
  return e2.startsWith("//") ? e2.substring(2) : e2;
}
function We(e2, n4 = "-") {
  const t = "relay", r2 = {};
  return Object.keys(e2).forEach((o3) => {
    const s2 = t + n4 + o3;
    e2[o3] && (r2[s2] = e2[o3]);
  }), r2;
}
function yt(e2) {
  return `${e2.protocol}:${e2.topic}@${e2.version}?` + V.stringify(pt({ symKey: e2.symKey }, We(e2.relay)));
}
function R(e2) {
  const n4 = [];
  return e2.forEach((t) => {
    const [r2, o3] = t.split(":");
    n4.push(`${r2}:${o3}`);
  }), n4;
}
function Ye(e2) {
  const n4 = [];
  return Object.values(e2).forEach((t) => {
    n4.push(...R(t.accounts));
  }), n4;
}
function Je(e2, n4) {
  const t = [];
  return Object.values(e2).forEach((r2) => {
    R(r2.accounts).includes(n4) && t.push(...r2.methods);
  }), t;
}
function Qe(e2, n4) {
  const t = [];
  return Object.values(e2).forEach((r2) => {
    R(r2.accounts).includes(n4) && t.push(...r2.events);
  }), t;
}
function St(e2, n4) {
  const t = sn(e2, n4);
  if (t) throw new Error(t.message);
  const r2 = {};
  for (const [o3, s2] of Object.entries(e2)) r2[o3] = { methods: s2.methods, events: s2.events, chains: s2.accounts.map((i3) => `${i3.split(":")[0]}:${i3.split(":")[1]}`) };
  return r2;
}
function te(e2) {
  return e2.includes(":");
}
function Ze(e2) {
  return te(e2) ? e2.split(":")[0] : e2;
}
var Pt = { INVALID_METHOD: { message: "Invalid method.", code: 1001 }, INVALID_EVENT: { message: "Invalid event.", code: 1002 }, INVALID_UPDATE_REQUEST: { message: "Invalid update request.", code: 1003 }, INVALID_EXTEND_REQUEST: { message: "Invalid extend request.", code: 1004 }, INVALID_SESSION_SETTLE_REQUEST: { message: "Invalid session settle request.", code: 1005 }, UNAUTHORIZED_METHOD: { message: "Unauthorized method.", code: 3001 }, UNAUTHORIZED_EVENT: { message: "Unauthorized event.", code: 3002 }, UNAUTHORIZED_UPDATE_REQUEST: { message: "Unauthorized update request.", code: 3003 }, UNAUTHORIZED_EXTEND_REQUEST: { message: "Unauthorized extend request.", code: 3004 }, USER_REJECTED: { message: "User rejected.", code: 5e3 }, USER_REJECTED_CHAINS: { message: "User rejected chains.", code: 5001 }, USER_REJECTED_METHODS: { message: "User rejected methods.", code: 5002 }, USER_REJECTED_EVENTS: { message: "User rejected events.", code: 5003 }, UNSUPPORTED_CHAINS: { message: "Unsupported chains.", code: 5100 }, UNSUPPORTED_METHODS: { message: "Unsupported methods.", code: 5101 }, UNSUPPORTED_EVENTS: { message: "Unsupported events.", code: 5102 }, UNSUPPORTED_ACCOUNTS: { message: "Unsupported accounts.", code: 5103 }, UNSUPPORTED_NAMESPACE_KEY: { message: "Unsupported namespace key.", code: 5104 }, USER_DISCONNECTED: { message: "User disconnected.", code: 6e3 }, SESSION_SETTLEMENT_FAILED: { message: "Session settlement failed.", code: 7e3 }, WC_METHOD_UNSUPPORTED: { message: "Unsupported wc_ method.", code: 10001 } };
var Tt = { NOT_INITIALIZED: { message: "Not initialized.", code: 1 }, NO_MATCHING_KEY: { message: "No matching key.", code: 2 }, RESTORE_WILL_OVERRIDE: { message: "Restore will override.", code: 3 }, RESUBSCRIBED: { message: "Resubscribed.", code: 4 }, MISSING_OR_INVALID: { message: "Missing or invalid.", code: 5 }, EXPIRED: { message: "Expired.", code: 6 }, UNKNOWN_TYPE: { message: "Unknown type.", code: 7 }, MISMATCHED_TOPIC: { message: "Mismatched topic.", code: 8 }, NON_CONFORMING_NAMESPACES: { message: "Non conforming namespaces.", code: 9 } };
function N(e2, n4) {
  const { message: t, code: r2 } = Tt[e2];
  return { message: n4 ? `${t} ${n4}` : t, code: r2 };
}
function A(e2, n4) {
  const { message: t, code: r2 } = Pt[e2];
  return { message: n4 ? `${t} ${n4}` : t, code: r2 };
}
function C2(e2, n4) {
  return Array.isArray(e2) ? typeof n4 < "u" && e2.length ? e2.every(n4) : true : false;
}
function H(e2) {
  return Object.getPrototypeOf(e2) === Object.prototype && Object.keys(e2).length;
}
function I(e2) {
  return typeof e2 > "u";
}
function y(e2, n4) {
  return n4 && I(e2) ? true : typeof e2 == "string" && !!e2.trim().length;
}
function q(e2, n4) {
  return n4 && I(e2) ? true : typeof e2 == "number" && !isNaN(e2);
}
function wt(e2, n4) {
  const { requiredNamespaces: t } = n4, r2 = Object.keys(e2.namespaces), o3 = Object.keys(t);
  let s2 = true;
  return O(o3, r2) ? (r2.forEach((i3) => {
    const { accounts: d3, methods: l4, events: c5 } = e2.namespaces[i3], u3 = R(d3), a2 = t[i3];
    (!O(M(i3, a2), u3) || !O(a2.methods, l4) || !O(a2.events, c5)) && (s2 = false);
  }), s2) : false;
}
function D(e2) {
  return y(e2, false) && e2.includes(":") ? e2.split(":").length === 2 : false;
}
function Xe(e2) {
  if (y(e2, false) && e2.includes(":")) {
    const n4 = e2.split(":");
    if (n4.length === 3) {
      const t = n4[0] + ":" + n4[1];
      return !!n4[2] && D(t);
    }
  }
  return false;
}
function Rt(e2) {
  if (y(e2, false)) try {
    return typeof new URL(e2) < "u";
  } catch {
    return false;
  }
  return false;
}
function At(e2) {
  var n4;
  return (n4 = e2 == null ? void 0 : e2.proposer) == null ? void 0 : n4.publicKey;
}
function Ut(e2) {
  return e2 == null ? void 0 : e2.topic;
}
function _t(e2, n4) {
  let t = null;
  return y(e2 == null ? void 0 : e2.publicKey, false) || (t = N("MISSING_OR_INVALID", `${n4} controller public key should be a string`)), t;
}
function oe(e2) {
  let n4 = true;
  return C2(e2) ? e2.length && (n4 = e2.every((t) => y(t, false))) : n4 = false, n4;
}
function en(e2, n4, t) {
  let r2 = null;
  return C2(n4) && n4.length ? n4.forEach((o3) => {
    r2 || D(o3) || (r2 = A("UNSUPPORTED_CHAINS", `${t}, chain ${o3} should be a string and conform to "namespace:chainId" format`));
  }) : D(e2) || (r2 = A("UNSUPPORTED_CHAINS", `${t}, chains must be defined as "namespace:chainId" e.g. "eip155:1": {...} in the namespace key OR as an array of CAIP-2 chainIds e.g. eip155: { chains: ["eip155:1", "eip155:5"] }`)), r2;
}
function nn(e2, n4, t) {
  let r2 = null;
  return Object.entries(e2).forEach(([o3, s2]) => {
    if (r2) return;
    const i3 = en(o3, M(o3, s2), `${n4} ${t}`);
    i3 && (r2 = i3);
  }), r2;
}
function tn(e2, n4) {
  let t = null;
  return C2(e2) ? e2.forEach((r2) => {
    t || Xe(r2) || (t = A("UNSUPPORTED_ACCOUNTS", `${n4}, account ${r2} should be a string and conform to "namespace:chainId:address" format`));
  }) : t = A("UNSUPPORTED_ACCOUNTS", `${n4}, accounts should be an array of strings conforming to "namespace:chainId:address" format`), t;
}
function rn(e2, n4) {
  let t = null;
  return Object.values(e2).forEach((r2) => {
    if (t) return;
    const o3 = tn(r2 == null ? void 0 : r2.accounts, `${n4} namespace`);
    o3 && (t = o3);
  }), t;
}
function on(e2, n4) {
  let t = null;
  return oe(e2 == null ? void 0 : e2.methods) ? oe(e2 == null ? void 0 : e2.events) || (t = A("UNSUPPORTED_EVENTS", `${n4}, events should be an array of strings or empty array for no events`)) : t = A("UNSUPPORTED_METHODS", `${n4}, methods should be an array of strings or empty array for no methods`), t;
}
function se(e2, n4) {
  let t = null;
  return Object.values(e2).forEach((r2) => {
    if (t) return;
    const o3 = on(r2, `${n4}, namespace`);
    o3 && (t = o3);
  }), t;
}
function $t(e2, n4, t) {
  let r2 = null;
  if (e2 && H(e2)) {
    const o3 = se(e2, n4);
    o3 && (r2 = o3);
    const s2 = nn(e2, n4, t);
    s2 && (r2 = s2);
  } else r2 = N("MISSING_OR_INVALID", `${n4}, ${t} should be an object with data`);
  return r2;
}
function sn(e2, n4) {
  let t = null;
  if (e2 && H(e2)) {
    const r2 = se(e2, n4);
    r2 && (t = r2);
    const o3 = rn(e2, n4);
    o3 && (t = o3);
  } else t = N("MISSING_OR_INVALID", `${n4}, namespaces should be an object with data`);
  return t;
}
function cn(e2) {
  return y(e2.protocol, true);
}
function jt(e2, n4) {
  let t = false;
  return n4 && !e2 ? t = true : e2 && C2(e2) && e2.length && e2.forEach((r2) => {
    t = cn(r2);
  }), t;
}
function Ct(e2) {
  return typeof e2 == "number";
}
function Dt(e2) {
  return typeof e2 < "u" && typeof e2 !== null;
}
function Vt(e2) {
  return !(!e2 || typeof e2 != "object" || !e2.code || !q(e2.code, false) || !e2.message || !y(e2.message, false));
}
function kt(e2) {
  return !(I(e2) || !y(e2.method, false));
}
function Mt(e2) {
  return !(I(e2) || I(e2.result) && I(e2.error) || !q(e2.id, false) || !y(e2.jsonrpc, false));
}
function Kt(e2) {
  return !(I(e2) || !y(e2.name, false));
}
function Lt(e2, n4) {
  return !(!D(n4) || !Ye(e2).includes(n4));
}
function xt(e2, n4, t) {
  return y(t, false) ? Je(e2, n4).includes(t) : false;
}
function Ft(e2, n4, t) {
  return y(t, false) ? Qe(e2, n4).includes(t) : false;
}
function an(e2, n4, t) {
  let r2 = null;
  const o3 = Ht(e2), s2 = qt(n4), i3 = Object.keys(o3), d3 = Object.keys(s2), l4 = un(Object.keys(e2)), c5 = un(Object.keys(n4)), u3 = l4.filter((a2) => !c5.includes(a2));
  return u3.length && (r2 = N("NON_CONFORMING_NAMESPACES", `${t} namespaces keys don't satisfy requiredNamespaces.
      Required: ${u3.toString()}
      Received: ${Object.keys(n4).toString()}`)), O(i3, d3) || (r2 = N("NON_CONFORMING_NAMESPACES", `${t} namespaces chains don't satisfy required namespaces.
      Required: ${i3.toString()}
      Approved: ${d3.toString()}`)), Object.keys(n4).forEach((a2) => {
    if (!a2.includes(":") || r2) return;
    const g6 = R(n4[a2].accounts);
    g6.includes(a2) || (r2 = N("NON_CONFORMING_NAMESPACES", `${t} namespaces accounts don't satisfy namespace accounts for ${a2}
        Required: ${a2}
        Approved: ${g6.toString()}`));
  }), i3.forEach((a2) => {
    r2 || (O(o3[a2].methods, s2[a2].methods) ? O(o3[a2].events, s2[a2].events) || (r2 = N("NON_CONFORMING_NAMESPACES", `${t} namespaces events don't satisfy namespace events for ${a2}`)) : r2 = N("NON_CONFORMING_NAMESPACES", `${t} namespaces methods don't satisfy namespace methods for ${a2}`));
  }), r2;
}
function Ht(e2) {
  const n4 = {};
  return Object.keys(e2).forEach((t) => {
    var r2;
    t.includes(":") ? n4[t] = e2[t] : (r2 = e2[t].chains) == null || r2.forEach((o3) => {
      n4[o3] = { methods: e2[t].methods, events: e2[t].events };
    });
  }), n4;
}
function un(e2) {
  return [...new Set(e2.map((n4) => n4.includes(":") ? n4.split(":")[0] : n4))];
}
function qt(e2) {
  const n4 = {};
  return Object.keys(e2).forEach((t) => {
    if (t.includes(":")) n4[t] = e2[t];
    else {
      const r2 = R(e2[t].accounts);
      r2 == null ? void 0 : r2.forEach((o3) => {
        n4[o3] = { accounts: e2[t].accounts.filter((s2) => s2.includes(`${o3}:`)), methods: e2[t].methods, events: e2[t].events };
      });
    }
  }), n4;
}
function Gt(e2, n4) {
  return q(e2, false) && e2 <= n4.max && e2 >= n4.min;
}

// node_modules/@walletconnect/core/dist/index.es.js
var import_events5 = __toESM(require_events());

// node_modules/destr/dist/index.mjs
var suspectProtoRx = /"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/;
var suspectConstructorRx = /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/;
var JsonSigRx = /^\s*["[{]|^\s*-?\d{1,16}(\.\d{1,17})?([Ee][+-]?\d+)?\s*$/;
function jsonParseTransform(key, value) {
  if (key === "__proto__" || key === "constructor" && value && typeof value === "object" && "prototype" in value) {
    warnKeyDropped(key);
    return;
  }
  return value;
}
function warnKeyDropped(key) {
  console.warn(`[destr] Dropping "${key}" key to prevent prototype pollution.`);
}
function destr(value, options = {}) {
  if (typeof value !== "string") {
    return value;
  }
  if (value[0] === '"' && value[value.length - 1] === '"' && value.indexOf("\\") === -1) {
    return value.slice(1, -1);
  }
  const _value = value.trim();
  if (_value.length <= 9) {
    switch (_value.toLowerCase()) {
      case "true": {
        return true;
      }
      case "false": {
        return false;
      }
      case "undefined": {
        return void 0;
      }
      case "null": {
        return null;
      }
      case "nan": {
        return Number.NaN;
      }
      case "infinity": {
        return Number.POSITIVE_INFINITY;
      }
      case "-infinity": {
        return Number.NEGATIVE_INFINITY;
      }
    }
  }
  if (!JsonSigRx.test(value)) {
    if (options.strict) {
      throw new SyntaxError("[destr] Invalid JSON");
    }
    return value;
  }
  try {
    if (suspectProtoRx.test(value) || suspectConstructorRx.test(value)) {
      if (options.strict) {
        throw new Error("[destr] Possible prototype pollution");
      }
      return JSON.parse(value, jsonParseTransform);
    }
    return JSON.parse(value);
  } catch (error) {
    if (options.strict) {
      throw error;
    }
    return value;
  }
}

// node_modules/unstorage/dist/shared/unstorage.CoCt7NXC.mjs
function wrapToPromise(value) {
  if (!value || typeof value.then !== "function") {
    return Promise.resolve(value);
  }
  return value;
}
function asyncCall(function_, ...arguments_) {
  try {
    return wrapToPromise(function_(...arguments_));
  } catch (error) {
    return Promise.reject(error);
  }
}
function isPrimitive(value) {
  const type = typeof value;
  return value === null || type !== "object" && type !== "function";
}
function isPureObject(value) {
  const proto = Object.getPrototypeOf(value);
  return !proto || proto.isPrototypeOf(Object);
}
function stringify2(value) {
  if (isPrimitive(value)) {
    return String(value);
  }
  if (isPureObject(value) || Array.isArray(value)) {
    return JSON.stringify(value);
  }
  if (typeof value.toJSON === "function") {
    return stringify2(value.toJSON());
  }
  throw new Error("[unstorage] Cannot stringify value!");
}
var BASE64_PREFIX = "base64:";
function serializeRaw(value) {
  if (typeof value === "string") {
    return value;
  }
  return BASE64_PREFIX + base64Encode(value);
}
function deserializeRaw(value) {
  if (typeof value !== "string") {
    return value;
  }
  if (!value.startsWith(BASE64_PREFIX)) {
    return value;
  }
  return base64Decode(value.slice(BASE64_PREFIX.length));
}
function base64Decode(input) {
  if (globalThis.Buffer) {
    return Buffer.from(input, "base64");
  }
  return Uint8Array.from(
    globalThis.atob(input),
    (c5) => c5.codePointAt(0)
  );
}
function base64Encode(input) {
  if (globalThis.Buffer) {
    return Buffer.from(input).toString("base64");
  }
  return globalThis.btoa(String.fromCodePoint(...input));
}
function normalizeKey(key) {
  var _a;
  if (!key) {
    return "";
  }
  return ((_a = key.split("?")[0]) == null ? void 0 : _a.replace(/[/\\]/g, ":").replace(/:+/g, ":").replace(/^:|:$/g, "")) || "";
}
function joinKeys(...keys2) {
  return normalizeKey(keys2.join(":"));
}
function normalizeBaseKey(base3) {
  base3 = normalizeKey(base3);
  return base3 ? base3 + ":" : "";
}
function filterKeyByDepth(key, depth) {
  if (depth === void 0) {
    return true;
  }
  let substrCount = 0;
  let index = key.indexOf(":");
  while (index > -1) {
    substrCount++;
    index = key.indexOf(":", index + 1);
  }
  return substrCount <= depth;
}
function filterKeyByBase(key, base3) {
  if (base3) {
    return key.startsWith(base3) && key[key.length - 1] !== "$";
  }
  return key[key.length - 1] !== "$";
}

// node_modules/unstorage/dist/index.mjs
function defineDriver(factory) {
  return factory;
}
var DRIVER_NAME = "memory";
var memory = defineDriver(() => {
  const data = /* @__PURE__ */ new Map();
  return {
    name: DRIVER_NAME,
    getInstance: () => data,
    hasItem(key) {
      return data.has(key);
    },
    getItem(key) {
      return data.get(key) ?? null;
    },
    getItemRaw(key) {
      return data.get(key) ?? null;
    },
    setItem(key, value) {
      data.set(key, value);
    },
    setItemRaw(key, value) {
      data.set(key, value);
    },
    removeItem(key) {
      data.delete(key);
    },
    getKeys() {
      return [...data.keys()];
    },
    clear() {
      data.clear();
    },
    dispose() {
      data.clear();
    }
  };
});
function createStorage(options = {}) {
  const context = {
    mounts: { "": options.driver || memory() },
    mountpoints: [""],
    watching: false,
    watchListeners: [],
    unwatch: {}
  };
  const getMount = (key) => {
    for (const base3 of context.mountpoints) {
      if (key.startsWith(base3)) {
        return {
          base: base3,
          relativeKey: key.slice(base3.length),
          driver: context.mounts[base3]
        };
      }
    }
    return {
      base: "",
      relativeKey: key,
      driver: context.mounts[""]
    };
  };
  const getMounts = (base3, includeParent) => {
    return context.mountpoints.filter(
      (mountpoint) => mountpoint.startsWith(base3) || includeParent && base3.startsWith(mountpoint)
    ).map((mountpoint) => ({
      relativeBase: base3.length > mountpoint.length ? base3.slice(mountpoint.length) : void 0,
      mountpoint,
      driver: context.mounts[mountpoint]
    }));
  };
  const onChange = (event, key) => {
    if (!context.watching) {
      return;
    }
    key = normalizeKey(key);
    for (const listener of context.watchListeners) {
      listener(event, key);
    }
  };
  const startWatch = async () => {
    if (context.watching) {
      return;
    }
    context.watching = true;
    for (const mountpoint in context.mounts) {
      context.unwatch[mountpoint] = await watch(
        context.mounts[mountpoint],
        onChange,
        mountpoint
      );
    }
  };
  const stopWatch = async () => {
    if (!context.watching) {
      return;
    }
    for (const mountpoint in context.unwatch) {
      await context.unwatch[mountpoint]();
    }
    context.unwatch = {};
    context.watching = false;
  };
  const runBatch = (items, commonOptions, cb) => {
    const batches = /* @__PURE__ */ new Map();
    const getBatch = (mount) => {
      let batch = batches.get(mount.base);
      if (!batch) {
        batch = {
          driver: mount.driver,
          base: mount.base,
          items: []
        };
        batches.set(mount.base, batch);
      }
      return batch;
    };
    for (const item of items) {
      const isStringItem = typeof item === "string";
      const key = normalizeKey(isStringItem ? item : item.key);
      const value = isStringItem ? void 0 : item.value;
      const options2 = isStringItem || !item.options ? commonOptions : { ...commonOptions, ...item.options };
      const mount = getMount(key);
      getBatch(mount).items.push({
        key,
        value,
        relativeKey: mount.relativeKey,
        options: options2
      });
    }
    return Promise.all([...batches.values()].map((batch) => cb(batch))).then(
      (r2) => r2.flat()
    );
  };
  const storage = {
    // Item
    hasItem(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      return asyncCall(driver.hasItem, relativeKey, opts);
    },
    getItem(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      return asyncCall(driver.getItem, relativeKey, opts).then(
        (value) => destr(value)
      );
    },
    getItems(items, commonOptions = {}) {
      return runBatch(items, commonOptions, (batch) => {
        if (batch.driver.getItems) {
          return asyncCall(
            batch.driver.getItems,
            batch.items.map((item) => ({
              key: item.relativeKey,
              options: item.options
            })),
            commonOptions
          ).then(
            (r2) => r2.map((item) => ({
              key: joinKeys(batch.base, item.key),
              value: destr(item.value)
            }))
          );
        }
        return Promise.all(
          batch.items.map((item) => {
            return asyncCall(
              batch.driver.getItem,
              item.relativeKey,
              item.options
            ).then((value) => ({
              key: item.key,
              value: destr(value)
            }));
          })
        );
      });
    },
    getItemRaw(key, opts = {}) {
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (driver.getItemRaw) {
        return asyncCall(driver.getItemRaw, relativeKey, opts);
      }
      return asyncCall(driver.getItem, relativeKey, opts).then(
        (value) => deserializeRaw(value)
      );
    },
    async setItem(key, value, opts = {}) {
      if (value === void 0) {
        return storage.removeItem(key);
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (!driver.setItem) {
        return;
      }
      await asyncCall(driver.setItem, relativeKey, stringify2(value), opts);
      if (!driver.watch) {
        onChange("update", key);
      }
    },
    async setItems(items, commonOptions) {
      await runBatch(items, commonOptions, async (batch) => {
        if (batch.driver.setItems) {
          return asyncCall(
            batch.driver.setItems,
            batch.items.map((item) => ({
              key: item.relativeKey,
              value: stringify2(item.value),
              options: item.options
            })),
            commonOptions
          );
        }
        if (!batch.driver.setItem) {
          return;
        }
        await Promise.all(
          batch.items.map((item) => {
            return asyncCall(
              batch.driver.setItem,
              item.relativeKey,
              stringify2(item.value),
              item.options
            );
          })
        );
      });
    },
    async setItemRaw(key, value, opts = {}) {
      if (value === void 0) {
        return storage.removeItem(key, opts);
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (driver.setItemRaw) {
        await asyncCall(driver.setItemRaw, relativeKey, value, opts);
      } else if (driver.setItem) {
        await asyncCall(driver.setItem, relativeKey, serializeRaw(value), opts);
      } else {
        return;
      }
      if (!driver.watch) {
        onChange("update", key);
      }
    },
    async removeItem(key, opts = {}) {
      if (typeof opts === "boolean") {
        opts = { removeMeta: opts };
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      if (!driver.removeItem) {
        return;
      }
      await asyncCall(driver.removeItem, relativeKey, opts);
      if (opts.removeMeta || opts.removeMata) {
        await asyncCall(driver.removeItem, relativeKey + "$", opts);
      }
      if (!driver.watch) {
        onChange("remove", key);
      }
    },
    // Meta
    async getMeta(key, opts = {}) {
      if (typeof opts === "boolean") {
        opts = { nativeOnly: opts };
      }
      key = normalizeKey(key);
      const { relativeKey, driver } = getMount(key);
      const meta = /* @__PURE__ */ Object.create(null);
      if (driver.getMeta) {
        Object.assign(meta, await asyncCall(driver.getMeta, relativeKey, opts));
      }
      if (!opts.nativeOnly) {
        const value = await asyncCall(
          driver.getItem,
          relativeKey + "$",
          opts
        ).then((value_) => destr(value_));
        if (value && typeof value === "object") {
          if (typeof value.atime === "string") {
            value.atime = new Date(value.atime);
          }
          if (typeof value.mtime === "string") {
            value.mtime = new Date(value.mtime);
          }
          Object.assign(meta, value);
        }
      }
      return meta;
    },
    setMeta(key, value, opts = {}) {
      return this.setItem(key + "$", value, opts);
    },
    removeMeta(key, opts = {}) {
      return this.removeItem(key + "$", opts);
    },
    // Keys
    async getKeys(base3, opts = {}) {
      var _a;
      base3 = normalizeBaseKey(base3);
      const mounts = getMounts(base3, true);
      let maskedMounts = [];
      const allKeys = [];
      let allMountsSupportMaxDepth = true;
      for (const mount of mounts) {
        if (!((_a = mount.driver.flags) == null ? void 0 : _a.maxDepth)) {
          allMountsSupportMaxDepth = false;
        }
        const rawKeys = await asyncCall(
          mount.driver.getKeys,
          mount.relativeBase,
          opts
        );
        for (const key of rawKeys) {
          const fullKey = mount.mountpoint + normalizeKey(key);
          if (!maskedMounts.some((p7) => fullKey.startsWith(p7))) {
            allKeys.push(fullKey);
          }
        }
        maskedMounts = [
          mount.mountpoint,
          ...maskedMounts.filter((p7) => !p7.startsWith(mount.mountpoint))
        ];
      }
      const shouldFilterByDepth = opts.maxDepth !== void 0 && !allMountsSupportMaxDepth;
      return allKeys.filter(
        (key) => (!shouldFilterByDepth || filterKeyByDepth(key, opts.maxDepth)) && filterKeyByBase(key, base3)
      );
    },
    // Utils
    async clear(base3, opts = {}) {
      base3 = normalizeBaseKey(base3);
      await Promise.all(
        getMounts(base3, false).map(async (m4) => {
          if (m4.driver.clear) {
            return asyncCall(m4.driver.clear, m4.relativeBase, opts);
          }
          if (m4.driver.removeItem) {
            const keys2 = await m4.driver.getKeys(m4.relativeBase || "", opts);
            return Promise.all(
              keys2.map((key) => m4.driver.removeItem(key, opts))
            );
          }
        })
      );
    },
    async dispose() {
      await Promise.all(
        Object.values(context.mounts).map((driver) => dispose(driver))
      );
    },
    async watch(callback) {
      await startWatch();
      context.watchListeners.push(callback);
      return async () => {
        context.watchListeners = context.watchListeners.filter(
          (listener) => listener !== callback
        );
        if (context.watchListeners.length === 0) {
          await stopWatch();
        }
      };
    },
    async unwatch() {
      context.watchListeners = [];
      await stopWatch();
    },
    // Mount
    mount(base3, driver) {
      base3 = normalizeBaseKey(base3);
      if (base3 && context.mounts[base3]) {
        throw new Error(`already mounted at ${base3}`);
      }
      if (base3) {
        context.mountpoints.push(base3);
        context.mountpoints.sort((a2, b5) => b5.length - a2.length);
      }
      context.mounts[base3] = driver;
      if (context.watching) {
        Promise.resolve(watch(driver, onChange, base3)).then((unwatcher) => {
          context.unwatch[base3] = unwatcher;
        }).catch(console.error);
      }
      return storage;
    },
    async unmount(base3, _dispose = true) {
      var _a, _b;
      base3 = normalizeBaseKey(base3);
      if (!base3 || !context.mounts[base3]) {
        return;
      }
      if (context.watching && base3 in context.unwatch) {
        (_b = (_a = context.unwatch)[base3]) == null ? void 0 : _b.call(_a);
        delete context.unwatch[base3];
      }
      if (_dispose) {
        await dispose(context.mounts[base3]);
      }
      context.mountpoints = context.mountpoints.filter((key) => key !== base3);
      delete context.mounts[base3];
    },
    getMount(key = "") {
      key = normalizeKey(key) + ":";
      const m4 = getMount(key);
      return {
        driver: m4.driver,
        base: m4.base
      };
    },
    getMounts(base3 = "", opts = {}) {
      base3 = normalizeKey(base3);
      const mounts = getMounts(base3, opts.parents);
      return mounts.map((m4) => ({
        driver: m4.driver,
        base: m4.mountpoint
      }));
    },
    // Aliases
    keys: (base3, opts = {}) => storage.getKeys(base3, opts),
    get: (key, opts = {}) => storage.getItem(key, opts),
    set: (key, value, opts = {}) => storage.setItem(key, value, opts),
    has: (key, opts = {}) => storage.hasItem(key, opts),
    del: (key, opts = {}) => storage.removeItem(key, opts),
    remove: (key, opts = {}) => storage.removeItem(key, opts)
  };
  return storage;
}
function watch(driver, onChange, base3) {
  return driver.watch ? driver.watch((event, key) => onChange(event, base3 + key)) : () => {
  };
}
async function dispose(driver) {
  if (typeof driver.dispose === "function") {
    await asyncCall(driver.dispose);
  }
}

// node_modules/idb-keyval/dist/index.js
function promisifyRequest(request) {
  return new Promise((resolve, reject) => {
    request.oncomplete = request.onsuccess = () => resolve(request.result);
    request.onabort = request.onerror = () => reject(request.error);
  });
}
function createStore(dbName, storeName) {
  let dbp;
  const getDB = () => {
    if (dbp)
      return dbp;
    const request = indexedDB.open(dbName);
    request.onupgradeneeded = () => request.result.createObjectStore(storeName);
    dbp = promisifyRequest(request);
    dbp.then((db) => {
      db.onclose = () => dbp = void 0;
    }, () => {
    });
    return dbp;
  };
  return (txMode, callback) => getDB().then((db) => callback(db.transaction(storeName, txMode).objectStore(storeName)));
}
var defaultGetStoreFunc;
function defaultGetStore() {
  if (!defaultGetStoreFunc) {
    defaultGetStoreFunc = createStore("keyval-store", "keyval");
  }
  return defaultGetStoreFunc;
}
function get(key, customStore = defaultGetStore()) {
  return customStore("readonly", (store) => promisifyRequest(store.get(key)));
}
function set(key, value, customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.put(value, key);
    return promisifyRequest(store.transaction);
  });
}
function del(key, customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.delete(key);
    return promisifyRequest(store.transaction);
  });
}
function clear(customStore = defaultGetStore()) {
  return customStore("readwrite", (store) => {
    store.clear();
    return promisifyRequest(store.transaction);
  });
}
function eachCursor(store, callback) {
  store.openCursor().onsuccess = function() {
    if (!this.result)
      return;
    callback(this.result);
    this.result.continue();
  };
  return promisifyRequest(store.transaction);
}
function keys(customStore = defaultGetStore()) {
  return customStore("readonly", (store) => {
    if (store.getAllKeys) {
      return promisifyRequest(store.getAllKeys());
    }
    const items = [];
    return eachCursor(store, (cursor) => items.push(cursor.key)).then(() => items);
  });
}

// node_modules/@walletconnect/safe-json/dist/esm/index.js
var JSONStringify = (data) => JSON.stringify(data, (_5, value) => typeof value === "bigint" ? value.toString() + "n" : value);
var JSONParse = (json) => {
  const numbersBiggerThanMaxInt = /([\[:])?(\d{17,}|(?:[9](?:[1-9]07199254740991|0[1-9]7199254740991|00[8-9]199254740991|007[2-9]99254740991|007199[3-9]54740991|0071992[6-9]4740991|00719925[5-9]740991|007199254[8-9]40991|0071992547[5-9]0991|00719925474[1-9]991|00719925474099[2-9])))([,\}\]])/g;
  const serializedData = json.replace(numbersBiggerThanMaxInt, '$1"$2n"$3');
  return JSON.parse(serializedData, (_5, value) => {
    const isCustomFormatBigInt = typeof value === "string" && value.match(/^\d+n$/);
    if (isCustomFormatBigInt)
      return BigInt(value.substring(0, value.length - 1));
    return value;
  });
};
function safeJsonParse(value) {
  if (typeof value !== "string") {
    throw new Error(`Cannot safe json parse value of type ${typeof value}`);
  }
  try {
    return JSONParse(value);
  } catch (_a) {
    return value;
  }
}
function safeJsonStringify(value) {
  return typeof value === "string" ? value : JSONStringify(value) || "";
}

// node_modules/@walletconnect/keyvaluestorage/dist/index.es.js
var x2 = "idb-keyval";
var z = (i3 = {}) => {
  const t = i3.base && i3.base.length > 0 ? `${i3.base}:` : "", e2 = (s2) => t + s2;
  let n4;
  return i3.dbName && i3.storeName && (n4 = createStore(i3.dbName, i3.storeName)), { name: x2, options: i3, async hasItem(s2) {
    return !(typeof await get(e2(s2), n4) > "u");
  }, async getItem(s2) {
    return await get(e2(s2), n4) ?? null;
  }, setItem(s2, a2) {
    return set(e2(s2), a2, n4);
  }, removeItem(s2) {
    return del(e2(s2), n4);
  }, getKeys() {
    return keys(n4);
  }, clear() {
    return clear(n4);
  } };
};
var D2 = "WALLET_CONNECT_V2_INDEXED_DB";
var E = "keyvaluestorage";
var _ = class {
  constructor() {
    this.indexedDb = createStorage({ driver: z({ dbName: D2, storeName: E }) });
  }
  async getKeys() {
    return this.indexedDb.getKeys();
  }
  async getEntries() {
    return (await this.indexedDb.getItems(await this.indexedDb.getKeys())).map((t) => [t.key, t.value]);
  }
  async getItem(t) {
    const e2 = await this.indexedDb.getItem(t);
    if (e2 !== null) return e2;
  }
  async setItem(t, e2) {
    await this.indexedDb.setItem(t, safeJsonStringify(e2));
  }
  async removeItem(t) {
    await this.indexedDb.removeItem(t);
  }
};
var l = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
var c = { exports: {} };
(function() {
  let i3;
  function t() {
  }
  i3 = t, i3.prototype.getItem = function(e2) {
    return this.hasOwnProperty(e2) ? String(this[e2]) : null;
  }, i3.prototype.setItem = function(e2, n4) {
    this[e2] = String(n4);
  }, i3.prototype.removeItem = function(e2) {
    delete this[e2];
  }, i3.prototype.clear = function() {
    const e2 = this;
    Object.keys(e2).forEach(function(n4) {
      e2[n4] = void 0, delete e2[n4];
    });
  }, i3.prototype.key = function(e2) {
    return e2 = e2 || 0, Object.keys(this)[e2];
  }, i3.prototype.__defineGetter__("length", function() {
    return Object.keys(this).length;
  }), typeof l < "u" && l.localStorage ? c.exports = l.localStorage : typeof window < "u" && window.localStorage ? c.exports = window.localStorage : c.exports = new t();
})();
function k(i3) {
  var t;
  return [i3[0], safeJsonParse((t = i3[1]) != null ? t : "")];
}
var K = class {
  constructor() {
    this.localStorage = c.exports;
  }
  async getKeys() {
    return Object.keys(this.localStorage);
  }
  async getEntries() {
    return Object.entries(this.localStorage).map(k);
  }
  async getItem(t) {
    const e2 = this.localStorage.getItem(t);
    if (e2 !== null) return safeJsonParse(e2);
  }
  async setItem(t, e2) {
    this.localStorage.setItem(t, safeJsonStringify(e2));
  }
  async removeItem(t) {
    this.localStorage.removeItem(t);
  }
};
var N10 = "wc_storage_version";
var y2 = 1;
var O2 = async (i3, t, e2) => {
  const n4 = N10, s2 = await t.getItem(n4);
  if (s2 && s2 >= y2) {
    e2(t);
    return;
  }
  const a2 = await i3.getKeys();
  if (!a2.length) {
    e2(t);
    return;
  }
  const m4 = [];
  for (; a2.length; ) {
    const r2 = a2.shift();
    if (!r2) continue;
    const o3 = r2.toLowerCase();
    if (o3.includes("wc@") || o3.includes("walletconnect") || o3.includes("wc_") || o3.includes("wallet_connect")) {
      const f4 = await i3.getItem(r2);
      await t.setItem(r2, f4), m4.push(r2);
    }
  }
  await t.setItem(n4, y2), e2(t), j2(i3, m4);
};
var j2 = async (i3, t) => {
  t.length && t.forEach(async (e2) => {
    await i3.removeItem(e2);
  });
};
var h = class {
  constructor() {
    this.initialized = false, this.setInitialized = (e2) => {
      this.storage = e2, this.initialized = true;
    };
    const t = new K();
    this.storage = t;
    try {
      const e2 = new _();
      O2(t, e2, this.setInitialized);
    } catch {
      this.initialized = true;
    }
  }
  async getKeys() {
    return await this.initialize(), this.storage.getKeys();
  }
  async getEntries() {
    return await this.initialize(), this.storage.getEntries();
  }
  async getItem(t) {
    return await this.initialize(), this.storage.getItem(t);
  }
  async setItem(t, e2) {
    return await this.initialize(), this.storage.setItem(t, e2);
  }
  async removeItem(t) {
    return await this.initialize(), this.storage.removeItem(t);
  }
  async initialize() {
    this.initialized || await new Promise((t) => {
      const e2 = setInterval(() => {
        this.initialized && (clearInterval(e2), t());
      }, 20);
    });
  }
};

// node_modules/@walletconnect/core/dist/index.es.js
var import_heartbeat = __toESM(require_cjs4());

// node_modules/@walletconnect/logger/dist/index.es.js
var import_pino = __toESM(require_browser2());
var import_pino2 = __toESM(require_browser2());
var c2 = { level: "info" };
var n = "custom_context";
var l2 = 1e3 * 1024;
var x3 = Object.defineProperty;
var S2 = Object.defineProperties;
var _2 = Object.getOwnPropertyDescriptors;
var p2 = Object.getOwnPropertySymbols;
var T = Object.prototype.hasOwnProperty;
var z2 = Object.prototype.propertyIsEnumerable;
var f = (r2, e2, t) => e2 in r2 ? x3(r2, e2, { enumerable: true, configurable: true, writable: true, value: t }) : r2[e2] = t;
var i = (r2, e2) => {
  for (var t in e2 || (e2 = {})) T.call(e2, t) && f(r2, t, e2[t]);
  if (p2) for (var t of p2(e2)) z2.call(e2, t) && f(r2, t, e2[t]);
  return r2;
};
var g = (r2, e2) => S2(r2, _2(e2));
function k2(r2) {
  return g(i({}, r2), { level: (r2 == null ? void 0 : r2.level) || c2.level });
}
function v(r2, e2 = n) {
  return r2[e2] || "";
}
function b2(r2, e2, t = n) {
  return r2[t] = e2, r2;
}
function y3(r2, e2 = n) {
  let t = "";
  return typeof r2.bindings > "u" ? t = v(r2, e2) : t = r2.bindings().context || "", t;
}
function w(r2, e2, t = n) {
  const o3 = y3(r2, t);
  return o3.trim() ? `${o3}/${e2}` : e2;
}
function E2(r2, e2, t = n) {
  const o3 = w(r2, e2, t), a2 = r2.child({ context: o3 });
  return b2(a2, o3, t);
}

// node_modules/@walletconnect/types/dist/index.es.js
init_esm();
var import_events2 = __toESM(require_events());
var n2 = class extends IEvents {
  constructor(s2) {
    super(), this.opts = s2, this.protocol = "wc", this.version = 2;
  }
};
var h3 = class extends IEvents {
  constructor(s2, t) {
    super(), this.core = s2, this.logger = t, this.records = /* @__PURE__ */ new Map();
  }
};
var a = class {
  constructor(s2, t) {
    this.logger = s2, this.core = t;
  }
};
var u = class extends IEvents {
  constructor(s2, t) {
    super(), this.relayer = s2, this.logger = t;
  }
};
var g2 = class extends IEvents {
  constructor(s2) {
    super();
  }
};
var p3 = class {
  constructor(s2, t, o3, w5) {
    this.core = s2, this.logger = t, this.name = o3;
  }
};
var d = class extends IEvents {
  constructor(s2, t) {
    super(), this.relayer = s2, this.logger = t;
  }
};
var E3 = class extends IEvents {
  constructor(s2, t) {
    super(), this.core = s2, this.logger = t;
  }
};
var y4 = class {
  constructor(s2, t) {
    this.projectId = s2, this.logger = t;
  }
};
var b3 = class {
  constructor(s2) {
    this.opts = s2, this.protocol = "wc", this.version = 2;
  }
};
var S3 = class {
  constructor(s2) {
    this.client = s2;
  }
};

// node_modules/@walletconnect/relay-auth/dist/index.es.js
var import_time2 = __toESM(require_cjs());
function En2(t) {
  return t instanceof Uint8Array || ArrayBuffer.isView(t) && t.constructor.name === "Uint8Array";
}
function fe2(t, ...e2) {
  if (!En2(t)) throw new Error("Uint8Array expected");
  if (e2.length > 0 && !e2.includes(t.length)) throw new Error("Uint8Array expected of length " + e2 + ", got length=" + t.length);
}
function De2(t, e2 = true) {
  if (t.destroyed) throw new Error("Hash instance has been destroyed");
  if (e2 && t.finished) throw new Error("Hash#digest() has already been called");
}
function gn(t, e2) {
  fe2(t);
  const n4 = e2.outputLen;
  if (t.length < n4) throw new Error("digestInto() expects output buffer of length at least " + n4);
}
var it2 = typeof globalThis == "object" && "crypto" in globalThis ? globalThis.crypto : void 0;
var _t2 = (t) => new DataView(t.buffer, t.byteOffset, t.byteLength);
function yn(t) {
  if (typeof t != "string") throw new Error("utf8ToBytes expected string, got " + typeof t);
  return new Uint8Array(new TextEncoder().encode(t));
}
function de(t) {
  return typeof t == "string" && (t = yn(t)), fe2(t), t;
}
var xn = class {
  clone() {
    return this._cloneInto();
  }
};
function Bn2(t) {
  const e2 = (r2) => t().update(de(r2)).digest(), n4 = t();
  return e2.outputLen = n4.outputLen, e2.blockLen = n4.blockLen, e2.create = () => t(), e2;
}
function he(t = 32) {
  if (it2 && typeof it2.getRandomValues == "function") return it2.getRandomValues(new Uint8Array(t));
  if (it2 && typeof it2.randomBytes == "function") return it2.randomBytes(t);
  throw new Error("crypto.getRandomValues must be defined");
}
function Cn2(t, e2, n4, r2) {
  if (typeof t.setBigUint64 == "function") return t.setBigUint64(e2, n4, r2);
  const o3 = BigInt(32), s2 = BigInt(4294967295), a2 = Number(n4 >> o3 & s2), u3 = Number(n4 & s2), i3 = r2 ? 4 : 0, D4 = r2 ? 0 : 4;
  t.setUint32(e2 + i3, a2, r2), t.setUint32(e2 + D4, u3, r2);
}
var An2 = class extends xn {
  constructor(e2, n4, r2, o3) {
    super(), this.blockLen = e2, this.outputLen = n4, this.padOffset = r2, this.isLE = o3, this.finished = false, this.length = 0, this.pos = 0, this.destroyed = false, this.buffer = new Uint8Array(e2), this.view = _t2(this.buffer);
  }
  update(e2) {
    De2(this);
    const { view: n4, buffer: r2, blockLen: o3 } = this;
    e2 = de(e2);
    const s2 = e2.length;
    for (let a2 = 0; a2 < s2; ) {
      const u3 = Math.min(o3 - this.pos, s2 - a2);
      if (u3 === o3) {
        const i3 = _t2(e2);
        for (; o3 <= s2 - a2; a2 += o3) this.process(i3, a2);
        continue;
      }
      r2.set(e2.subarray(a2, a2 + u3), this.pos), this.pos += u3, a2 += u3, this.pos === o3 && (this.process(n4, 0), this.pos = 0);
    }
    return this.length += e2.length, this.roundClean(), this;
  }
  digestInto(e2) {
    De2(this), gn(e2, this), this.finished = true;
    const { buffer: n4, view: r2, blockLen: o3, isLE: s2 } = this;
    let { pos: a2 } = this;
    n4[a2++] = 128, this.buffer.subarray(a2).fill(0), this.padOffset > o3 - a2 && (this.process(r2, 0), a2 = 0);
    for (let l4 = a2; l4 < o3; l4++) n4[l4] = 0;
    Cn2(r2, o3 - 8, BigInt(this.length * 8), s2), this.process(r2, 0);
    const u3 = _t2(e2), i3 = this.outputLen;
    if (i3 % 4) throw new Error("_sha2: outputLen should be aligned to 32bit");
    const D4 = i3 / 4, c5 = this.get();
    if (D4 > c5.length) throw new Error("_sha2: outputLen bigger than state");
    for (let l4 = 0; l4 < D4; l4++) u3.setUint32(4 * l4, c5[l4], s2);
  }
  digest() {
    const { buffer: e2, outputLen: n4 } = this;
    this.digestInto(e2);
    const r2 = e2.slice(0, n4);
    return this.destroy(), r2;
  }
  _cloneInto(e2) {
    e2 || (e2 = new this.constructor()), e2.set(...this.get());
    const { blockLen: n4, buffer: r2, length: o3, finished: s2, destroyed: a2, pos: u3 } = this;
    return e2.length = o3, e2.pos = u3, e2.finished = s2, e2.destroyed = a2, o3 % n4 && e2.buffer.set(r2), e2;
  }
};
var wt2 = BigInt(2 ** 32 - 1);
var St2 = BigInt(32);
function le2(t, e2 = false) {
  return e2 ? { h: Number(t & wt2), l: Number(t >> St2 & wt2) } : { h: Number(t >> St2 & wt2) | 0, l: Number(t & wt2) | 0 };
}
function mn2(t, e2 = false) {
  let n4 = new Uint32Array(t.length), r2 = new Uint32Array(t.length);
  for (let o3 = 0; o3 < t.length; o3++) {
    const { h: s2, l: a2 } = le2(t[o3], e2);
    [n4[o3], r2[o3]] = [s2, a2];
  }
  return [n4, r2];
}
var _n2 = (t, e2) => BigInt(t >>> 0) << St2 | BigInt(e2 >>> 0);
var Sn = (t, e2, n4) => t >>> n4;
var vn2 = (t, e2, n4) => t << 32 - n4 | e2 >>> n4;
var In = (t, e2, n4) => t >>> n4 | e2 << 32 - n4;
var Un2 = (t, e2, n4) => t << 32 - n4 | e2 >>> n4;
var Tn = (t, e2, n4) => t << 64 - n4 | e2 >>> n4 - 32;
var Fn2 = (t, e2, n4) => t >>> n4 - 32 | e2 << 64 - n4;
var Nn = (t, e2) => e2;
var Ln = (t, e2) => t;
var On2 = (t, e2, n4) => t << n4 | e2 >>> 32 - n4;
var Hn = (t, e2, n4) => e2 << n4 | t >>> 32 - n4;
var zn = (t, e2, n4) => e2 << n4 - 32 | t >>> 64 - n4;
var Mn2 = (t, e2, n4) => t << n4 - 32 | e2 >>> 64 - n4;
function qn2(t, e2, n4, r2) {
  const o3 = (e2 >>> 0) + (r2 >>> 0);
  return { h: t + n4 + (o3 / 2 ** 32 | 0) | 0, l: o3 | 0 };
}
var $n2 = (t, e2, n4) => (t >>> 0) + (e2 >>> 0) + (n4 >>> 0);
var kn2 = (t, e2, n4, r2) => e2 + n4 + r2 + (t / 2 ** 32 | 0) | 0;
var Rn2 = (t, e2, n4, r2) => (t >>> 0) + (e2 >>> 0) + (n4 >>> 0) + (r2 >>> 0);
var jn2 = (t, e2, n4, r2, o3) => e2 + n4 + r2 + o3 + (t / 2 ** 32 | 0) | 0;
var Zn = (t, e2, n4, r2, o3) => (t >>> 0) + (e2 >>> 0) + (n4 >>> 0) + (r2 >>> 0) + (o3 >>> 0);
var Gn = (t, e2, n4, r2, o3, s2) => e2 + n4 + r2 + o3 + s2 + (t / 2 ** 32 | 0) | 0;
var x4 = { fromBig: le2, split: mn2, toBig: _n2, shrSH: Sn, shrSL: vn2, rotrSH: In, rotrSL: Un2, rotrBH: Tn, rotrBL: Fn2, rotr32H: Nn, rotr32L: Ln, rotlSH: On2, rotlSL: Hn, rotlBH: zn, rotlBL: Mn2, add: qn2, add3L: $n2, add3H: kn2, add4L: Rn2, add4H: jn2, add5H: Gn, add5L: Zn };
var [Vn2, Yn2] = (() => x4.split(["0x428a2f98d728ae22", "0x7137449123ef65cd", "0xb5c0fbcfec4d3b2f", "0xe9b5dba58189dbbc", "0x3956c25bf348b538", "0x59f111f1b605d019", "0x923f82a4af194f9b", "0xab1c5ed5da6d8118", "0xd807aa98a3030242", "0x12835b0145706fbe", "0x243185be4ee4b28c", "0x550c7dc3d5ffb4e2", "0x72be5d74f27b896f", "0x80deb1fe3b1696b1", "0x9bdc06a725c71235", "0xc19bf174cf692694", "0xe49b69c19ef14ad2", "0xefbe4786384f25e3", "0x0fc19dc68b8cd5b5", "0x240ca1cc77ac9c65", "0x2de92c6f592b0275", "0x4a7484aa6ea6e483", "0x5cb0a9dcbd41fbd4", "0x76f988da831153b5", "0x983e5152ee66dfab", "0xa831c66d2db43210", "0xb00327c898fb213f", "0xbf597fc7beef0ee4", "0xc6e00bf33da88fc2", "0xd5a79147930aa725", "0x06ca6351e003826f", "0x142929670a0e6e70", "0x27b70a8546d22ffc", "0x2e1b21385c26c926", "0x4d2c6dfc5ac42aed", "0x53380d139d95b3df", "0x650a73548baf63de", "0x766a0abb3c77b2a8", "0x81c2c92e47edaee6", "0x92722c851482353b", "0xa2bfe8a14cf10364", "0xa81a664bbc423001", "0xc24b8b70d0f89791", "0xc76c51a30654be30", "0xd192e819d6ef5218", "0xd69906245565a910", "0xf40e35855771202a", "0x106aa07032bbd1b8", "0x19a4c116b8d2d0c8", "0x1e376c085141ab53", "0x2748774cdf8eeb99", "0x34b0bcb5e19b48a8", "0x391c0cb3c5c95a63", "0x4ed8aa4ae3418acb", "0x5b9cca4f7763e373", "0x682e6ff3d6b2b8a3", "0x748f82ee5defb2fc", "0x78a5636f43172f60", "0x84c87814a1f0ab72", "0x8cc702081a6439ec", "0x90befffa23631e28", "0xa4506cebde82bde9", "0xbef9a3f7b2c67915", "0xc67178f2e372532b", "0xca273eceea26619c", "0xd186b8c721c0c207", "0xeada7dd6cde0eb1e", "0xf57d4f7fee6ed178", "0x06f067aa72176fba", "0x0a637dc5a2c898a6", "0x113f9804bef90dae", "0x1b710b35131c471b", "0x28db77f523047d84", "0x32caab7b40c72493", "0x3c9ebe0a15c9bebc", "0x431d67c49c100d4c", "0x4cc5d4becb3e42b6", "0x597f299cfc657e2a", "0x5fcb6fab3ad6faec", "0x6c44198c4a475817"].map((t) => BigInt(t))))();
var P = new Uint32Array(80);
var Q2 = new Uint32Array(80);
var Jn = class extends An2 {
  constructor() {
    super(128, 64, 16, false), this.Ah = 1779033703, this.Al = -205731576, this.Bh = -1150833019, this.Bl = -2067093701, this.Ch = 1013904242, this.Cl = -23791573, this.Dh = -1521486534, this.Dl = 1595750129, this.Eh = 1359893119, this.El = -1377402159, this.Fh = -1694144372, this.Fl = 725511199, this.Gh = 528734635, this.Gl = -79577749, this.Hh = 1541459225, this.Hl = 327033209;
  }
  get() {
    const { Ah: e2, Al: n4, Bh: r2, Bl: o3, Ch: s2, Cl: a2, Dh: u3, Dl: i3, Eh: D4, El: c5, Fh: l4, Fl: p7, Gh: w5, Gl: h4, Hh: g6, Hl: S5 } = this;
    return [e2, n4, r2, o3, s2, a2, u3, i3, D4, c5, l4, p7, w5, h4, g6, S5];
  }
  set(e2, n4, r2, o3, s2, a2, u3, i3, D4, c5, l4, p7, w5, h4, g6, S5) {
    this.Ah = e2 | 0, this.Al = n4 | 0, this.Bh = r2 | 0, this.Bl = o3 | 0, this.Ch = s2 | 0, this.Cl = a2 | 0, this.Dh = u3 | 0, this.Dl = i3 | 0, this.Eh = D4 | 0, this.El = c5 | 0, this.Fh = l4 | 0, this.Fl = p7 | 0, this.Gh = w5 | 0, this.Gl = h4 | 0, this.Hh = g6 | 0, this.Hl = S5 | 0;
  }
  process(e2, n4) {
    for (let d3 = 0; d3 < 16; d3++, n4 += 4) P[d3] = e2.getUint32(n4), Q2[d3] = e2.getUint32(n4 += 4);
    for (let d3 = 16; d3 < 80; d3++) {
      const m4 = P[d3 - 15] | 0, F = Q2[d3 - 15] | 0, q3 = x4.rotrSH(m4, F, 1) ^ x4.rotrSH(m4, F, 8) ^ x4.shrSH(m4, F, 7), z4 = x4.rotrSL(m4, F, 1) ^ x4.rotrSL(m4, F, 8) ^ x4.shrSL(m4, F, 7), I2 = P[d3 - 2] | 0, O7 = Q2[d3 - 2] | 0, ot4 = x4.rotrSH(I2, O7, 19) ^ x4.rotrBH(I2, O7, 61) ^ x4.shrSH(I2, O7, 6), tt3 = x4.rotrSL(I2, O7, 19) ^ x4.rotrBL(I2, O7, 61) ^ x4.shrSL(I2, O7, 6), st3 = x4.add4L(z4, tt3, Q2[d3 - 7], Q2[d3 - 16]), at3 = x4.add4H(st3, q3, ot4, P[d3 - 7], P[d3 - 16]);
      P[d3] = at3 | 0, Q2[d3] = st3 | 0;
    }
    let { Ah: r2, Al: o3, Bh: s2, Bl: a2, Ch: u3, Cl: i3, Dh: D4, Dl: c5, Eh: l4, El: p7, Fh: w5, Fl: h4, Gh: g6, Gl: S5, Hh: v4, Hl: L5 } = this;
    for (let d3 = 0; d3 < 80; d3++) {
      const m4 = x4.rotrSH(l4, p7, 14) ^ x4.rotrSH(l4, p7, 18) ^ x4.rotrBH(l4, p7, 41), F = x4.rotrSL(l4, p7, 14) ^ x4.rotrSL(l4, p7, 18) ^ x4.rotrBL(l4, p7, 41), q3 = l4 & w5 ^ ~l4 & g6, z4 = p7 & h4 ^ ~p7 & S5, I2 = x4.add5L(L5, F, z4, Yn2[d3], Q2[d3]), O7 = x4.add5H(I2, v4, m4, q3, Vn2[d3], P[d3]), ot4 = I2 | 0, tt3 = x4.rotrSH(r2, o3, 28) ^ x4.rotrBH(r2, o3, 34) ^ x4.rotrBH(r2, o3, 39), st3 = x4.rotrSL(r2, o3, 28) ^ x4.rotrBL(r2, o3, 34) ^ x4.rotrBL(r2, o3, 39), at3 = r2 & s2 ^ r2 & u3 ^ s2 & u3, Ct3 = o3 & a2 ^ o3 & i3 ^ a2 & i3;
      v4 = g6 | 0, L5 = S5 | 0, g6 = w5 | 0, S5 = h4 | 0, w5 = l4 | 0, h4 = p7 | 0, { h: l4, l: p7 } = x4.add(D4 | 0, c5 | 0, O7 | 0, ot4 | 0), D4 = u3 | 0, c5 = i3 | 0, u3 = s2 | 0, i3 = a2 | 0, s2 = r2 | 0, a2 = o3 | 0;
      const At3 = x4.add3L(ot4, st3, Ct3);
      r2 = x4.add3H(At3, O7, tt3, at3), o3 = At3 | 0;
    }
    ({ h: r2, l: o3 } = x4.add(this.Ah | 0, this.Al | 0, r2 | 0, o3 | 0)), { h: s2, l: a2 } = x4.add(this.Bh | 0, this.Bl | 0, s2 | 0, a2 | 0), { h: u3, l: i3 } = x4.add(this.Ch | 0, this.Cl | 0, u3 | 0, i3 | 0), { h: D4, l: c5 } = x4.add(this.Dh | 0, this.Dl | 0, D4 | 0, c5 | 0), { h: l4, l: p7 } = x4.add(this.Eh | 0, this.El | 0, l4 | 0, p7 | 0), { h: w5, l: h4 } = x4.add(this.Fh | 0, this.Fl | 0, w5 | 0, h4 | 0), { h: g6, l: S5 } = x4.add(this.Gh | 0, this.Gl | 0, g6 | 0, S5 | 0), { h: v4, l: L5 } = x4.add(this.Hh | 0, this.Hl | 0, v4 | 0, L5 | 0), this.set(r2, o3, s2, a2, u3, i3, D4, c5, l4, p7, w5, h4, g6, S5, v4, L5);
  }
  roundClean() {
    P.fill(0), Q2.fill(0);
  }
  destroy() {
    this.buffer.fill(0), this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);
  }
};
var Kn2 = Bn2(() => new Jn());
var vt = BigInt(0);
var be = BigInt(1);
var Wn = BigInt(2);
function It(t) {
  return t instanceof Uint8Array || ArrayBuffer.isView(t) && t.constructor.name === "Uint8Array";
}
function Ut2(t) {
  if (!It(t)) throw new Error("Uint8Array expected");
}
function Tt2(t, e2) {
  if (typeof e2 != "boolean") throw new Error(t + " boolean expected, got " + e2);
}
var Xn2 = Array.from({ length: 256 }, (t, e2) => e2.toString(16).padStart(2, "0"));
function Ft2(t) {
  Ut2(t);
  let e2 = "";
  for (let n4 = 0; n4 < t.length; n4++) e2 += Xn2[t[n4]];
  return e2;
}
function pe2(t) {
  if (typeof t != "string") throw new Error("hex string expected, got " + typeof t);
  return t === "" ? vt : BigInt("0x" + t);
}
var K2 = { _0: 48, _9: 57, A: 65, F: 70, a: 97, f: 102 };
function we2(t) {
  if (t >= K2._0 && t <= K2._9) return t - K2._0;
  if (t >= K2.A && t <= K2.F) return t - (K2.A - 10);
  if (t >= K2.a && t <= K2.f) return t - (K2.a - 10);
}
function Ee(t) {
  if (typeof t != "string") throw new Error("hex string expected, got " + typeof t);
  const e2 = t.length, n4 = e2 / 2;
  if (e2 % 2) throw new Error("hex string expected, got unpadded hex of length " + e2);
  const r2 = new Uint8Array(n4);
  for (let o3 = 0, s2 = 0; o3 < n4; o3++, s2 += 2) {
    const a2 = we2(t.charCodeAt(s2)), u3 = we2(t.charCodeAt(s2 + 1));
    if (a2 === void 0 || u3 === void 0) {
      const i3 = t[s2] + t[s2 + 1];
      throw new Error('hex string expected, got non-hex character "' + i3 + '" at index ' + s2);
    }
    r2[o3] = a2 * 16 + u3;
  }
  return r2;
}
function Pn(t) {
  return pe2(Ft2(t));
}
function Et(t) {
  return Ut2(t), pe2(Ft2(Uint8Array.from(t).reverse()));
}
function ge(t, e2) {
  return Ee(t.toString(16).padStart(e2 * 2, "0"));
}
function Nt(t, e2) {
  return ge(t, e2).reverse();
}
function W(t, e2, n4) {
  let r2;
  if (typeof e2 == "string") try {
    r2 = Ee(e2);
  } catch (s2) {
    throw new Error(t + " must be hex string or Uint8Array, cause: " + s2);
  }
  else if (It(e2)) r2 = Uint8Array.from(e2);
  else throw new Error(t + " must be hex string or Uint8Array");
  const o3 = r2.length;
  if (typeof n4 == "number" && o3 !== n4) throw new Error(t + " of length " + n4 + " expected, got " + o3);
  return r2;
}
function ye(...t) {
  let e2 = 0;
  for (let r2 = 0; r2 < t.length; r2++) {
    const o3 = t[r2];
    Ut2(o3), e2 += o3.length;
  }
  const n4 = new Uint8Array(e2);
  for (let r2 = 0, o3 = 0; r2 < t.length; r2++) {
    const s2 = t[r2];
    n4.set(s2, o3), o3 += s2.length;
  }
  return n4;
}
var Lt2 = (t) => typeof t == "bigint" && vt <= t;
function Qn(t, e2, n4) {
  return Lt2(t) && Lt2(e2) && Lt2(n4) && e2 <= t && t < n4;
}
function ft2(t, e2, n4, r2) {
  if (!Qn(e2, n4, r2)) throw new Error("expected valid " + t + ": " + n4 + " <= n < " + r2 + ", got " + e2);
}
function tr(t) {
  let e2;
  for (e2 = 0; t > vt; t >>= be, e2 += 1) ;
  return e2;
}
var er = (t) => (Wn << BigInt(t - 1)) - be;
var nr = { bigint: (t) => typeof t == "bigint", function: (t) => typeof t == "function", boolean: (t) => typeof t == "boolean", string: (t) => typeof t == "string", stringOrUint8Array: (t) => typeof t == "string" || It(t), isSafeInteger: (t) => Number.isSafeInteger(t), array: (t) => Array.isArray(t), field: (t, e2) => e2.Fp.isValid(t), hash: (t) => typeof t == "function" && Number.isSafeInteger(t.outputLen) };
function Ot(t, e2, n4 = {}) {
  const r2 = (o3, s2, a2) => {
    const u3 = nr[s2];
    if (typeof u3 != "function") throw new Error("invalid validator function");
    const i3 = t[o3];
    if (!(a2 && i3 === void 0) && !u3(i3, t)) throw new Error("param " + String(o3) + " is invalid. Expected " + s2 + ", got " + i3);
  };
  for (const [o3, s2] of Object.entries(e2)) r2(o3, s2, false);
  for (const [o3, s2] of Object.entries(n4)) r2(o3, s2, true);
  return t;
}
function xe2(t) {
  const e2 = /* @__PURE__ */ new WeakMap();
  return (n4, ...r2) => {
    const o3 = e2.get(n4);
    if (o3 !== void 0) return o3;
    const s2 = t(n4, ...r2);
    return e2.set(n4, s2), s2;
  };
}
var M2 = BigInt(0);
var N11 = BigInt(1);
var nt2 = BigInt(2);
var rr = BigInt(3);
var Ht2 = BigInt(4);
var Be = BigInt(5);
var Ce2 = BigInt(8);
function H2(t, e2) {
  const n4 = t % e2;
  return n4 >= M2 ? n4 : e2 + n4;
}
function or2(t, e2, n4) {
  if (e2 < M2) throw new Error("invalid exponent, negatives unsupported");
  if (n4 <= M2) throw new Error("invalid modulus");
  if (n4 === N11) return M2;
  let r2 = N11;
  for (; e2 > M2; ) e2 & N11 && (r2 = r2 * t % n4), t = t * t % n4, e2 >>= N11;
  return r2;
}
function J2(t, e2, n4) {
  let r2 = t;
  for (; e2-- > M2; ) r2 *= r2, r2 %= n4;
  return r2;
}
function Ae2(t, e2) {
  if (t === M2) throw new Error("invert: expected non-zero number");
  if (e2 <= M2) throw new Error("invert: expected positive modulus, got " + e2);
  let n4 = H2(t, e2), r2 = e2, o3 = M2, s2 = N11;
  for (; n4 !== M2; ) {
    const u3 = r2 / n4, i3 = r2 % n4, D4 = o3 - s2 * u3;
    r2 = n4, n4 = i3, o3 = s2, s2 = D4;
  }
  if (r2 !== N11) throw new Error("invert: does not exist");
  return H2(o3, e2);
}
function sr(t) {
  const e2 = (t - N11) / nt2;
  let n4, r2, o3;
  for (n4 = t - N11, r2 = 0; n4 % nt2 === M2; n4 /= nt2, r2++) ;
  for (o3 = nt2; o3 < t && or2(o3, e2, t) !== t - N11; o3++) if (o3 > 1e3) throw new Error("Cannot find square root: likely non-prime P");
  if (r2 === 1) {
    const a2 = (t + N11) / Ht2;
    return function(i3, D4) {
      const c5 = i3.pow(D4, a2);
      if (!i3.eql(i3.sqr(c5), D4)) throw new Error("Cannot find square root");
      return c5;
    };
  }
  const s2 = (n4 + N11) / nt2;
  return function(u3, i3) {
    if (u3.pow(i3, e2) === u3.neg(u3.ONE)) throw new Error("Cannot find square root");
    let D4 = r2, c5 = u3.pow(u3.mul(u3.ONE, o3), n4), l4 = u3.pow(i3, s2), p7 = u3.pow(i3, n4);
    for (; !u3.eql(p7, u3.ONE); ) {
      if (u3.eql(p7, u3.ZERO)) return u3.ZERO;
      let w5 = 1;
      for (let g6 = u3.sqr(p7); w5 < D4 && !u3.eql(g6, u3.ONE); w5++) g6 = u3.sqr(g6);
      const h4 = u3.pow(c5, N11 << BigInt(D4 - w5 - 1));
      c5 = u3.sqr(h4), l4 = u3.mul(l4, h4), p7 = u3.mul(p7, c5), D4 = w5;
    }
    return l4;
  };
}
function ir(t) {
  if (t % Ht2 === rr) {
    const e2 = (t + N11) / Ht2;
    return function(r2, o3) {
      const s2 = r2.pow(o3, e2);
      if (!r2.eql(r2.sqr(s2), o3)) throw new Error("Cannot find square root");
      return s2;
    };
  }
  if (t % Ce2 === Be) {
    const e2 = (t - Be) / Ce2;
    return function(r2, o3) {
      const s2 = r2.mul(o3, nt2), a2 = r2.pow(s2, e2), u3 = r2.mul(o3, a2), i3 = r2.mul(r2.mul(u3, nt2), a2), D4 = r2.mul(u3, r2.sub(i3, r2.ONE));
      if (!r2.eql(r2.sqr(D4), o3)) throw new Error("Cannot find square root");
      return D4;
    };
  }
  return sr(t);
}
var ur = (t, e2) => (H2(t, e2) & N11) === N11;
var cr = ["create", "isValid", "is0", "neg", "inv", "sqrt", "sqr", "eql", "add", "sub", "mul", "pow", "div", "addN", "subN", "mulN", "sqrN"];
function ar(t) {
  const e2 = { ORDER: "bigint", MASK: "bigint", BYTES: "isSafeInteger", BITS: "isSafeInteger" }, n4 = cr.reduce((r2, o3) => (r2[o3] = "function", r2), e2);
  return Ot(t, n4);
}
function fr(t, e2, n4) {
  if (n4 < M2) throw new Error("invalid exponent, negatives unsupported");
  if (n4 === M2) return t.ONE;
  if (n4 === N11) return e2;
  let r2 = t.ONE, o3 = e2;
  for (; n4 > M2; ) n4 & N11 && (r2 = t.mul(r2, o3)), o3 = t.sqr(o3), n4 >>= N11;
  return r2;
}
function Dr(t, e2) {
  const n4 = new Array(e2.length), r2 = e2.reduce((s2, a2, u3) => t.is0(a2) ? s2 : (n4[u3] = s2, t.mul(s2, a2)), t.ONE), o3 = t.inv(r2);
  return e2.reduceRight((s2, a2, u3) => t.is0(a2) ? s2 : (n4[u3] = t.mul(s2, n4[u3]), t.mul(s2, a2)), o3), n4;
}
function me(t, e2) {
  const n4 = e2 !== void 0 ? e2 : t.toString(2).length, r2 = Math.ceil(n4 / 8);
  return { nBitLength: n4, nByteLength: r2 };
}
function _e2(t, e2, n4 = false, r2 = {}) {
  if (t <= M2) throw new Error("invalid field: expected ORDER > 0, got " + t);
  const { nBitLength: o3, nByteLength: s2 } = me(t, e2);
  if (s2 > 2048) throw new Error("invalid field: expected ORDER of <= 2048 bytes");
  let a2;
  const u3 = Object.freeze({ ORDER: t, isLE: n4, BITS: o3, BYTES: s2, MASK: er(o3), ZERO: M2, ONE: N11, create: (i3) => H2(i3, t), isValid: (i3) => {
    if (typeof i3 != "bigint") throw new Error("invalid field element: expected bigint, got " + typeof i3);
    return M2 <= i3 && i3 < t;
  }, is0: (i3) => i3 === M2, isOdd: (i3) => (i3 & N11) === N11, neg: (i3) => H2(-i3, t), eql: (i3, D4) => i3 === D4, sqr: (i3) => H2(i3 * i3, t), add: (i3, D4) => H2(i3 + D4, t), sub: (i3, D4) => H2(i3 - D4, t), mul: (i3, D4) => H2(i3 * D4, t), pow: (i3, D4) => fr(u3, i3, D4), div: (i3, D4) => H2(i3 * Ae2(D4, t), t), sqrN: (i3) => i3 * i3, addN: (i3, D4) => i3 + D4, subN: (i3, D4) => i3 - D4, mulN: (i3, D4) => i3 * D4, inv: (i3) => Ae2(i3, t), sqrt: r2.sqrt || ((i3) => (a2 || (a2 = ir(t)), a2(u3, i3))), invertBatch: (i3) => Dr(u3, i3), cmov: (i3, D4, c5) => c5 ? D4 : i3, toBytes: (i3) => n4 ? Nt(i3, s2) : ge(i3, s2), fromBytes: (i3) => {
    if (i3.length !== s2) throw new Error("Field.fromBytes: expected " + s2 + " bytes, got " + i3.length);
    return n4 ? Et(i3) : Pn(i3);
  } });
  return Object.freeze(u3);
}
var Se2 = BigInt(0);
var gt = BigInt(1);
function zt(t, e2) {
  const n4 = e2.negate();
  return t ? n4 : e2;
}
function ve(t, e2) {
  if (!Number.isSafeInteger(t) || t <= 0 || t > e2) throw new Error("invalid window size, expected [1.." + e2 + "], got W=" + t);
}
function Mt2(t, e2) {
  ve(t, e2);
  const n4 = Math.ceil(e2 / t) + 1, r2 = 2 ** (t - 1);
  return { windows: n4, windowSize: r2 };
}
function dr(t, e2) {
  if (!Array.isArray(t)) throw new Error("array expected");
  t.forEach((n4, r2) => {
    if (!(n4 instanceof e2)) throw new Error("invalid point at index " + r2);
  });
}
function hr(t, e2) {
  if (!Array.isArray(t)) throw new Error("array of scalars expected");
  t.forEach((n4, r2) => {
    if (!e2.isValid(n4)) throw new Error("invalid scalar at index " + r2);
  });
}
var qt2 = /* @__PURE__ */ new WeakMap();
var Ie2 = /* @__PURE__ */ new WeakMap();
function $t2(t) {
  return Ie2.get(t) || 1;
}
function lr(t, e2) {
  return { constTimeNegate: zt, hasPrecomputes(n4) {
    return $t2(n4) !== 1;
  }, unsafeLadder(n4, r2, o3 = t.ZERO) {
    let s2 = n4;
    for (; r2 > Se2; ) r2 & gt && (o3 = o3.add(s2)), s2 = s2.double(), r2 >>= gt;
    return o3;
  }, precomputeWindow(n4, r2) {
    const { windows: o3, windowSize: s2 } = Mt2(r2, e2), a2 = [];
    let u3 = n4, i3 = u3;
    for (let D4 = 0; D4 < o3; D4++) {
      i3 = u3, a2.push(i3);
      for (let c5 = 1; c5 < s2; c5++) i3 = i3.add(u3), a2.push(i3);
      u3 = i3.double();
    }
    return a2;
  }, wNAF(n4, r2, o3) {
    const { windows: s2, windowSize: a2 } = Mt2(n4, e2);
    let u3 = t.ZERO, i3 = t.BASE;
    const D4 = BigInt(2 ** n4 - 1), c5 = 2 ** n4, l4 = BigInt(n4);
    for (let p7 = 0; p7 < s2; p7++) {
      const w5 = p7 * a2;
      let h4 = Number(o3 & D4);
      o3 >>= l4, h4 > a2 && (h4 -= c5, o3 += gt);
      const g6 = w5, S5 = w5 + Math.abs(h4) - 1, v4 = p7 % 2 !== 0, L5 = h4 < 0;
      h4 === 0 ? i3 = i3.add(zt(v4, r2[g6])) : u3 = u3.add(zt(L5, r2[S5]));
    }
    return { p: u3, f: i3 };
  }, wNAFUnsafe(n4, r2, o3, s2 = t.ZERO) {
    const { windows: a2, windowSize: u3 } = Mt2(n4, e2), i3 = BigInt(2 ** n4 - 1), D4 = 2 ** n4, c5 = BigInt(n4);
    for (let l4 = 0; l4 < a2; l4++) {
      const p7 = l4 * u3;
      if (o3 === Se2) break;
      let w5 = Number(o3 & i3);
      if (o3 >>= c5, w5 > u3 && (w5 -= D4, o3 += gt), w5 === 0) continue;
      let h4 = r2[p7 + Math.abs(w5) - 1];
      w5 < 0 && (h4 = h4.negate()), s2 = s2.add(h4);
    }
    return s2;
  }, getPrecomputes(n4, r2, o3) {
    let s2 = qt2.get(r2);
    return s2 || (s2 = this.precomputeWindow(r2, n4), n4 !== 1 && qt2.set(r2, o3(s2))), s2;
  }, wNAFCached(n4, r2, o3) {
    const s2 = $t2(n4);
    return this.wNAF(s2, this.getPrecomputes(s2, n4, o3), r2);
  }, wNAFCachedUnsafe(n4, r2, o3, s2) {
    const a2 = $t2(n4);
    return a2 === 1 ? this.unsafeLadder(n4, r2, s2) : this.wNAFUnsafe(a2, this.getPrecomputes(a2, n4, o3), r2, s2);
  }, setWindowSize(n4, r2) {
    ve(r2, e2), Ie2.set(n4, r2), qt2.delete(n4);
  } };
}
function br(t, e2, n4, r2) {
  if (dr(n4, t), hr(r2, e2), n4.length !== r2.length) throw new Error("arrays of points and scalars must have equal length");
  const o3 = t.ZERO, s2 = tr(BigInt(n4.length)), a2 = s2 > 12 ? s2 - 3 : s2 > 4 ? s2 - 2 : s2 ? 2 : 1, u3 = (1 << a2) - 1, i3 = new Array(u3 + 1).fill(o3), D4 = Math.floor((e2.BITS - 1) / a2) * a2;
  let c5 = o3;
  for (let l4 = D4; l4 >= 0; l4 -= a2) {
    i3.fill(o3);
    for (let w5 = 0; w5 < r2.length; w5++) {
      const h4 = r2[w5], g6 = Number(h4 >> BigInt(l4) & BigInt(u3));
      i3[g6] = i3[g6].add(n4[w5]);
    }
    let p7 = o3;
    for (let w5 = i3.length - 1, h4 = o3; w5 > 0; w5--) h4 = h4.add(i3[w5]), p7 = p7.add(h4);
    if (c5 = c5.add(p7), l4 !== 0) for (let w5 = 0; w5 < a2; w5++) c5 = c5.double();
  }
  return c5;
}
function pr(t) {
  return ar(t.Fp), Ot(t, { n: "bigint", h: "bigint", Gx: "field", Gy: "field" }, { nBitLength: "isSafeInteger", nByteLength: "isSafeInteger" }), Object.freeze({ ...me(t.n, t.nBitLength), ...t, p: t.Fp.ORDER });
}
var G2 = BigInt(0);
var j3 = BigInt(1);
var yt2 = BigInt(2);
var wr = BigInt(8);
var Er = { zip215: true };
function gr(t) {
  const e2 = pr(t);
  return Ot(t, { hash: "function", a: "bigint", d: "bigint", randomBytes: "function" }, { adjustScalarBytes: "function", domain: "function", uvRatio: "function", mapToCurve: "function" }), Object.freeze({ ...e2 });
}
function yr(t) {
  const e2 = gr(t), { Fp: n4, n: r2, prehash: o3, hash: s2, randomBytes: a2, nByteLength: u3, h: i3 } = e2, D4 = yt2 << BigInt(u3 * 8) - j3, c5 = n4.create, l4 = _e2(e2.n, e2.nBitLength), p7 = e2.uvRatio || ((y6, f4) => {
    try {
      return { isValid: true, value: n4.sqrt(y6 * n4.inv(f4)) };
    } catch {
      return { isValid: false, value: G2 };
    }
  }), w5 = e2.adjustScalarBytes || ((y6) => y6), h4 = e2.domain || ((y6, f4, b5) => {
    if (Tt2("phflag", b5), f4.length || b5) throw new Error("Contexts/pre-hash are not supported");
    return y6;
  });
  function g6(y6, f4) {
    ft2("coordinate " + y6, f4, G2, D4);
  }
  function S5(y6) {
    if (!(y6 instanceof d3)) throw new Error("ExtendedPoint expected");
  }
  const v4 = xe2((y6, f4) => {
    const { ex: b5, ey: E6, ez: B2 } = y6, C4 = y6.is0();
    f4 == null && (f4 = C4 ? wr : n4.inv(B2));
    const A3 = c5(b5 * f4), U6 = c5(E6 * f4), _5 = c5(B2 * f4);
    if (C4) return { x: G2, y: j3 };
    if (_5 !== j3) throw new Error("invZ was invalid");
    return { x: A3, y: U6 };
  }), L5 = xe2((y6) => {
    const { a: f4, d: b5 } = e2;
    if (y6.is0()) throw new Error("bad point: ZERO");
    const { ex: E6, ey: B2, ez: C4, et: A3 } = y6, U6 = c5(E6 * E6), _5 = c5(B2 * B2), T3 = c5(C4 * C4), $5 = c5(T3 * T3), R2 = c5(U6 * f4), V3 = c5(T3 * c5(R2 + _5)), Y3 = c5($5 + c5(b5 * c5(U6 * _5)));
    if (V3 !== Y3) throw new Error("bad point: equation left != right (1)");
    const Z4 = c5(E6 * B2), X3 = c5(C4 * A3);
    if (Z4 !== X3) throw new Error("bad point: equation left != right (2)");
    return true;
  });
  class d3 {
    constructor(f4, b5, E6, B2) {
      this.ex = f4, this.ey = b5, this.ez = E6, this.et = B2, g6("x", f4), g6("y", b5), g6("z", E6), g6("t", B2), Object.freeze(this);
    }
    get x() {
      return this.toAffine().x;
    }
    get y() {
      return this.toAffine().y;
    }
    static fromAffine(f4) {
      if (f4 instanceof d3) throw new Error("extended point not allowed");
      const { x: b5, y: E6 } = f4 || {};
      return g6("x", b5), g6("y", E6), new d3(b5, E6, j3, c5(b5 * E6));
    }
    static normalizeZ(f4) {
      const b5 = n4.invertBatch(f4.map((E6) => E6.ez));
      return f4.map((E6, B2) => E6.toAffine(b5[B2])).map(d3.fromAffine);
    }
    static msm(f4, b5) {
      return br(d3, l4, f4, b5);
    }
    _setWindowSize(f4) {
      q3.setWindowSize(this, f4);
    }
    assertValidity() {
      L5(this);
    }
    equals(f4) {
      S5(f4);
      const { ex: b5, ey: E6, ez: B2 } = this, { ex: C4, ey: A3, ez: U6 } = f4, _5 = c5(b5 * U6), T3 = c5(C4 * B2), $5 = c5(E6 * U6), R2 = c5(A3 * B2);
      return _5 === T3 && $5 === R2;
    }
    is0() {
      return this.equals(d3.ZERO);
    }
    negate() {
      return new d3(c5(-this.ex), this.ey, this.ez, c5(-this.et));
    }
    double() {
      const { a: f4 } = e2, { ex: b5, ey: E6, ez: B2 } = this, C4 = c5(b5 * b5), A3 = c5(E6 * E6), U6 = c5(yt2 * c5(B2 * B2)), _5 = c5(f4 * C4), T3 = b5 + E6, $5 = c5(c5(T3 * T3) - C4 - A3), R2 = _5 + A3, V3 = R2 - U6, Y3 = _5 - A3, Z4 = c5($5 * V3), X3 = c5(R2 * Y3), et3 = c5($5 * Y3), pt3 = c5(V3 * R2);
      return new d3(Z4, X3, pt3, et3);
    }
    add(f4) {
      S5(f4);
      const { a: b5, d: E6 } = e2, { ex: B2, ey: C4, ez: A3, et: U6 } = this, { ex: _5, ey: T3, ez: $5, et: R2 } = f4;
      if (b5 === BigInt(-1)) {
        const re2 = c5((C4 - B2) * (T3 + _5)), oe4 = c5((C4 + B2) * (T3 - _5)), mt3 = c5(oe4 - re2);
        if (mt3 === G2) return this.double();
        const se3 = c5(A3 * yt2 * R2), ie3 = c5(U6 * yt2 * $5), ue3 = ie3 + se3, ce4 = oe4 + re2, ae4 = ie3 - se3, Dn2 = c5(ue3 * mt3), dn = c5(ce4 * ae4), hn2 = c5(ue3 * ae4), ln = c5(mt3 * ce4);
        return new d3(Dn2, dn, ln, hn2);
      }
      const V3 = c5(B2 * _5), Y3 = c5(C4 * T3), Z4 = c5(U6 * E6 * R2), X3 = c5(A3 * $5), et3 = c5((B2 + C4) * (_5 + T3) - V3 - Y3), pt3 = X3 - Z4, ee3 = X3 + Z4, ne4 = c5(Y3 - b5 * V3), un2 = c5(et3 * pt3), cn2 = c5(ee3 * ne4), an2 = c5(et3 * ne4), fn = c5(pt3 * ee3);
      return new d3(un2, cn2, fn, an2);
    }
    subtract(f4) {
      return this.add(f4.negate());
    }
    wNAF(f4) {
      return q3.wNAFCached(this, f4, d3.normalizeZ);
    }
    multiply(f4) {
      const b5 = f4;
      ft2("scalar", b5, j3, r2);
      const { p: E6, f: B2 } = this.wNAF(b5);
      return d3.normalizeZ([E6, B2])[0];
    }
    multiplyUnsafe(f4, b5 = d3.ZERO) {
      const E6 = f4;
      return ft2("scalar", E6, G2, r2), E6 === G2 ? F : this.is0() || E6 === j3 ? this : q3.wNAFCachedUnsafe(this, E6, d3.normalizeZ, b5);
    }
    isSmallOrder() {
      return this.multiplyUnsafe(i3).is0();
    }
    isTorsionFree() {
      return q3.unsafeLadder(this, r2).is0();
    }
    toAffine(f4) {
      return v4(this, f4);
    }
    clearCofactor() {
      const { h: f4 } = e2;
      return f4 === j3 ? this : this.multiplyUnsafe(f4);
    }
    static fromHex(f4, b5 = false) {
      const { d: E6, a: B2 } = e2, C4 = n4.BYTES;
      f4 = W("pointHex", f4, C4), Tt2("zip215", b5);
      const A3 = f4.slice(), U6 = f4[C4 - 1];
      A3[C4 - 1] = U6 & -129;
      const _5 = Et(A3), T3 = b5 ? D4 : n4.ORDER;
      ft2("pointHex.y", _5, G2, T3);
      const $5 = c5(_5 * _5), R2 = c5($5 - j3), V3 = c5(E6 * $5 - B2);
      let { isValid: Y3, value: Z4 } = p7(R2, V3);
      if (!Y3) throw new Error("Point.fromHex: invalid y coordinate");
      const X3 = (Z4 & j3) === j3, et3 = (U6 & 128) !== 0;
      if (!b5 && Z4 === G2 && et3) throw new Error("Point.fromHex: x=0 and x_0=1");
      return et3 !== X3 && (Z4 = c5(-Z4)), d3.fromAffine({ x: Z4, y: _5 });
    }
    static fromPrivateKey(f4) {
      return O7(f4).point;
    }
    toRawBytes() {
      const { x: f4, y: b5 } = this.toAffine(), E6 = Nt(b5, n4.BYTES);
      return E6[E6.length - 1] |= f4 & j3 ? 128 : 0, E6;
    }
    toHex() {
      return Ft2(this.toRawBytes());
    }
  }
  d3.BASE = new d3(e2.Gx, e2.Gy, j3, c5(e2.Gx * e2.Gy)), d3.ZERO = new d3(G2, j3, j3, G2);
  const { BASE: m4, ZERO: F } = d3, q3 = lr(d3, u3 * 8);
  function z4(y6) {
    return H2(y6, r2);
  }
  function I2(y6) {
    return z4(Et(y6));
  }
  function O7(y6) {
    const f4 = n4.BYTES;
    y6 = W("private key", y6, f4);
    const b5 = W("hashed private key", s2(y6), 2 * f4), E6 = w5(b5.slice(0, f4)), B2 = b5.slice(f4, 2 * f4), C4 = I2(E6), A3 = m4.multiply(C4), U6 = A3.toRawBytes();
    return { head: E6, prefix: B2, scalar: C4, point: A3, pointBytes: U6 };
  }
  function ot4(y6) {
    return O7(y6).pointBytes;
  }
  function tt3(y6 = new Uint8Array(), ...f4) {
    const b5 = ye(...f4);
    return I2(s2(h4(b5, W("context", y6), !!o3)));
  }
  function st3(y6, f4, b5 = {}) {
    y6 = W("message", y6), o3 && (y6 = o3(y6));
    const { prefix: E6, scalar: B2, pointBytes: C4 } = O7(f4), A3 = tt3(b5.context, E6, y6), U6 = m4.multiply(A3).toRawBytes(), _5 = tt3(b5.context, U6, C4, y6), T3 = z4(A3 + _5 * B2);
    ft2("signature.s", T3, G2, r2);
    const $5 = ye(U6, Nt(T3, n4.BYTES));
    return W("result", $5, n4.BYTES * 2);
  }
  const at3 = Er;
  function Ct3(y6, f4, b5, E6 = at3) {
    const { context: B2, zip215: C4 } = E6, A3 = n4.BYTES;
    y6 = W("signature", y6, 2 * A3), f4 = W("message", f4), b5 = W("publicKey", b5, A3), C4 !== void 0 && Tt2("zip215", C4), o3 && (f4 = o3(f4));
    const U6 = Et(y6.slice(A3, 2 * A3));
    let _5, T3, $5;
    try {
      _5 = d3.fromHex(b5, C4), T3 = d3.fromHex(y6.slice(0, A3), C4), $5 = m4.multiplyUnsafe(U6);
    } catch {
      return false;
    }
    if (!C4 && _5.isSmallOrder()) return false;
    const R2 = tt3(B2, T3.toRawBytes(), _5.toRawBytes(), f4);
    return T3.add(_5.multiplyUnsafe(R2)).subtract($5).clearCofactor().equals(d3.ZERO);
  }
  return m4._setWindowSize(8), { CURVE: e2, getPublicKey: ot4, sign: st3, verify: Ct3, ExtendedPoint: d3, utils: { getExtendedPublicKey: O7, randomPrivateKey: () => a2(n4.BYTES), precompute(y6 = 8, f4 = d3.BASE) {
    return f4._setWindowSize(y6), f4.multiply(BigInt(3)), f4;
  } } };
}
BigInt(0), BigInt(1);
var kt2 = BigInt("57896044618658097711785492504343953926634992332820282019728792003956564819949");
var Ue = BigInt("19681161376707505956807079304988542015446066515923890162744021073123829784752");
BigInt(0);
var xr = BigInt(1);
var Te2 = BigInt(2);
BigInt(3);
var Br = BigInt(5);
var Cr = BigInt(8);
function Ar(t) {
  const e2 = BigInt(10), n4 = BigInt(20), r2 = BigInt(40), o3 = BigInt(80), s2 = kt2, u3 = t * t % s2 * t % s2, i3 = J2(u3, Te2, s2) * u3 % s2, D4 = J2(i3, xr, s2) * t % s2, c5 = J2(D4, Br, s2) * D4 % s2, l4 = J2(c5, e2, s2) * c5 % s2, p7 = J2(l4, n4, s2) * l4 % s2, w5 = J2(p7, r2, s2) * p7 % s2, h4 = J2(w5, o3, s2) * w5 % s2, g6 = J2(h4, o3, s2) * w5 % s2, S5 = J2(g6, e2, s2) * c5 % s2;
  return { pow_p_5_8: J2(S5, Te2, s2) * t % s2, b2: u3 };
}
function mr(t) {
  return t[0] &= 248, t[31] &= 127, t[31] |= 64, t;
}
function _r(t, e2) {
  const n4 = kt2, r2 = H2(e2 * e2 * e2, n4), o3 = H2(r2 * r2 * e2, n4), s2 = Ar(t * o3).pow_p_5_8;
  let a2 = H2(t * r2 * s2, n4);
  const u3 = H2(e2 * a2 * a2, n4), i3 = a2, D4 = H2(a2 * Ue, n4), c5 = u3 === t, l4 = u3 === H2(-t, n4), p7 = u3 === H2(-t * Ue, n4);
  return c5 && (a2 = i3), (l4 || p7) && (a2 = D4), ur(a2, n4) && (a2 = H2(-a2, n4)), { isValid: c5 || l4, value: a2 };
}
var Sr = (() => _e2(kt2, void 0, true))();
var vr = (() => ({ a: BigInt(-1), d: BigInt("37095705934669439343138083508754565189542113879843219016388785533085940283555"), Fp: Sr, n: BigInt("7237005577332262213973186563042994240857116359379907606001950938285454250989"), h: Cr, Gx: BigInt("15112221349535400772501151409588531511454012693041857206046113283949847762202"), Gy: BigInt("46316835694926478169428394003475163141307993866256225615783033603165251855960"), hash: Kn2, randomBytes: he, adjustScalarBytes: mr, uvRatio: _r }))();
var Rt2 = (() => yr(vr))();
var jt2 = "EdDSA";
var Zt = "JWT";
var ut2 = ".";
var Dt2 = "base64url";
var Gt2 = "utf8";
var xt2 = "utf8";
var Vt2 = ":";
var Yt = "did";
var Jt = "key";
var dt2 = "base58btc";
var Kt2 = "z";
var Wt = "K36";
var Ne = 32;
function Xt(t) {
  return globalThis.Buffer != null ? new Uint8Array(t.buffer, t.byteOffset, t.byteLength) : t;
}
function Le(t = 0) {
  return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? Xt(globalThis.Buffer.allocUnsafe(t)) : new Uint8Array(t);
}
function Oe2(t, e2) {
  e2 || (e2 = t.reduce((o3, s2) => o3 + s2.length, 0));
  const n4 = Le(e2);
  let r2 = 0;
  for (const o3 of t) n4.set(o3, r2), r2 += o3.length;
  return Xt(n4);
}
function Ir(t, e2) {
  if (t.length >= 255) throw new TypeError("Alphabet too long");
  for (var n4 = new Uint8Array(256), r2 = 0; r2 < n4.length; r2++) n4[r2] = 255;
  for (var o3 = 0; o3 < t.length; o3++) {
    var s2 = t.charAt(o3), a2 = s2.charCodeAt(0);
    if (n4[a2] !== 255) throw new TypeError(s2 + " is ambiguous");
    n4[a2] = o3;
  }
  var u3 = t.length, i3 = t.charAt(0), D4 = Math.log(u3) / Math.log(256), c5 = Math.log(256) / Math.log(u3);
  function l4(h4) {
    if (h4 instanceof Uint8Array || (ArrayBuffer.isView(h4) ? h4 = new Uint8Array(h4.buffer, h4.byteOffset, h4.byteLength) : Array.isArray(h4) && (h4 = Uint8Array.from(h4))), !(h4 instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
    if (h4.length === 0) return "";
    for (var g6 = 0, S5 = 0, v4 = 0, L5 = h4.length; v4 !== L5 && h4[v4] === 0; ) v4++, g6++;
    for (var d3 = (L5 - v4) * c5 + 1 >>> 0, m4 = new Uint8Array(d3); v4 !== L5; ) {
      for (var F = h4[v4], q3 = 0, z4 = d3 - 1; (F !== 0 || q3 < S5) && z4 !== -1; z4--, q3++) F += 256 * m4[z4] >>> 0, m4[z4] = F % u3 >>> 0, F = F / u3 >>> 0;
      if (F !== 0) throw new Error("Non-zero carry");
      S5 = q3, v4++;
    }
    for (var I2 = d3 - S5; I2 !== d3 && m4[I2] === 0; ) I2++;
    for (var O7 = i3.repeat(g6); I2 < d3; ++I2) O7 += t.charAt(m4[I2]);
    return O7;
  }
  function p7(h4) {
    if (typeof h4 != "string") throw new TypeError("Expected String");
    if (h4.length === 0) return new Uint8Array();
    var g6 = 0;
    if (h4[g6] !== " ") {
      for (var S5 = 0, v4 = 0; h4[g6] === i3; ) S5++, g6++;
      for (var L5 = (h4.length - g6) * D4 + 1 >>> 0, d3 = new Uint8Array(L5); h4[g6]; ) {
        var m4 = n4[h4.charCodeAt(g6)];
        if (m4 === 255) return;
        for (var F = 0, q3 = L5 - 1; (m4 !== 0 || F < v4) && q3 !== -1; q3--, F++) m4 += u3 * d3[q3] >>> 0, d3[q3] = m4 % 256 >>> 0, m4 = m4 / 256 >>> 0;
        if (m4 !== 0) throw new Error("Non-zero carry");
        v4 = F, g6++;
      }
      if (h4[g6] !== " ") {
        for (var z4 = L5 - v4; z4 !== L5 && d3[z4] === 0; ) z4++;
        for (var I2 = new Uint8Array(S5 + (L5 - z4)), O7 = S5; z4 !== L5; ) I2[O7++] = d3[z4++];
        return I2;
      }
    }
  }
  function w5(h4) {
    var g6 = p7(h4);
    if (g6) return g6;
    throw new Error(`Non-${e2} character`);
  }
  return { encode: l4, decodeUnsafe: p7, decode: w5 };
}
var Ur = Ir;
var Tr = Ur;
var He2 = (t) => {
  if (t instanceof Uint8Array && t.constructor.name === "Uint8Array") return t;
  if (t instanceof ArrayBuffer) return new Uint8Array(t);
  if (ArrayBuffer.isView(t)) return new Uint8Array(t.buffer, t.byteOffset, t.byteLength);
  throw new Error("Unknown type, must be binary type");
};
var Fr = (t) => new TextEncoder().encode(t);
var Nr = (t) => new TextDecoder().decode(t);
var Lr = class {
  constructor(e2, n4, r2) {
    this.name = e2, this.prefix = n4, this.baseEncode = r2;
  }
  encode(e2) {
    if (e2 instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e2)}`;
    throw Error("Unknown type, must be binary type");
  }
};
var Or = class {
  constructor(e2, n4, r2) {
    if (this.name = e2, this.prefix = n4, n4.codePointAt(0) === void 0) throw new Error("Invalid prefix character");
    this.prefixCodePoint = n4.codePointAt(0), this.baseDecode = r2;
  }
  decode(e2) {
    if (typeof e2 == "string") {
      if (e2.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e2)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e2.slice(this.prefix.length));
    } else throw Error("Can only multibase decode strings");
  }
  or(e2) {
    return ze(this, e2);
  }
};
var Hr = class {
  constructor(e2) {
    this.decoders = e2;
  }
  or(e2) {
    return ze(this, e2);
  }
  decode(e2) {
    const n4 = e2[0], r2 = this.decoders[n4];
    if (r2) return r2.decode(e2);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e2)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
};
var ze = (t, e2) => new Hr({ ...t.decoders || { [t.prefix]: t }, ...e2.decoders || { [e2.prefix]: e2 } });
var zr = class {
  constructor(e2, n4, r2, o3) {
    this.name = e2, this.prefix = n4, this.baseEncode = r2, this.baseDecode = o3, this.encoder = new Lr(e2, n4, r2), this.decoder = new Or(e2, n4, o3);
  }
  encode(e2) {
    return this.encoder.encode(e2);
  }
  decode(e2) {
    return this.decoder.decode(e2);
  }
};
var Bt = ({ name: t, prefix: e2, encode: n4, decode: r2 }) => new zr(t, e2, n4, r2);
var ht = ({ prefix: t, name: e2, alphabet: n4 }) => {
  const { encode: r2, decode: o3 } = Tr(n4, e2);
  return Bt({ prefix: t, name: e2, encode: r2, decode: (s2) => He2(o3(s2)) });
};
var Mr = (t, e2, n4, r2) => {
  const o3 = {};
  for (let c5 = 0; c5 < e2.length; ++c5) o3[e2[c5]] = c5;
  let s2 = t.length;
  for (; t[s2 - 1] === "="; ) --s2;
  const a2 = new Uint8Array(s2 * n4 / 8 | 0);
  let u3 = 0, i3 = 0, D4 = 0;
  for (let c5 = 0; c5 < s2; ++c5) {
    const l4 = o3[t[c5]];
    if (l4 === void 0) throw new SyntaxError(`Non-${r2} character`);
    i3 = i3 << n4 | l4, u3 += n4, u3 >= 8 && (u3 -= 8, a2[D4++] = 255 & i3 >> u3);
  }
  if (u3 >= n4 || 255 & i3 << 8 - u3) throw new SyntaxError("Unexpected end of data");
  return a2;
};
var qr = (t, e2, n4) => {
  const r2 = e2[e2.length - 1] === "=", o3 = (1 << n4) - 1;
  let s2 = "", a2 = 0, u3 = 0;
  for (let i3 = 0; i3 < t.length; ++i3) for (u3 = u3 << 8 | t[i3], a2 += 8; a2 > n4; ) a2 -= n4, s2 += e2[o3 & u3 >> a2];
  if (a2 && (s2 += e2[o3 & u3 << n4 - a2]), r2) for (; s2.length * n4 & 7; ) s2 += "=";
  return s2;
};
var k3 = ({ name: t, prefix: e2, bitsPerChar: n4, alphabet: r2 }) => Bt({ prefix: e2, name: t, encode(o3) {
  return qr(o3, r2, n4);
}, decode(o3) {
  return Mr(o3, r2, n4, t);
} });
var $r = Bt({ prefix: "\0", name: "identity", encode: (t) => Nr(t), decode: (t) => Fr(t) });
var kr = Object.freeze({ __proto__: null, identity: $r });
var Rr = k3({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 });
var jr = Object.freeze({ __proto__: null, base2: Rr });
var Zr = k3({ prefix: "7", name: "base8", alphabet: "01234567", bitsPerChar: 3 });
var Gr = Object.freeze({ __proto__: null, base8: Zr });
var Vr = ht({ prefix: "9", name: "base10", alphabet: "0123456789" });
var Yr = Object.freeze({ __proto__: null, base10: Vr });
var Jr = k3({ prefix: "f", name: "base16", alphabet: "0123456789abcdef", bitsPerChar: 4 });
var Kr = k3({ prefix: "F", name: "base16upper", alphabet: "0123456789ABCDEF", bitsPerChar: 4 });
var Wr = Object.freeze({ __proto__: null, base16: Jr, base16upper: Kr });
var Xr = k3({ prefix: "b", name: "base32", alphabet: "abcdefghijklmnopqrstuvwxyz234567", bitsPerChar: 5 });
var Pr = k3({ prefix: "B", name: "base32upper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", bitsPerChar: 5 });
var Qr = k3({ prefix: "c", name: "base32pad", alphabet: "abcdefghijklmnopqrstuvwxyz234567=", bitsPerChar: 5 });
var to = k3({ prefix: "C", name: "base32padupper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=", bitsPerChar: 5 });
var eo = k3({ prefix: "v", name: "base32hex", alphabet: "0123456789abcdefghijklmnopqrstuv", bitsPerChar: 5 });
var no = k3({ prefix: "V", name: "base32hexupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", bitsPerChar: 5 });
var ro = k3({ prefix: "t", name: "base32hexpad", alphabet: "0123456789abcdefghijklmnopqrstuv=", bitsPerChar: 5 });
var oo = k3({ prefix: "T", name: "base32hexpadupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=", bitsPerChar: 5 });
var so = k3({ prefix: "h", name: "base32z", alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769", bitsPerChar: 5 });
var io = Object.freeze({ __proto__: null, base32: Xr, base32upper: Pr, base32pad: Qr, base32padupper: to, base32hex: eo, base32hexupper: no, base32hexpad: ro, base32hexpadupper: oo, base32z: so });
var uo = ht({ prefix: "k", name: "base36", alphabet: "0123456789abcdefghijklmnopqrstuvwxyz" });
var co = ht({ prefix: "K", name: "base36upper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" });
var ao = Object.freeze({ __proto__: null, base36: uo, base36upper: co });
var fo = ht({ name: "base58btc", prefix: "z", alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz" });
var Do = ht({ name: "base58flickr", prefix: "Z", alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ" });
var ho = Object.freeze({ __proto__: null, base58btc: fo, base58flickr: Do });
var lo = k3({ prefix: "m", name: "base64", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", bitsPerChar: 6 });
var bo = k3({ prefix: "M", name: "base64pad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", bitsPerChar: 6 });
var po = k3({ prefix: "u", name: "base64url", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", bitsPerChar: 6 });
var wo = k3({ prefix: "U", name: "base64urlpad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=", bitsPerChar: 6 });
var Eo = Object.freeze({ __proto__: null, base64: lo, base64pad: bo, base64url: po, base64urlpad: wo });
var Me = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var go = Me.reduce((t, e2, n4) => (t[n4] = e2, t), []);
var yo = Me.reduce((t, e2, n4) => (t[e2.codePointAt(0)] = n4, t), []);
function xo(t) {
  return t.reduce((e2, n4) => (e2 += go[n4], e2), "");
}
function Bo(t) {
  const e2 = [];
  for (const n4 of t) {
    const r2 = yo[n4.codePointAt(0)];
    if (r2 === void 0) throw new Error(`Non-base256emoji character: ${n4}`);
    e2.push(r2);
  }
  return new Uint8Array(e2);
}
var Co = Bt({ prefix: "🚀", name: "base256emoji", encode: xo, decode: Bo });
var Ao = Object.freeze({ __proto__: null, base256emoji: Co });
var mo = $e2;
var qe2 = 128;
var _o = 127;
var So = ~_o;
var vo = Math.pow(2, 31);
function $e2(t, e2, n4) {
  e2 = e2 || [], n4 = n4 || 0;
  for (var r2 = n4; t >= vo; ) e2[n4++] = t & 255 | qe2, t /= 128;
  for (; t & So; ) e2[n4++] = t & 255 | qe2, t >>>= 7;
  return e2[n4] = t | 0, $e2.bytes = n4 - r2 + 1, e2;
}
var Io = Pt2;
var Uo = 128;
var ke2 = 127;
function Pt2(t, r2) {
  var n4 = 0, r2 = r2 || 0, o3 = 0, s2 = r2, a2, u3 = t.length;
  do {
    if (s2 >= u3) throw Pt2.bytes = 0, new RangeError("Could not decode varint");
    a2 = t[s2++], n4 += o3 < 28 ? (a2 & ke2) << o3 : (a2 & ke2) * Math.pow(2, o3), o3 += 7;
  } while (a2 >= Uo);
  return Pt2.bytes = s2 - r2, n4;
}
var To = Math.pow(2, 7);
var Fo = Math.pow(2, 14);
var No = Math.pow(2, 21);
var Lo = Math.pow(2, 28);
var Oo = Math.pow(2, 35);
var Ho = Math.pow(2, 42);
var zo = Math.pow(2, 49);
var Mo = Math.pow(2, 56);
var qo = Math.pow(2, 63);
var $o = function(t) {
  return t < To ? 1 : t < Fo ? 2 : t < No ? 3 : t < Lo ? 4 : t < Oo ? 5 : t < Ho ? 6 : t < zo ? 7 : t < Mo ? 8 : t < qo ? 9 : 10;
};
var ko = { encode: mo, decode: Io, encodingLength: $o };
var Re2 = ko;
var je2 = (t, e2, n4 = 0) => (Re2.encode(t, e2, n4), e2);
var Ze2 = (t) => Re2.encodingLength(t);
var Qt = (t, e2) => {
  const n4 = e2.byteLength, r2 = Ze2(t), o3 = r2 + Ze2(n4), s2 = new Uint8Array(o3 + n4);
  return je2(t, s2, 0), je2(n4, s2, r2), s2.set(e2, o3), new Ro(t, n4, e2, s2);
};
var Ro = class {
  constructor(e2, n4, r2, o3) {
    this.code = e2, this.size = n4, this.digest = r2, this.bytes = o3;
  }
};
var Ge2 = ({ name: t, code: e2, encode: n4 }) => new jo(t, e2, n4);
var jo = class {
  constructor(e2, n4, r2) {
    this.name = e2, this.code = n4, this.encode = r2;
  }
  digest(e2) {
    if (e2 instanceof Uint8Array) {
      const n4 = this.encode(e2);
      return n4 instanceof Uint8Array ? Qt(this.code, n4) : n4.then((r2) => Qt(this.code, r2));
    } else throw Error("Unknown type, must be binary type");
  }
};
var Ve2 = (t) => async (e2) => new Uint8Array(await crypto.subtle.digest(t, e2));
var Zo = Ge2({ name: "sha2-256", code: 18, encode: Ve2("SHA-256") });
var Go = Ge2({ name: "sha2-512", code: 19, encode: Ve2("SHA-512") });
var Vo = Object.freeze({ __proto__: null, sha256: Zo, sha512: Go });
var Ye2 = 0;
var Yo = "identity";
var Je2 = He2;
var Jo = (t) => Qt(Ye2, Je2(t));
var Ko = { code: Ye2, name: Yo, encode: Je2, digest: Jo };
var Wo = Object.freeze({ __proto__: null, identity: Ko });
new TextEncoder(), new TextDecoder();
var Ke = { ...kr, ...jr, ...Gr, ...Yr, ...Wr, ...io, ...ao, ...ho, ...Eo, ...Ao };
({ ...Vo, ...Wo });
function We2(t, e2, n4, r2) {
  return { name: t, prefix: e2, encoder: { name: t, prefix: e2, encode: n4 }, decoder: { decode: r2 } };
}
var Xe2 = We2("utf8", "u", (t) => "u" + new TextDecoder("utf8").decode(t), (t) => new TextEncoder().encode(t.substring(1)));
var te2 = We2("ascii", "a", (t) => {
  let e2 = "a";
  for (let n4 = 0; n4 < t.length; n4++) e2 += String.fromCharCode(t[n4]);
  return e2;
}, (t) => {
  t = t.substring(1);
  const e2 = Le(t.length);
  for (let n4 = 0; n4 < t.length; n4++) e2[n4] = t.charCodeAt(n4);
  return e2;
});
var Pe2 = { utf8: Xe2, "utf-8": Xe2, hex: Ke.base16, latin1: te2, ascii: te2, binary: te2, ...Ke };
function ct2(t, e2 = "utf8") {
  const n4 = Pe2[e2];
  if (!n4) throw new Error(`Unsupported encoding "${e2}"`);
  return (e2 === "utf8" || e2 === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? globalThis.Buffer.from(t.buffer, t.byteOffset, t.byteLength).toString("utf8") : n4.encoder.encode(t).substring(1);
}
function rt2(t, e2 = "utf8") {
  const n4 = Pe2[e2];
  if (!n4) throw new Error(`Unsupported encoding "${e2}"`);
  return (e2 === "utf8" || e2 === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? Xt(globalThis.Buffer.from(t, "utf-8")) : n4.decoder.decode(`${n4.prefix}${t}`);
}
function bt(t) {
  return ct2(rt2(safeJsonStringify(t), Gt2), Dt2);
}
function Qe2(t) {
  const e2 = rt2(Wt, dt2), n4 = Kt2 + ct2(Oe2([e2, t]), dt2);
  return [Yt, Jt, n4].join(Vt2);
}
function en2(t) {
  return ct2(t, Dt2);
}
function rn2(t) {
  return rt2([bt(t.header), bt(t.payload)].join(ut2), xt2);
}
function on2(t) {
  return [bt(t.header), bt(t.payload), en2(t.signature)].join(ut2);
}
function Po(t = he(Ne)) {
  const e2 = Rt2.getPublicKey(t);
  return { secretKey: Oe2([t, e2]), publicKey: e2 };
}
async function Qo(t, e2, n4, r2, o3 = (0, import_time2.fromMiliseconds)(Date.now())) {
  const s2 = { alg: jt2, typ: Zt }, a2 = Qe2(r2.publicKey), u3 = o3 + n4, i3 = { iss: a2, sub: t, aud: e2, iat: o3, exp: u3 }, D4 = rn2({ header: s2, payload: i3 }), c5 = Rt2.sign(D4, r2.secretKey.slice(0, 32));
  return on2({ header: s2, payload: i3, signature: c5 });
}

// node_modules/@walletconnect/core/dist/index.es.js
var import_time3 = __toESM(require_cjs());

// node_modules/@walletconnect/core/node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js
var import_events3 = __toESM(require_events());

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js
var esm_exports2 = {};
__export(esm_exports2, {
  DEFAULT_ERROR: () => DEFAULT_ERROR,
  IBaseJsonRpcProvider: () => n3,
  IEvents: () => e,
  IJsonRpcConnection: () => o,
  IJsonRpcProvider: () => r,
  INTERNAL_ERROR: () => INTERNAL_ERROR,
  INVALID_PARAMS: () => INVALID_PARAMS,
  INVALID_REQUEST: () => INVALID_REQUEST,
  METHOD_NOT_FOUND: () => METHOD_NOT_FOUND,
  PARSE_ERROR: () => PARSE_ERROR,
  RESERVED_ERROR_CODES: () => RESERVED_ERROR_CODES,
  SERVER_ERROR: () => SERVER_ERROR,
  SERVER_ERROR_CODE_RANGE: () => SERVER_ERROR_CODE_RANGE,
  STANDARD_ERROR_MAP: () => STANDARD_ERROR_MAP,
  formatErrorMessage: () => formatErrorMessage,
  formatJsonRpcError: () => formatJsonRpcError,
  formatJsonRpcRequest: () => formatJsonRpcRequest,
  formatJsonRpcResult: () => formatJsonRpcResult,
  getBigIntRpcId: () => getBigIntRpcId,
  getError: () => getError,
  getErrorByCode: () => getErrorByCode,
  isHttpUrl: () => isHttpUrl,
  isJsonRpcError: () => isJsonRpcError,
  isJsonRpcPayload: () => isJsonRpcPayload,
  isJsonRpcRequest: () => isJsonRpcRequest,
  isJsonRpcResponse: () => isJsonRpcResponse,
  isJsonRpcResult: () => isJsonRpcResult,
  isJsonRpcValidationInvalid: () => isJsonRpcValidationInvalid,
  isLocalhostUrl: () => isLocalhostUrl,
  isNodeJs: () => isNodeJs,
  isReservedErrorCode: () => isReservedErrorCode,
  isServerErrorCode: () => isServerErrorCode,
  isValidDefaultRoute: () => isValidDefaultRoute,
  isValidErrorCode: () => isValidErrorCode,
  isValidLeadingWildcardRoute: () => isValidLeadingWildcardRoute,
  isValidRoute: () => isValidRoute,
  isValidTrailingWildcardRoute: () => isValidTrailingWildcardRoute,
  isValidWildcardRoute: () => isValidWildcardRoute,
  isWsUrl: () => isWsUrl,
  parseConnectionError: () => parseConnectionError,
  payloadId: () => payloadId,
  validateJsonRpcError: () => validateJsonRpcError
});

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/constants.js
var PARSE_ERROR = "PARSE_ERROR";
var INVALID_REQUEST = "INVALID_REQUEST";
var METHOD_NOT_FOUND = "METHOD_NOT_FOUND";
var INVALID_PARAMS = "INVALID_PARAMS";
var INTERNAL_ERROR = "INTERNAL_ERROR";
var SERVER_ERROR = "SERVER_ERROR";
var RESERVED_ERROR_CODES = [-32700, -32600, -32601, -32602, -32603];
var SERVER_ERROR_CODE_RANGE = [-32e3, -32099];
var STANDARD_ERROR_MAP = {
  [PARSE_ERROR]: { code: -32700, message: "Parse error" },
  [INVALID_REQUEST]: { code: -32600, message: "Invalid Request" },
  [METHOD_NOT_FOUND]: { code: -32601, message: "Method not found" },
  [INVALID_PARAMS]: { code: -32602, message: "Invalid params" },
  [INTERNAL_ERROR]: { code: -32603, message: "Internal error" },
  [SERVER_ERROR]: { code: -32e3, message: "Server error" }
};
var DEFAULT_ERROR = SERVER_ERROR;

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/error.js
function isServerErrorCode(code2) {
  return code2 <= SERVER_ERROR_CODE_RANGE[0] && code2 >= SERVER_ERROR_CODE_RANGE[1];
}
function isReservedErrorCode(code2) {
  return RESERVED_ERROR_CODES.includes(code2);
}
function isValidErrorCode(code2) {
  return typeof code2 === "number";
}
function getError(type) {
  if (!Object.keys(STANDARD_ERROR_MAP).includes(type)) {
    return STANDARD_ERROR_MAP[DEFAULT_ERROR];
  }
  return STANDARD_ERROR_MAP[type];
}
function getErrorByCode(code2) {
  const match = Object.values(STANDARD_ERROR_MAP).find((e2) => e2.code === code2);
  if (!match) {
    return STANDARD_ERROR_MAP[DEFAULT_ERROR];
  }
  return match;
}
function validateJsonRpcError(response) {
  if (typeof response.error.code === "undefined") {
    return { valid: false, error: "Missing code for JSON-RPC error" };
  }
  if (typeof response.error.message === "undefined") {
    return { valid: false, error: "Missing message for JSON-RPC error" };
  }
  if (!isValidErrorCode(response.error.code)) {
    return {
      valid: false,
      error: `Invalid error code type for JSON-RPC: ${response.error.code}`
    };
  }
  if (isReservedErrorCode(response.error.code)) {
    const error = getErrorByCode(response.error.code);
    if (error.message !== STANDARD_ERROR_MAP[DEFAULT_ERROR].message && response.error.message === error.message) {
      return {
        valid: false,
        error: `Invalid error code message for JSON-RPC: ${response.error.code}`
      };
    }
  }
  return { valid: true };
}
function parseConnectionError(e2, url, type) {
  return e2.message.includes("getaddrinfo ENOTFOUND") || e2.message.includes("connect ECONNREFUSED") ? new Error(`Unavailable ${type} RPC url at ${url}`) : e2;
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/env.js
var env_exports = {};
__export(env_exports, {
  isNodeJs: () => isNodeJs
});
var import_environment = __toESM(require_cjs5());
__reExport(env_exports, __toESM(require_cjs5()));
var isNodeJs = import_environment.isNode;

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/index.js
__reExport(esm_exports2, env_exports);

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/format.js
function payloadId(entropy = 3) {
  const date = Date.now() * Math.pow(10, entropy);
  const extra = Math.floor(Math.random() * Math.pow(10, entropy));
  return date + extra;
}
function getBigIntRpcId(entropy = 6) {
  return BigInt(payloadId(entropy));
}
function formatJsonRpcRequest(method, params, id) {
  return {
    id: id || payloadId(),
    jsonrpc: "2.0",
    method,
    params
  };
}
function formatJsonRpcResult(id, result) {
  return {
    id,
    jsonrpc: "2.0",
    result
  };
}
function formatJsonRpcError(id, error, data) {
  return {
    id,
    jsonrpc: "2.0",
    error: formatErrorMessage(error, data)
  };
}
function formatErrorMessage(error, data) {
  if (typeof error === "undefined") {
    return getError(INTERNAL_ERROR);
  }
  if (typeof error === "string") {
    error = Object.assign(Object.assign({}, getError(SERVER_ERROR)), { message: error });
  }
  if (typeof data !== "undefined") {
    error.data = data;
  }
  if (isReservedErrorCode(error.code)) {
    error = getErrorByCode(error.code);
  }
  return error;
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/routing.js
function isValidRoute(route) {
  if (route.includes("*")) {
    return isValidWildcardRoute(route);
  }
  if (/\W/g.test(route)) {
    return false;
  }
  return true;
}
function isValidDefaultRoute(route) {
  return route === "*";
}
function isValidWildcardRoute(route) {
  if (isValidDefaultRoute(route)) {
    return true;
  }
  if (!route.includes("*")) {
    return false;
  }
  if (route.split("*").length !== 2) {
    return false;
  }
  if (route.split("*").filter((x5) => x5.trim() === "").length !== 1) {
    return false;
  }
  return true;
}
function isValidLeadingWildcardRoute(route) {
  return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split("*")[0].trim();
}
function isValidTrailingWildcardRoute(route) {
  return !isValidDefaultRoute(route) && isValidWildcardRoute(route) && !route.split("*")[1].trim();
}

// node_modules/@walletconnect/jsonrpc-types/dist/index.es.js
var e = class {
};
var o = class extends e {
  constructor(c5) {
    super();
  }
};
var n3 = class extends e {
  constructor() {
    super();
  }
};
var r = class extends n3 {
  constructor(c5) {
    super();
  }
};

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/url.js
var HTTP_REGEX = "^https?:";
var WS_REGEX = "^wss?:";
function getUrlProtocol(url) {
  const matches = url.match(new RegExp(/^\w+:/, "gi"));
  if (!matches || !matches.length)
    return;
  return matches[0];
}
function matchRegexProtocol(url, regex) {
  const protocol = getUrlProtocol(url);
  if (typeof protocol === "undefined")
    return false;
  return new RegExp(regex).test(protocol);
}
function isHttpUrl(url) {
  return matchRegexProtocol(url, HTTP_REGEX);
}
function isWsUrl(url) {
  return matchRegexProtocol(url, WS_REGEX);
}
function isLocalhostUrl(url) {
  return new RegExp("wss?://localhost(:d{2,5})?").test(url);
}

// node_modules/@walletconnect/jsonrpc-utils/dist/esm/validators.js
function isJsonRpcPayload(payload) {
  return typeof payload === "object" && "id" in payload && "jsonrpc" in payload && payload.jsonrpc === "2.0";
}
function isJsonRpcRequest(payload) {
  return isJsonRpcPayload(payload) && "method" in payload;
}
function isJsonRpcResponse(payload) {
  return isJsonRpcPayload(payload) && (isJsonRpcResult(payload) || isJsonRpcError(payload));
}
function isJsonRpcResult(payload) {
  return "result" in payload;
}
function isJsonRpcError(payload) {
  return "error" in payload;
}
function isJsonRpcValidationInvalid(validation) {
  return "error" in validation && validation.valid === false;
}

// node_modules/@walletconnect/core/node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js
var JsonRpcProvider = class extends r {
  constructor(connection) {
    super(connection);
    this.events = new import_events3.EventEmitter();
    this.hasRegisteredEventListeners = false;
    this.connection = this.setConnection(connection);
    if (this.connection.connected) {
      this.registerEventListeners();
    }
  }
  async connect(connection = this.connection) {
    await this.open(connection);
  }
  async disconnect() {
    await this.close();
  }
  on(event, listener) {
    this.events.on(event, listener);
  }
  once(event, listener) {
    this.events.once(event, listener);
  }
  off(event, listener) {
    this.events.off(event, listener);
  }
  removeListener(event, listener) {
    this.events.removeListener(event, listener);
  }
  async request(request, context) {
    return this.requestStrict(formatJsonRpcRequest(request.method, request.params || [], request.id || getBigIntRpcId().toString()), context);
  }
  async requestStrict(request, context) {
    return new Promise(async (resolve, reject) => {
      if (!this.connection.connected) {
        try {
          await this.open();
        } catch (e2) {
          reject(e2);
        }
      }
      this.events.on(`${request.id}`, (response) => {
        if (isJsonRpcError(response)) {
          reject(response.error);
        } else {
          resolve(response.result);
        }
      });
      try {
        await this.connection.send(request, context);
      } catch (e2) {
        reject(e2);
      }
    });
  }
  setConnection(connection = this.connection) {
    return connection;
  }
  onPayload(payload) {
    this.events.emit("payload", payload);
    if (isJsonRpcResponse(payload)) {
      this.events.emit(`${payload.id}`, payload);
    } else {
      this.events.emit("message", {
        type: payload.method,
        data: payload.params
      });
    }
  }
  onClose(event) {
    if (event && event.code === 3e3) {
      this.events.emit("error", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : ""}`));
    }
    this.events.emit("disconnect");
  }
  async open(connection = this.connection) {
    if (this.connection === connection && this.connection.connected)
      return;
    if (this.connection.connected)
      this.close();
    if (typeof connection === "string") {
      await this.connection.open(connection);
      connection = this.connection;
    }
    this.connection = this.setConnection(connection);
    await this.connection.open();
    this.registerEventListeners();
    this.events.emit("connect");
  }
  async close() {
    await this.connection.close();
  }
  registerEventListeners() {
    if (this.hasRegisteredEventListeners)
      return;
    this.connection.on("payload", (payload) => this.onPayload(payload));
    this.connection.on("close", (event) => this.onClose(event));
    this.connection.on("error", (error) => this.events.emit("error", error));
    this.connection.on("register_error", (error) => this.onClose());
    this.hasRegisteredEventListeners = true;
  }
};

// node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/ws.js
var import_events4 = __toESM(require_events());

// node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/utils.js
var resolveWebSocketImplementation = () => {
  if (typeof WebSocket !== "undefined") {
    return WebSocket;
  } else if (typeof global !== "undefined" && typeof global.WebSocket !== "undefined") {
    return global.WebSocket;
  } else if (typeof window !== "undefined" && typeof window.WebSocket !== "undefined") {
    return window.WebSocket;
  } else if (typeof self !== "undefined" && typeof self.WebSocket !== "undefined") {
    return self.WebSocket;
  }
  return require_browser3();
};
var hasBuiltInWebSocket = () => typeof WebSocket !== "undefined" || typeof global !== "undefined" && typeof global.WebSocket !== "undefined" || typeof window !== "undefined" && typeof window.WebSocket !== "undefined" || typeof self !== "undefined" && typeof self.WebSocket !== "undefined";
var truncateQuery = (wssUrl) => wssUrl.split("?")[0];

// node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/ws.js
var EVENT_EMITTER_MAX_LISTENERS_DEFAULT = 10;
var WS = resolveWebSocketImplementation();
var WsConnection = class {
  constructor(url) {
    this.url = url;
    this.events = new import_events4.EventEmitter();
    this.registering = false;
    if (!isWsUrl(url)) {
      throw new Error(`Provided URL is not compatible with WebSocket connection: ${url}`);
    }
    this.url = url;
  }
  get connected() {
    return typeof this.socket !== "undefined";
  }
  get connecting() {
    return this.registering;
  }
  on(event, listener) {
    this.events.on(event, listener);
  }
  once(event, listener) {
    this.events.once(event, listener);
  }
  off(event, listener) {
    this.events.off(event, listener);
  }
  removeListener(event, listener) {
    this.events.removeListener(event, listener);
  }
  async open(url = this.url) {
    await this.register(url);
  }
  async close() {
    return new Promise((resolve, reject) => {
      if (typeof this.socket === "undefined") {
        reject(new Error("Connection already closed"));
        return;
      }
      this.socket.onclose = (event) => {
        this.onClose(event);
        resolve();
      };
      this.socket.close();
    });
  }
  async send(payload, context) {
    if (typeof this.socket === "undefined") {
      this.socket = await this.register();
    }
    try {
      this.socket.send(safeJsonStringify(payload));
    } catch (e2) {
      this.onError(payload.id, e2);
    }
  }
  register(url = this.url) {
    if (!isWsUrl(url)) {
      throw new Error(`Provided URL is not compatible with WebSocket connection: ${url}`);
    }
    if (this.registering) {
      const currentMaxListeners = this.events.getMaxListeners();
      if (this.events.listenerCount("register_error") >= currentMaxListeners || this.events.listenerCount("open") >= currentMaxListeners) {
        this.events.setMaxListeners(currentMaxListeners + 1);
      }
      return new Promise((resolve, reject) => {
        this.events.once("register_error", (error) => {
          this.resetMaxListeners();
          reject(error);
        });
        this.events.once("open", () => {
          this.resetMaxListeners();
          if (typeof this.socket === "undefined") {
            return reject(new Error("WebSocket connection is missing or invalid"));
          }
          resolve(this.socket);
        });
      });
    }
    this.url = url;
    this.registering = true;
    return new Promise((resolve, reject) => {
      const opts = !(0, esm_exports2.isReactNative)() ? { rejectUnauthorized: !isLocalhostUrl(url) } : void 0;
      const socket = new WS(url, [], opts);
      if (hasBuiltInWebSocket()) {
        socket.onerror = (event) => {
          const errorEvent = event;
          reject(this.emitError(errorEvent.error));
        };
      } else {
        socket.on("error", (errorEvent) => {
          reject(this.emitError(errorEvent));
        });
      }
      socket.onopen = () => {
        this.onOpen(socket);
        resolve(socket);
      };
    });
  }
  onOpen(socket) {
    socket.onmessage = (event) => this.onPayload(event);
    socket.onclose = (event) => this.onClose(event);
    this.socket = socket;
    this.registering = false;
    this.events.emit("open");
  }
  onClose(event) {
    this.socket = void 0;
    this.registering = false;
    this.events.emit("close", event);
  }
  onPayload(e2) {
    if (typeof e2.data === "undefined")
      return;
    const payload = typeof e2.data === "string" ? safeJsonParse(e2.data) : e2.data;
    this.events.emit("payload", payload);
  }
  onError(id, e2) {
    const error = this.parseError(e2);
    const message = error.message || error.toString();
    const payload = formatJsonRpcError(id, message);
    this.events.emit("payload", payload);
  }
  parseError(e2, url = this.url) {
    return parseConnectionError(e2, truncateQuery(url), "WS");
  }
  resetMaxListeners() {
    if (this.events.getMaxListeners() > EVENT_EMITTER_MAX_LISTENERS_DEFAULT) {
      this.events.setMaxListeners(EVENT_EMITTER_MAX_LISTENERS_DEFAULT);
    }
  }
  emitError(errorEvent) {
    const error = this.parseError(new Error((errorEvent === null || errorEvent === void 0 ? void 0 : errorEvent.message) || `WebSocket connection failed for host: ${truncateQuery(this.url)}`));
    this.events.emit("register_error", error);
    return error;
  }
};
var ws_default = WsConnection;

// node_modules/@walletconnect/jsonrpc-ws-connection/dist/esm/index.js
var esm_default = ws_default;

// node_modules/@walletconnect/core/dist/index.es.js
var import_lodash = __toESM(require_lodash());
function $i(r2, e2) {
  if (r2.length >= 255) throw new TypeError("Alphabet too long");
  for (var t = new Uint8Array(256), i3 = 0; i3 < t.length; i3++) t[i3] = 255;
  for (var s2 = 0; s2 < r2.length; s2++) {
    var n4 = r2.charAt(s2), a2 = n4.charCodeAt(0);
    if (t[a2] !== 255) throw new TypeError(n4 + " is ambiguous");
    t[a2] = s2;
  }
  var o3 = r2.length, h4 = r2.charAt(0), l4 = Math.log(o3) / Math.log(256), d3 = Math.log(256) / Math.log(o3);
  function b5(u3) {
    if (u3 instanceof Uint8Array || (ArrayBuffer.isView(u3) ? u3 = new Uint8Array(u3.buffer, u3.byteOffset, u3.byteLength) : Array.isArray(u3) && (u3 = Uint8Array.from(u3))), !(u3 instanceof Uint8Array)) throw new TypeError("Expected Uint8Array");
    if (u3.length === 0) return "";
    for (var D4 = 0, A3 = 0, v4 = 0, R2 = u3.length; v4 !== R2 && u3[v4] === 0; ) v4++, D4++;
    for (var T3 = (R2 - v4) * d3 + 1 >>> 0, m4 = new Uint8Array(T3); v4 !== R2; ) {
      for (var S5 = u3[v4], x5 = 0, I2 = T3 - 1; (S5 !== 0 || x5 < A3) && I2 !== -1; I2--, x5++) S5 += 256 * m4[I2] >>> 0, m4[I2] = S5 % o3 >>> 0, S5 = S5 / o3 >>> 0;
      if (S5 !== 0) throw new Error("Non-zero carry");
      A3 = x5, v4++;
    }
    for (var P5 = T3 - A3; P5 !== T3 && m4[P5] === 0; ) P5++;
    for (var B2 = h4.repeat(D4); P5 < T3; ++P5) B2 += r2.charAt(m4[P5]);
    return B2;
  }
  function y6(u3) {
    if (typeof u3 != "string") throw new TypeError("Expected String");
    if (u3.length === 0) return new Uint8Array();
    var D4 = 0;
    if (u3[D4] !== " ") {
      for (var A3 = 0, v4 = 0; u3[D4] === h4; ) A3++, D4++;
      for (var R2 = (u3.length - D4) * l4 + 1 >>> 0, T3 = new Uint8Array(R2); u3[D4]; ) {
        var m4 = t[u3.charCodeAt(D4)];
        if (m4 === 255) return;
        for (var S5 = 0, x5 = R2 - 1; (m4 !== 0 || S5 < v4) && x5 !== -1; x5--, S5++) m4 += o3 * T3[x5] >>> 0, T3[x5] = m4 % 256 >>> 0, m4 = m4 / 256 >>> 0;
        if (m4 !== 0) throw new Error("Non-zero carry");
        v4 = S5, D4++;
      }
      if (u3[D4] !== " ") {
        for (var I2 = R2 - v4; I2 !== R2 && T3[I2] === 0; ) I2++;
        for (var P5 = new Uint8Array(A3 + (R2 - I2)), B2 = A3; I2 !== R2; ) P5[B2++] = T3[I2++];
        return P5;
      }
    }
  }
  function k4(u3) {
    var D4 = y6(u3);
    if (D4) return D4;
    throw new Error(`Non-${e2} character`);
  }
  return { encode: b5, decodeUnsafe: y6, decode: k4 };
}
var Fi = $i;
var Mi = Fi;
var Oe3 = (r2) => {
  if (r2 instanceof Uint8Array && r2.constructor.name === "Uint8Array") return r2;
  if (r2 instanceof ArrayBuffer) return new Uint8Array(r2);
  if (ArrayBuffer.isView(r2)) return new Uint8Array(r2.buffer, r2.byteOffset, r2.byteLength);
  throw new Error("Unknown type, must be binary type");
};
var Ki = (r2) => new TextEncoder().encode(r2);
var ki = (r2) => new TextDecoder().decode(r2);
var Bi = class {
  constructor(e2, t, i3) {
    this.name = e2, this.prefix = t, this.baseEncode = i3;
  }
  encode(e2) {
    if (e2 instanceof Uint8Array) return `${this.prefix}${this.baseEncode(e2)}`;
    throw Error("Unknown type, must be binary type");
  }
};
var ji = class {
  constructor(e2, t, i3) {
    if (this.name = e2, this.prefix = t, t.codePointAt(0) === void 0) throw new Error("Invalid prefix character");
    this.prefixCodePoint = t.codePointAt(0), this.baseDecode = i3;
  }
  decode(e2) {
    if (typeof e2 == "string") {
      if (e2.codePointAt(0) !== this.prefixCodePoint) throw Error(`Unable to decode multibase string ${JSON.stringify(e2)}, ${this.name} decoder only supports inputs prefixed with ${this.prefix}`);
      return this.baseDecode(e2.slice(this.prefix.length));
    } else throw Error("Can only multibase decode strings");
  }
  or(e2) {
    return xe3(this, e2);
  }
};
var Vi = class {
  constructor(e2) {
    this.decoders = e2;
  }
  or(e2) {
    return xe3(this, e2);
  }
  decode(e2) {
    const t = e2[0], i3 = this.decoders[t];
    if (i3) return i3.decode(e2);
    throw RangeError(`Unable to decode multibase string ${JSON.stringify(e2)}, only inputs prefixed with ${Object.keys(this.decoders)} are supported`);
  }
};
var xe3 = (r2, e2) => new Vi({ ...r2.decoders || { [r2.prefix]: r2 }, ...e2.decoders || { [e2.prefix]: e2 } });
var qi = class {
  constructor(e2, t, i3, s2) {
    this.name = e2, this.prefix = t, this.baseEncode = i3, this.baseDecode = s2, this.encoder = new Bi(e2, t, i3), this.decoder = new ji(e2, t, s2);
  }
  encode(e2) {
    return this.encoder.encode(e2);
  }
  decode(e2) {
    return this.decoder.decode(e2);
  }
};
var H3 = ({ name: r2, prefix: e2, encode: t, decode: i3 }) => new qi(r2, e2, t, i3);
var M3 = ({ prefix: r2, name: e2, alphabet: t }) => {
  const { encode: i3, decode: s2 } = Mi(t, e2);
  return H3({ prefix: r2, name: e2, encode: i3, decode: (n4) => Oe3(s2(n4)) });
};
var Yi = (r2, e2, t, i3) => {
  const s2 = {};
  for (let d3 = 0; d3 < e2.length; ++d3) s2[e2[d3]] = d3;
  let n4 = r2.length;
  for (; r2[n4 - 1] === "="; ) --n4;
  const a2 = new Uint8Array(n4 * t / 8 | 0);
  let o3 = 0, h4 = 0, l4 = 0;
  for (let d3 = 0; d3 < n4; ++d3) {
    const b5 = s2[r2[d3]];
    if (b5 === void 0) throw new SyntaxError(`Non-${i3} character`);
    h4 = h4 << t | b5, o3 += t, o3 >= 8 && (o3 -= 8, a2[l4++] = 255 & h4 >> o3);
  }
  if (o3 >= t || 255 & h4 << 8 - o3) throw new SyntaxError("Unexpected end of data");
  return a2;
};
var Gi = (r2, e2, t) => {
  const i3 = e2[e2.length - 1] === "=", s2 = (1 << t) - 1;
  let n4 = "", a2 = 0, o3 = 0;
  for (let h4 = 0; h4 < r2.length; ++h4) for (o3 = o3 << 8 | r2[h4], a2 += 8; a2 > t; ) a2 -= t, n4 += e2[s2 & o3 >> a2];
  if (a2 && (n4 += e2[s2 & o3 << t - a2]), i3) for (; n4.length * t & 7; ) n4 += "=";
  return n4;
};
var p4 = ({ name: r2, prefix: e2, bitsPerChar: t, alphabet: i3 }) => H3({ prefix: e2, name: r2, encode(s2) {
  return Gi(s2, i3, t);
}, decode(s2) {
  return Yi(s2, i3, t, r2);
} });
var Ji = H3({ prefix: "\0", name: "identity", encode: (r2) => ki(r2), decode: (r2) => Ki(r2) });
var Hi = Object.freeze({ __proto__: null, identity: Ji });
var Wi = p4({ prefix: "0", name: "base2", alphabet: "01", bitsPerChar: 1 });
var Xi = Object.freeze({ __proto__: null, base2: Wi });
var Zi = p4({ prefix: "7", name: "base8", alphabet: "01234567", bitsPerChar: 3 });
var Qi = Object.freeze({ __proto__: null, base8: Zi });
var es = M3({ prefix: "9", name: "base10", alphabet: "0123456789" });
var ts = Object.freeze({ __proto__: null, base10: es });
var is = p4({ prefix: "f", name: "base16", alphabet: "0123456789abcdef", bitsPerChar: 4 });
var ss = p4({ prefix: "F", name: "base16upper", alphabet: "0123456789ABCDEF", bitsPerChar: 4 });
var rs = Object.freeze({ __proto__: null, base16: is, base16upper: ss });
var ns = p4({ prefix: "b", name: "base32", alphabet: "abcdefghijklmnopqrstuvwxyz234567", bitsPerChar: 5 });
var as = p4({ prefix: "B", name: "base32upper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567", bitsPerChar: 5 });
var os = p4({ prefix: "c", name: "base32pad", alphabet: "abcdefghijklmnopqrstuvwxyz234567=", bitsPerChar: 5 });
var hs = p4({ prefix: "C", name: "base32padupper", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=", bitsPerChar: 5 });
var cs = p4({ prefix: "v", name: "base32hex", alphabet: "0123456789abcdefghijklmnopqrstuv", bitsPerChar: 5 });
var us = p4({ prefix: "V", name: "base32hexupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV", bitsPerChar: 5 });
var ls = p4({ prefix: "t", name: "base32hexpad", alphabet: "0123456789abcdefghijklmnopqrstuv=", bitsPerChar: 5 });
var ds = p4({ prefix: "T", name: "base32hexpadupper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUV=", bitsPerChar: 5 });
var gs = p4({ prefix: "h", name: "base32z", alphabet: "ybndrfg8ejkmcpqxot1uwisza345h769", bitsPerChar: 5 });
var ps = Object.freeze({ __proto__: null, base32: ns, base32upper: as, base32pad: os, base32padupper: hs, base32hex: cs, base32hexupper: us, base32hexpad: ls, base32hexpadupper: ds, base32z: gs });
var Ds = M3({ prefix: "k", name: "base36", alphabet: "0123456789abcdefghijklmnopqrstuvwxyz" });
var ys = M3({ prefix: "K", name: "base36upper", alphabet: "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ" });
var bs = Object.freeze({ __proto__: null, base36: Ds, base36upper: ys });
var ms = M3({ name: "base58btc", prefix: "z", alphabet: "123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz" });
var Es = M3({ name: "base58flickr", prefix: "Z", alphabet: "123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ" });
var fs = Object.freeze({ __proto__: null, base58btc: ms, base58flickr: Es });
var ws = p4({ prefix: "m", name: "base64", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/", bitsPerChar: 6 });
var vs = p4({ prefix: "M", name: "base64pad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=", bitsPerChar: 6 });
var Is = p4({ prefix: "u", name: "base64url", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_", bitsPerChar: 6 });
var Cs = p4({ prefix: "U", name: "base64urlpad", alphabet: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=", bitsPerChar: 6 });
var _s = Object.freeze({ __proto__: null, base64: ws, base64pad: vs, base64url: Is, base64urlpad: Cs });
var Ae3 = Array.from("🚀🪐☄🛰🌌🌑🌒🌓🌔🌕🌖🌗🌘🌍🌏🌎🐉☀💻🖥💾💿😂❤😍🤣😊🙏💕😭😘👍😅👏😁🔥🥰💔💖💙😢🤔😆🙄💪😉☺👌🤗💜😔😎😇🌹🤦🎉💞✌✨🤷😱😌🌸🙌😋💗💚😏💛🙂💓🤩😄😀🖤😃💯🙈👇🎶😒🤭❣😜💋👀😪😑💥🙋😞😩😡🤪👊🥳😥🤤👉💃😳✋😚😝😴🌟😬🙃🍀🌷😻😓⭐✅🥺🌈😈🤘💦✔😣🏃💐☹🎊💘😠☝😕🌺🎂🌻😐🖕💝🙊😹🗣💫💀👑🎵🤞😛🔴😤🌼😫⚽🤙☕🏆🤫👈😮🙆🍻🍃🐶💁😲🌿🧡🎁⚡🌞🎈❌✊👋😰🤨😶🤝🚶💰🍓💢🤟🙁🚨💨🤬✈🎀🍺🤓😙💟🌱😖👶🥴▶➡❓💎💸⬇😨🌚🦋😷🕺⚠🙅😟😵👎🤲🤠🤧📌🔵💅🧐🐾🍒😗🤑🌊🤯🐷☎💧😯💆👆🎤🙇🍑❄🌴💣🐸💌📍🥀🤢👅💡💩👐📸👻🤐🤮🎼🥵🚩🍎🍊👼💍📣🥂");
var Rs = Ae3.reduce((r2, e2, t) => (r2[t] = e2, r2), []);
var Ts = Ae3.reduce((r2, e2, t) => (r2[e2.codePointAt(0)] = t, r2), []);
function Ss(r2) {
  return r2.reduce((e2, t) => (e2 += Rs[t], e2), "");
}
function Ps(r2) {
  const e2 = [];
  for (const t of r2) {
    const i3 = Ts[t.codePointAt(0)];
    if (i3 === void 0) throw new Error(`Non-base256emoji character: ${t}`);
    e2.push(i3);
  }
  return new Uint8Array(e2);
}
var Os = H3({ prefix: "🚀", name: "base256emoji", encode: Ss, decode: Ps });
var xs = Object.freeze({ __proto__: null, base256emoji: Os });
var As = Ne2;
var ze2 = 128;
var zs = 127;
var Ns = ~zs;
var Us = Math.pow(2, 31);
function Ne2(r2, e2, t) {
  e2 = e2 || [], t = t || 0;
  for (var i3 = t; r2 >= Us; ) e2[t++] = r2 & 255 | ze2, r2 /= 128;
  for (; r2 & Ns; ) e2[t++] = r2 & 255 | ze2, r2 >>>= 7;
  return e2[t] = r2 | 0, Ne2.bytes = t - i3 + 1, e2;
}
var Ls = ae2;
var $s = 128;
var Ue2 = 127;
function ae2(r2, i3) {
  var t = 0, i3 = i3 || 0, s2 = 0, n4 = i3, a2, o3 = r2.length;
  do {
    if (n4 >= o3) throw ae2.bytes = 0, new RangeError("Could not decode varint");
    a2 = r2[n4++], t += s2 < 28 ? (a2 & Ue2) << s2 : (a2 & Ue2) * Math.pow(2, s2), s2 += 7;
  } while (a2 >= $s);
  return ae2.bytes = n4 - i3, t;
}
var Fs = Math.pow(2, 7);
var Ms = Math.pow(2, 14);
var Ks = Math.pow(2, 21);
var ks = Math.pow(2, 28);
var Bs = Math.pow(2, 35);
var js = Math.pow(2, 42);
var Vs = Math.pow(2, 49);
var qs = Math.pow(2, 56);
var Ys = Math.pow(2, 63);
var Gs = function(r2) {
  return r2 < Fs ? 1 : r2 < Ms ? 2 : r2 < Ks ? 3 : r2 < ks ? 4 : r2 < Bs ? 5 : r2 < js ? 6 : r2 < Vs ? 7 : r2 < qs ? 8 : r2 < Ys ? 9 : 10;
};
var Js = { encode: As, decode: Ls, encodingLength: Gs };
var Le2 = Js;
var $e3 = (r2, e2, t = 0) => (Le2.encode(r2, e2, t), e2);
var Fe2 = (r2) => Le2.encodingLength(r2);
var oe2 = (r2, e2) => {
  const t = e2.byteLength, i3 = Fe2(r2), s2 = i3 + Fe2(t), n4 = new Uint8Array(s2 + t);
  return $e3(r2, n4, 0), $e3(t, n4, i3), n4.set(e2, s2), new Hs(r2, t, e2, n4);
};
var Hs = class {
  constructor(e2, t, i3, s2) {
    this.code = e2, this.size = t, this.digest = i3, this.bytes = s2;
  }
};
var Me2 = ({ name: r2, code: e2, encode: t }) => new Ws(r2, e2, t);
var Ws = class {
  constructor(e2, t, i3) {
    this.name = e2, this.code = t, this.encode = i3;
  }
  digest(e2) {
    if (e2 instanceof Uint8Array) {
      const t = this.encode(e2);
      return t instanceof Uint8Array ? oe2(this.code, t) : t.then((i3) => oe2(this.code, i3));
    } else throw Error("Unknown type, must be binary type");
  }
};
var Ke2 = (r2) => async (e2) => new Uint8Array(await crypto.subtle.digest(r2, e2));
var Xs = Me2({ name: "sha2-256", code: 18, encode: Ke2("SHA-256") });
var Zs = Me2({ name: "sha2-512", code: 19, encode: Ke2("SHA-512") });
var Qs = Object.freeze({ __proto__: null, sha256: Xs, sha512: Zs });
var ke3 = 0;
var er2 = "identity";
var Be2 = Oe3;
var tr2 = (r2) => oe2(ke3, Be2(r2));
var ir2 = { code: ke3, name: er2, encode: Be2, digest: tr2 };
var sr2 = Object.freeze({ __proto__: null, identity: ir2 });
new TextEncoder(), new TextDecoder();
var je3 = { ...Hi, ...Xi, ...Qi, ...ts, ...rs, ...ps, ...bs, ...fs, ..._s, ...xs };
({ ...Qs, ...sr2 });
function Ve3(r2) {
  return globalThis.Buffer != null ? new Uint8Array(r2.buffer, r2.byteOffset, r2.byteLength) : r2;
}
function rr2(r2 = 0) {
  return globalThis.Buffer != null && globalThis.Buffer.allocUnsafe != null ? Ve3(globalThis.Buffer.allocUnsafe(r2)) : new Uint8Array(r2);
}
function qe3(r2, e2, t, i3) {
  return { name: r2, prefix: e2, encoder: { name: r2, prefix: e2, encode: t }, decoder: { decode: i3 } };
}
var Ye3 = qe3("utf8", "u", (r2) => "u" + new TextDecoder("utf8").decode(r2), (r2) => new TextEncoder().encode(r2.substring(1)));
var he2 = qe3("ascii", "a", (r2) => {
  let e2 = "a";
  for (let t = 0; t < r2.length; t++) e2 += String.fromCharCode(r2[t]);
  return e2;
}, (r2) => {
  r2 = r2.substring(1);
  const e2 = rr2(r2.length);
  for (let t = 0; t < r2.length; t++) e2[t] = r2.charCodeAt(t);
  return e2;
});
var nr2 = { utf8: Ye3, "utf-8": Ye3, hex: je3.base16, latin1: he2, ascii: he2, binary: he2, ...je3 };
function ar2(r2, e2 = "utf8") {
  const t = nr2[e2];
  if (!t) throw new Error(`Unsupported encoding "${e2}"`);
  return (e2 === "utf8" || e2 === "utf-8") && globalThis.Buffer != null && globalThis.Buffer.from != null ? Ve3(globalThis.Buffer.from(r2, "utf-8")) : t.decoder.decode(`${t.prefix}${r2}`);
}
var ce2 = "wc";
var Ge3 = 2;
var W2 = "core";
var O3 = `${ce2}@2:${W2}:`;
var Je3 = { name: W2, logger: "error" };
var He3 = { database: ":memory:" };
var We3 = "crypto";
var ue2 = "client_ed25519_seed";
var Xe3 = import_time3.ONE_DAY;
var Ze3 = "keychain";
var Qe3 = "0.3";
var et2 = "messages";
var tt2 = "0.3";
var it3 = import_time3.SIX_HOURS;
var st2 = "publisher";
var rt3 = "irn";
var nt3 = "error";
var le3 = "wss://relay.walletconnect.com";
var de2 = "wss://relay.walletconnect.org";
var at2 = "relayer";
var g3 = { message: "relayer_message", message_ack: "relayer_message_ack", connect: "relayer_connect", disconnect: "relayer_disconnect", error: "relayer_error", connection_stalled: "relayer_connection_stalled", transport_closed: "relayer_transport_closed", publish: "relayer_publish" };
var ot2 = "_subscription";
var L2 = { payload: "payload", connect: "connect", disconnect: "disconnect", error: "error" };
var ht2 = import_time3.ONE_SECOND / 2;
var ct3 = "2.9.1";
var ut3 = 1e4;
var lt2 = "0.3";
var dt3 = "WALLETCONNECT_CLIENT_ID";
var C3 = { created: "subscription_created", deleted: "subscription_deleted", expired: "subscription_expired", disabled: "subscription_disabled", sync: "subscription_sync", resubscribed: "subscription_resubscribed" };
var gt2 = "subscription";
var pt2 = "0.3";
var Dt3 = import_time3.FIVE_SECONDS * 1e3;
var yt3 = "pairing";
var bt2 = "0.3";
var $2 = { wc_pairingDelete: { req: { ttl: import_time3.ONE_DAY, prompt: false, tag: 1e3 }, res: { ttl: import_time3.ONE_DAY, prompt: false, tag: 1001 } }, wc_pairingPing: { req: { ttl: import_time3.THIRTY_SECONDS, prompt: false, tag: 1002 }, res: { ttl: import_time3.THIRTY_SECONDS, prompt: false, tag: 1003 } }, unregistered_method: { req: { ttl: import_time3.ONE_DAY, prompt: false, tag: 0 }, res: { ttl: import_time3.ONE_DAY, prompt: false, tag: 0 } } };
var _3 = { created: "history_created", updated: "history_updated", deleted: "history_deleted", sync: "history_sync" };
var mt2 = "history";
var Et2 = "0.3";
var ft3 = "expirer";
var w2 = { created: "expirer_created", deleted: "expirer_deleted", expired: "expirer_expired", sync: "expirer_sync" };
var wt3 = "0.3";
var X = "verify-api";
var ge2 = "https://verify.walletconnect.com";
var vt2 = class {
  constructor(e2, t) {
    this.core = e2, this.logger = t, this.keychain = /* @__PURE__ */ new Map(), this.name = Ze3, this.version = Qe3, this.initialized = false, this.storagePrefix = O3, this.init = async () => {
      if (!this.initialized) {
        const i3 = await this.getKeyChain();
        typeof i3 < "u" && (this.keychain = i3), this.initialized = true;
      }
    }, this.has = (i3) => (this.isInitialized(), this.keychain.has(i3)), this.set = async (i3, s2) => {
      this.isInitialized(), this.keychain.set(i3, s2), await this.persist();
    }, this.get = (i3) => {
      this.isInitialized();
      const s2 = this.keychain.get(i3);
      if (typeof s2 > "u") {
        const { message: n4 } = N("NO_MATCHING_KEY", `${this.name}: ${i3}`);
        throw new Error(n4);
      }
      return s2;
    }, this.del = async (i3) => {
      this.isInitialized(), this.keychain.delete(i3), await this.persist();
    }, this.core = e2, this.logger = E2(t, this.name);
  }
  get context() {
    return y3(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  async setKeyChain(e2) {
    await this.core.storage.setItem(this.storageKey, Bn(e2));
  }
  async getKeyChain() {
    const e2 = await this.core.storage.getItem(this.storageKey);
    return typeof e2 < "u" ? Yn(e2) : void 0;
  }
  async persist() {
    await this.setKeyChain(this.keychain);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = N("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var It2 = class {
  constructor(e2, t, i3) {
    this.core = e2, this.logger = t, this.name = We3, this.initialized = false, this.init = async () => {
      this.initialized || (await this.keychain.init(), this.initialized = true);
    }, this.hasKeys = (s2) => (this.isInitialized(), this.keychain.has(s2)), this.getClientId = async () => {
      this.isInitialized();
      const s2 = await this.getClientSeed(), n4 = Po(s2);
      return Qe2(n4.publicKey);
    }, this.generateKeyPair = () => {
      this.isInitialized();
      const s2 = Rn();
      return this.setPrivateKey(s2.publicKey, s2.privateKey);
    }, this.signJWT = async (s2) => {
      this.isInitialized();
      const n4 = await this.getClientSeed(), a2 = Po(n4), o3 = An(), h4 = Xe3;
      return await Qo(o3, s2, h4, a2);
    }, this.generateSharedKey = (s2, n4, a2) => {
      this.isInitialized();
      const o3 = this.getPrivateKey(s2), h4 = Un(o3, n4);
      return this.setSymKey(h4, a2);
    }, this.setSymKey = async (s2, n4) => {
      this.isInitialized();
      const a2 = n4 || _n(s2);
      return await this.keychain.set(a2, s2), a2;
    }, this.deleteKeyPair = async (s2) => {
      this.isInitialized(), await this.keychain.del(s2);
    }, this.deleteSymKey = async (s2) => {
      this.isInitialized(), await this.keychain.del(s2);
    }, this.encode = async (s2, n4, a2) => {
      this.isInitialized();
      const o3 = Pe(a2), h4 = safeJsonStringify(n4);
      if (Vn(o3)) {
        const y6 = o3.senderPublicKey, k4 = o3.receiverPublicKey;
        s2 = await this.generateSharedKey(y6, k4);
      }
      const l4 = this.getSymKey(s2), { type: d3, senderPublicKey: b5 } = o3;
      return jn({ type: d3, symKey: l4, message: h4, senderPublicKey: b5 });
    }, this.decode = async (s2, n4, a2) => {
      this.isInitialized();
      const o3 = Dn(n4, a2);
      if (Vn(o3)) {
        const h4 = o3.receiverPublicKey, l4 = o3.senderPublicKey;
        s2 = await this.generateSharedKey(h4, l4);
      }
      try {
        const h4 = this.getSymKey(s2), l4 = Cn({ symKey: h4, encoded: n4 });
        return safeJsonParse(l4);
      } catch (h4) {
        this.logger.error(`Failed to decode message from topic: '${s2}', clientId: '${await this.getClientId()}'`), this.logger.error(h4);
      }
    }, this.getPayloadType = (s2) => {
      const n4 = Z(s2);
      return $(n4.type);
    }, this.getPayloadSenderPublicKey = (s2) => {
      const n4 = Z(s2);
      return n4.senderPublicKey ? toString2(n4.senderPublicKey, p) : void 0;
    }, this.core = e2, this.logger = E2(t, this.name), this.keychain = i3 || new vt2(this.core, this.logger);
  }
  get context() {
    return y3(this.logger);
  }
  async setPrivateKey(e2, t) {
    return await this.keychain.set(e2, t), e2;
  }
  getPrivateKey(e2) {
    return this.keychain.get(e2);
  }
  async getClientSeed() {
    let e2 = "";
    try {
      e2 = this.keychain.get(ue2);
    } catch {
      e2 = An(), await this.keychain.set(ue2, e2);
    }
    return ar2(e2, "base16");
  }
  getSymKey(e2) {
    return this.keychain.get(e2);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = N("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var Ct2 = class extends a {
  constructor(e2, t) {
    super(e2, t), this.logger = e2, this.core = t, this.messages = /* @__PURE__ */ new Map(), this.name = et2, this.version = tt2, this.initialized = false, this.storagePrefix = O3, this.init = async () => {
      if (!this.initialized) {
        this.logger.trace("Initialized");
        try {
          const i3 = await this.getRelayerMessages();
          typeof i3 < "u" && (this.messages = i3), this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", size: this.messages.size });
        } catch (i3) {
          this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(i3);
        } finally {
          this.initialized = true;
        }
      }
    }, this.set = async (i3, s2) => {
      this.isInitialized();
      const n4 = $n(s2);
      let a2 = this.messages.get(i3);
      return typeof a2 > "u" && (a2 = {}), typeof a2[n4] < "u" || (a2[n4] = s2, this.messages.set(i3, a2), await this.persist()), n4;
    }, this.get = (i3) => {
      this.isInitialized();
      let s2 = this.messages.get(i3);
      return typeof s2 > "u" && (s2 = {}), s2;
    }, this.has = (i3, s2) => {
      this.isInitialized();
      const n4 = this.get(i3), a2 = $n(s2);
      return typeof n4[a2] < "u";
    }, this.del = async (i3) => {
      this.isInitialized(), this.messages.delete(i3), await this.persist();
    }, this.logger = E2(e2, this.name), this.core = t;
  }
  get context() {
    return y3(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  async setRelayerMessages(e2) {
    await this.core.storage.setItem(this.storageKey, Bn(e2));
  }
  async getRelayerMessages() {
    const e2 = await this.core.storage.getItem(this.storageKey);
    return typeof e2 < "u" ? Yn(e2) : void 0;
  }
  async persist() {
    await this.setRelayerMessages(this.messages);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = N("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var lr2 = class extends u {
  constructor(e2, t) {
    super(e2, t), this.relayer = e2, this.logger = t, this.events = new import_events5.EventEmitter(), this.name = st2, this.queue = /* @__PURE__ */ new Map(), this.publishTimeout = (0, import_time3.toMiliseconds)(import_time3.TEN_SECONDS), this.queueTimeout = (0, import_time3.toMiliseconds)(import_time3.FIVE_SECONDS), this.needsTransportRestart = false, this.publish = async (i3, s2, n4) => {
      this.logger.debug("Publishing Payload"), this.logger.trace({ type: "method", method: "publish", params: { topic: i3, message: s2, opts: n4 } });
      try {
        const a2 = (n4 == null ? void 0 : n4.ttl) || it3, o3 = at(n4), h4 = (n4 == null ? void 0 : n4.prompt) || false, l4 = (n4 == null ? void 0 : n4.tag) || 0, d3 = (n4 == null ? void 0 : n4.id) || getBigIntRpcId().toString(), b5 = { topic: i3, message: s2, opts: { ttl: a2, relay: o3, prompt: h4, tag: l4, id: d3 } }, y6 = setTimeout(() => this.queue.set(d3, b5), this.queueTimeout);
        try {
          await await et(this.rpcPublish(i3, s2, a2, o3, h4, l4, d3), this.publishTimeout), clearTimeout(y6), this.relayer.events.emit(g3.publish, b5);
        } catch {
          this.logger.debug("Publishing Payload stalled"), this.needsTransportRestart = true;
          return;
        }
        this.logger.debug("Successfully Published Payload"), this.logger.trace({ type: "method", method: "publish", params: { topic: i3, message: s2, opts: n4 } });
      } catch (a2) {
        throw this.logger.debug("Failed to Publish Payload"), this.logger.error(a2), a2;
      }
    }, this.on = (i3, s2) => {
      this.events.on(i3, s2);
    }, this.once = (i3, s2) => {
      this.events.once(i3, s2);
    }, this.off = (i3, s2) => {
      this.events.off(i3, s2);
    }, this.removeListener = (i3, s2) => {
      this.events.removeListener(i3, s2);
    }, this.relayer = e2, this.logger = E2(t, this.name), this.registerEventListeners();
  }
  get context() {
    return y3(this.logger);
  }
  rpcPublish(e2, t, i3, s2, n4, a2, o3) {
    var h4, l4, d3, b5;
    const y6 = { method: ut(s2.protocol).publish, params: { topic: e2, message: t, ttl: i3, prompt: n4, tag: a2 }, id: o3 };
    return I((h4 = y6.params) == null ? void 0 : h4.prompt) && ((l4 = y6.params) == null || delete l4.prompt), I((d3 = y6.params) == null ? void 0 : d3.tag) && ((b5 = y6.params) == null || delete b5.tag), this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "message", direction: "outgoing", request: y6 }), this.relayer.request(y6);
  }
  onPublish(e2) {
    this.queue.delete(e2);
  }
  checkQueue() {
    this.queue.forEach(async (e2) => {
      const { topic: t, message: i3, opts: s2 } = e2;
      await this.publish(t, i3, s2);
    });
  }
  registerEventListeners() {
    this.relayer.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, () => {
      if (this.needsTransportRestart) {
        this.needsTransportRestart = false, this.relayer.events.emit(g3.connection_stalled);
        return;
      }
      this.checkQueue();
    }), this.relayer.on(g3.message_ack, (e2) => {
      this.onPublish(e2.id.toString());
    });
  }
};
var dr2 = class {
  constructor() {
    this.map = /* @__PURE__ */ new Map(), this.set = (e2, t) => {
      const i3 = this.get(e2);
      this.exists(e2, t) || this.map.set(e2, [...i3, t]);
    }, this.get = (e2) => this.map.get(e2) || [], this.exists = (e2, t) => this.get(e2).includes(t), this.delete = (e2, t) => {
      if (typeof t > "u") {
        this.map.delete(e2);
        return;
      }
      if (!this.map.has(e2)) return;
      const i3 = this.get(e2);
      if (!this.exists(e2, t)) return;
      const s2 = i3.filter((n4) => n4 !== t);
      if (!s2.length) {
        this.map.delete(e2);
        return;
      }
      this.map.set(e2, s2);
    }, this.clear = () => {
      this.map.clear();
    };
  }
  get topics() {
    return Array.from(this.map.keys());
  }
};
var gr2 = Object.defineProperty;
var pr2 = Object.defineProperties;
var Dr2 = Object.getOwnPropertyDescriptors;
var _t3 = Object.getOwnPropertySymbols;
var yr2 = Object.prototype.hasOwnProperty;
var br2 = Object.prototype.propertyIsEnumerable;
var Rt3 = (r2, e2, t) => e2 in r2 ? gr2(r2, e2, { enumerable: true, configurable: true, writable: true, value: t }) : r2[e2] = t;
var K3 = (r2, e2) => {
  for (var t in e2 || (e2 = {})) yr2.call(e2, t) && Rt3(r2, t, e2[t]);
  if (_t3) for (var t of _t3(e2)) br2.call(e2, t) && Rt3(r2, t, e2[t]);
  return r2;
};
var pe3 = (r2, e2) => pr2(r2, Dr2(e2));
var Tt3 = class extends d {
  constructor(e2, t) {
    super(e2, t), this.relayer = e2, this.logger = t, this.subscriptions = /* @__PURE__ */ new Map(), this.topicMap = new dr2(), this.events = new import_events5.EventEmitter(), this.name = gt2, this.version = pt2, this.pending = /* @__PURE__ */ new Map(), this.cached = [], this.initialized = false, this.pendingSubscriptionWatchLabel = "pending_sub_watch_label", this.pollingInterval = 20, this.storagePrefix = O3, this.subscribeTimeout = 1e4, this.restartInProgress = false, this.batchSubscribeTopicsLimit = 500, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restart(), this.registerEventListeners(), this.onEnable(), this.clientId = await this.relayer.core.crypto.getClientId());
    }, this.subscribe = async (i3, s2) => {
      await this.restartToComplete(), this.isInitialized(), this.logger.debug("Subscribing Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: i3, opts: s2 } });
      try {
        const n4 = at(s2), a2 = { topic: i3, relay: n4 };
        this.pending.set(i3, a2);
        const o3 = await this.rpcSubscribe(i3, n4);
        return this.onSubscribe(o3, a2), this.logger.debug("Successfully Subscribed Topic"), this.logger.trace({ type: "method", method: "subscribe", params: { topic: i3, opts: s2 } }), o3;
      } catch (n4) {
        throw this.logger.debug("Failed to Subscribe Topic"), this.logger.error(n4), n4;
      }
    }, this.unsubscribe = async (i3, s2) => {
      await this.restartToComplete(), this.isInitialized(), typeof (s2 == null ? void 0 : s2.id) < "u" ? await this.unsubscribeById(i3, s2.id, s2) : await this.unsubscribeByTopic(i3, s2);
    }, this.isSubscribed = async (i3) => this.topics.includes(i3) ? true : await new Promise((s2, n4) => {
      const a2 = new import_time3.Watch();
      a2.start(this.pendingSubscriptionWatchLabel);
      const o3 = setInterval(() => {
        !this.pending.has(i3) && this.topics.includes(i3) && (clearInterval(o3), a2.stop(this.pendingSubscriptionWatchLabel), s2(true)), a2.elapsed(this.pendingSubscriptionWatchLabel) >= Dt3 && (clearInterval(o3), a2.stop(this.pendingSubscriptionWatchLabel), n4(new Error("Subscription resolution timeout")));
      }, this.pollingInterval);
    }).catch(() => false), this.on = (i3, s2) => {
      this.events.on(i3, s2);
    }, this.once = (i3, s2) => {
      this.events.once(i3, s2);
    }, this.off = (i3, s2) => {
      this.events.off(i3, s2);
    }, this.removeListener = (i3, s2) => {
      this.events.removeListener(i3, s2);
    }, this.restart = async () => {
      this.restartInProgress = true, await this.restore(), await this.reset(), this.restartInProgress = false;
    }, this.relayer = e2, this.logger = E2(t, this.name), this.clientId = "";
  }
  get context() {
    return y3(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  get length() {
    return this.subscriptions.size;
  }
  get ids() {
    return Array.from(this.subscriptions.keys());
  }
  get values() {
    return Array.from(this.subscriptions.values());
  }
  get topics() {
    return this.topicMap.topics;
  }
  hasSubscription(e2, t) {
    let i3 = false;
    try {
      i3 = this.getSubscription(e2).topic === t;
    } catch {
    }
    return i3;
  }
  onEnable() {
    this.cached = [], this.initialized = true;
  }
  onDisable() {
    this.cached = this.values, this.subscriptions.clear(), this.topicMap.clear();
  }
  async unsubscribeByTopic(e2, t) {
    const i3 = this.topicMap.get(e2);
    await Promise.all(i3.map(async (s2) => await this.unsubscribeById(e2, s2, t)));
  }
  async unsubscribeById(e2, t, i3) {
    this.logger.debug("Unsubscribing Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e2, id: t, opts: i3 } });
    try {
      const s2 = at(i3);
      await this.rpcUnsubscribe(e2, t, s2);
      const n4 = A("USER_DISCONNECTED", `${this.name}, ${e2}`);
      await this.onUnsubscribe(e2, t, n4), this.logger.debug("Successfully Unsubscribed Topic"), this.logger.trace({ type: "method", method: "unsubscribe", params: { topic: e2, id: t, opts: i3 } });
    } catch (s2) {
      throw this.logger.debug("Failed to Unsubscribe Topic"), this.logger.error(s2), s2;
    }
  }
  async rpcSubscribe(e2, t) {
    const i3 = { method: ut(t.protocol).subscribe, params: { topic: e2 } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i3 });
    try {
      await await et(this.relayer.request(i3), this.subscribeTimeout);
    } catch {
      this.logger.debug("Outgoing Relay Subscribe Payload stalled"), this.relayer.events.emit(g3.connection_stalled);
    }
    return $n(e2 + this.clientId);
  }
  async rpcBatchSubscribe(e2) {
    if (!e2.length) return;
    const t = e2[0].relay, i3 = { method: ut(t.protocol).batchSubscribe, params: { topics: e2.map((s2) => s2.topic) } };
    this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: i3 });
    try {
      return await await et(this.relayer.request(i3), this.subscribeTimeout);
    } catch {
      this.logger.debug("Outgoing Relay Payload stalled"), this.relayer.events.emit(g3.connection_stalled);
    }
  }
  rpcUnsubscribe(e2, t, i3) {
    const s2 = { method: ut(i3.protocol).unsubscribe, params: { topic: e2, id: t } };
    return this.logger.debug("Outgoing Relay Payload"), this.logger.trace({ type: "payload", direction: "outgoing", request: s2 }), this.relayer.request(s2);
  }
  onSubscribe(e2, t) {
    this.setSubscription(e2, pe3(K3({}, t), { id: e2 })), this.pending.delete(t.topic);
  }
  onBatchSubscribe(e2) {
    e2.length && e2.forEach((t) => {
      this.setSubscription(t.id, K3({}, t)), this.pending.delete(t.topic);
    });
  }
  async onUnsubscribe(e2, t, i3) {
    this.events.removeAllListeners(t), this.hasSubscription(t, e2) && this.deleteSubscription(t, i3), await this.relayer.messages.del(e2);
  }
  async setRelayerSubscriptions(e2) {
    await this.relayer.core.storage.setItem(this.storageKey, e2);
  }
  async getRelayerSubscriptions() {
    return await this.relayer.core.storage.getItem(this.storageKey);
  }
  setSubscription(e2, t) {
    this.subscriptions.has(e2) || (this.logger.debug("Setting subscription"), this.logger.trace({ type: "method", method: "setSubscription", id: e2, subscription: t }), this.addSubscription(e2, t));
  }
  addSubscription(e2, t) {
    this.subscriptions.set(e2, K3({}, t)), this.topicMap.set(t.topic, e2), this.events.emit(C3.created, t);
  }
  getSubscription(e2) {
    this.logger.debug("Getting subscription"), this.logger.trace({ type: "method", method: "getSubscription", id: e2 });
    const t = this.subscriptions.get(e2);
    if (!t) {
      const { message: i3 } = N("NO_MATCHING_KEY", `${this.name}: ${e2}`);
      throw new Error(i3);
    }
    return t;
  }
  deleteSubscription(e2, t) {
    this.logger.debug("Deleting subscription"), this.logger.trace({ type: "method", method: "deleteSubscription", id: e2, reason: t });
    const i3 = this.getSubscription(e2);
    this.subscriptions.delete(e2), this.topicMap.delete(i3.topic, e2), this.events.emit(C3.deleted, pe3(K3({}, i3), { reason: t }));
  }
  async persist() {
    await this.setRelayerSubscriptions(this.values), this.events.emit(C3.sync);
  }
  async reset() {
    if (this.cached.length) {
      const e2 = Math.ceil(this.cached.length / this.batchSubscribeTopicsLimit);
      for (let t = 0; t < e2; t++) {
        const i3 = this.cached.splice(0, this.batchSubscribeTopicsLimit);
        await this.batchSubscribe(i3);
      }
    }
    this.events.emit(C3.resubscribed);
  }
  async restore() {
    try {
      const e2 = await this.getRelayerSubscriptions();
      if (typeof e2 > "u" || !e2.length) return;
      if (this.subscriptions.size) {
        const { message: t } = N("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), this.logger.error(`${this.name}: ${JSON.stringify(this.values)}`), new Error(t);
      }
      this.cached = e2, this.logger.debug(`Successfully Restored subscriptions for ${this.name}`), this.logger.trace({ type: "method", method: "restore", subscriptions: this.values });
    } catch (e2) {
      this.logger.debug(`Failed to Restore subscriptions for ${this.name}`), this.logger.error(e2);
    }
  }
  async batchSubscribe(e2) {
    if (!e2.length) return;
    const t = await this.rpcBatchSubscribe(e2);
    C2(t) && this.onBatchSubscribe(t.map((i3, s2) => pe3(K3({}, e2[s2]), { id: i3 })));
  }
  async onConnect() {
    this.restartInProgress || (await this.restart(), this.onEnable());
  }
  onDisconnect() {
    this.onDisable();
  }
  async checkPending() {
    if (this.relayer.transportExplicitlyClosed) return;
    const e2 = [];
    this.pending.forEach((t) => {
      e2.push(t);
    }), await this.batchSubscribe(e2);
  }
  registerEventListeners() {
    this.relayer.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, async () => {
      await this.checkPending();
    }), this.relayer.on(g3.connect, async () => {
      await this.onConnect();
    }), this.relayer.on(g3.disconnect, () => {
      this.onDisconnect();
    }), this.events.on(C3.created, async (e2) => {
      const t = C3.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e2 }), await this.persist();
    }), this.events.on(C3.deleted, async (e2) => {
      const t = C3.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e2 }), await this.persist();
    });
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = N("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
  async restartToComplete() {
    this.restartInProgress && await new Promise((e2) => {
      const t = setInterval(() => {
        this.restartInProgress || (clearInterval(t), e2());
      }, this.pollingInterval);
    });
  }
};
var mr2 = Object.defineProperty;
var St3 = Object.getOwnPropertySymbols;
var Er2 = Object.prototype.hasOwnProperty;
var fr2 = Object.prototype.propertyIsEnumerable;
var Pt3 = (r2, e2, t) => e2 in r2 ? mr2(r2, e2, { enumerable: true, configurable: true, writable: true, value: t }) : r2[e2] = t;
var wr2 = (r2, e2) => {
  for (var t in e2 || (e2 = {})) Er2.call(e2, t) && Pt3(r2, t, e2[t]);
  if (St3) for (var t of St3(e2)) fr2.call(e2, t) && Pt3(r2, t, e2[t]);
  return r2;
};
var Ot2 = class extends g2 {
  constructor(e2) {
    super(e2), this.protocol = "wc", this.version = 2, this.events = new import_events5.EventEmitter(), this.name = at2, this.transportExplicitlyClosed = false, this.initialized = false, this.reconnecting = false, this.connectionStatusPollingInterval = 20, this.staleConnectionErrors = ["socket hang up", "socket stalled"], this.request = async (t) => {
      this.logger.debug("Publishing Request Payload");
      try {
        return await this.toEstablishConnection(), await this.provider.request(t);
      } catch (i3) {
        throw this.logger.debug("Failed to Publish Request"), this.logger.error(i3), i3;
      }
    }, this.core = e2.core, this.logger = typeof e2.logger < "u" && typeof e2.logger != "string" ? E2(e2.logger, this.name) : (0, import_pino2.default)(k2({ level: e2.logger || nt3 })), this.messages = new Ct2(this.logger, e2.core), this.subscriber = new Tt3(this, this.logger), this.publisher = new lr2(this, this.logger), this.relayUrl = (e2 == null ? void 0 : e2.relayUrl) || le3, this.projectId = e2.projectId, this.provider = {};
  }
  async init() {
    this.logger.trace("Initialized"), await this.createProvider(), await Promise.all([this.messages.init(), this.subscriber.init()]);
    try {
      await this.transportOpen();
    } catch {
      this.logger.warn(`Connection via ${this.relayUrl} failed, attempting to connect via failover domain ${de2}...`), await this.restartTransport(de2);
    }
    this.registerEventListeners(), this.initialized = true, setTimeout(async () => {
      this.subscriber.topics.length === 0 && (this.logger.info("No topics subscribed to after init, closing transport"), await this.transportClose(), this.transportExplicitlyClosed = false);
    }, ut3);
  }
  get context() {
    return y3(this.logger);
  }
  get connected() {
    return this.provider.connection.connected;
  }
  get connecting() {
    return this.provider.connection.connecting;
  }
  async publish(e2, t, i3) {
    this.isInitialized(), await this.publisher.publish(e2, t, i3), await this.recordMessageEvent({ topic: e2, message: t, publishedAt: Date.now() });
  }
  async subscribe(e2, t) {
    var i3;
    this.isInitialized();
    let s2 = ((i3 = this.subscriber.topicMap.get(e2)) == null ? void 0 : i3[0]) || "";
    return s2 || (await Promise.all([new Promise((n4) => {
      this.subscriber.once(C3.created, (a2) => {
        a2.topic === e2 && n4();
      });
    }), new Promise(async (n4) => {
      s2 = await this.subscriber.subscribe(e2, t), n4();
    })]), s2);
  }
  async unsubscribe(e2, t) {
    this.isInitialized(), await this.subscriber.unsubscribe(e2, t);
  }
  on(e2, t) {
    this.events.on(e2, t);
  }
  once(e2, t) {
    this.events.once(e2, t);
  }
  off(e2, t) {
    this.events.off(e2, t);
  }
  removeListener(e2, t) {
    this.events.removeListener(e2, t);
  }
  async transportClose() {
    this.transportExplicitlyClosed = true, this.connected && (await this.provider.disconnect(), this.events.emit(g3.transport_closed));
  }
  async transportOpen(e2) {
    if (this.transportExplicitlyClosed = false, !this.reconnecting) {
      this.relayUrl = e2 || this.relayUrl, this.reconnecting = true;
      try {
        await Promise.all([new Promise((t) => {
          this.initialized || t(), this.subscriber.once(C3.resubscribed, () => {
            t();
          });
        }), await Promise.race([new Promise(async (t, i3) => {
          await et(this.provider.connect(), 1e4, `Socket stalled when trying to connect to ${this.relayUrl}`).catch((s2) => i3(s2)).then(() => t()).finally(() => this.removeListener(g3.transport_closed, this.rejectTransportOpen));
        }), new Promise((t) => this.once(g3.transport_closed, this.rejectTransportOpen))])]);
      } catch (t) {
        this.logger.error(t);
        const i3 = t;
        if (!this.isConnectionStalled(i3.message)) throw t;
        this.events.emit(g3.transport_closed);
      } finally {
        this.reconnecting = false;
      }
    }
  }
  async restartTransport(e2) {
    this.transportExplicitlyClosed || this.reconnecting || (this.relayUrl = e2 || this.relayUrl, this.connected && await Promise.all([new Promise((t) => {
      this.provider.once(L2.disconnect, () => {
        t();
      });
    }), this.transportClose()]), await this.createProvider(), await this.transportOpen());
  }
  isConnectionStalled(e2) {
    return this.staleConnectionErrors.some((t) => e2.includes(t));
  }
  rejectTransportOpen() {
    throw new Error("Attempt to connect to relay via `transportOpen` has stalled. Retrying...");
  }
  async createProvider() {
    const e2 = await this.core.crypto.signJWT(this.relayUrl);
    this.provider = new JsonRpcProvider(new esm_default(qn({ sdkVersion: ct3, protocol: this.protocol, version: this.version, relayUrl: this.relayUrl, projectId: this.projectId, auth: e2, useOnCloseEvent: true }))), this.registerProviderListeners();
  }
  async recordMessageEvent(e2) {
    const { topic: t, message: i3 } = e2;
    await this.messages.set(t, i3);
  }
  async shouldIgnoreMessageEvent(e2) {
    const { topic: t, message: i3 } = e2;
    if (!i3 || i3.length === 0) return this.logger.debug(`Ignoring invalid/empty message: ${i3}`), true;
    if (!await this.subscriber.isSubscribed(t)) return this.logger.debug(`Ignoring message for non-subscribed topic ${t}`), true;
    const s2 = this.messages.has(t, i3);
    return s2 && this.logger.debug(`Ignoring duplicate message: ${i3}`), s2;
  }
  async onProviderPayload(e2) {
    if (this.logger.debug("Incoming Relay Payload"), this.logger.trace({ type: "payload", direction: "incoming", payload: e2 }), isJsonRpcRequest(e2)) {
      if (!e2.method.endsWith(ot2)) return;
      const t = e2.params, { topic: i3, message: s2, publishedAt: n4 } = t.data, a2 = { topic: i3, message: s2, publishedAt: n4 };
      this.logger.debug("Emitting Relayer Payload"), this.logger.trace(wr2({ type: "event", event: t.id }, a2)), this.events.emit(t.id, a2), await this.acknowledgePayload(e2), await this.onMessageEvent(a2);
    } else isJsonRpcResponse(e2) && this.events.emit(g3.message_ack, e2);
  }
  async onMessageEvent(e2) {
    await this.shouldIgnoreMessageEvent(e2) || (this.events.emit(g3.message, e2), await this.recordMessageEvent(e2));
  }
  async acknowledgePayload(e2) {
    const t = formatJsonRpcResult(e2.id, true);
    await this.provider.connection.send(t);
  }
  registerProviderListeners() {
    this.provider.on(L2.payload, (e2) => this.onProviderPayload(e2)), this.provider.on(L2.connect, () => {
      this.events.emit(g3.connect);
    }), this.provider.on(L2.disconnect, () => {
      this.onProviderDisconnect();
    }), this.provider.on(L2.error, (e2) => {
      this.logger.error(e2), this.events.emit(g3.error, e2);
    });
  }
  registerEventListeners() {
    this.events.on(g3.connection_stalled, async () => {
      await this.restartTransport();
    });
  }
  onProviderDisconnect() {
    this.events.emit(g3.disconnect), this.attemptToReconnect();
  }
  attemptToReconnect() {
    this.transportExplicitlyClosed || setTimeout(async () => {
      await this.restartTransport();
    }, (0, import_time3.toMiliseconds)(ht2));
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = N("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
  async toEstablishConnection() {
    if (!this.connected) {
      if (this.connecting) return await new Promise((e2) => {
        const t = setInterval(() => {
          this.connected && (clearInterval(t), e2());
        }, this.connectionStatusPollingInterval);
      });
      await this.restartTransport();
    }
  }
};
var vr2 = Object.defineProperty;
var xt3 = Object.getOwnPropertySymbols;
var Ir2 = Object.prototype.hasOwnProperty;
var Cr2 = Object.prototype.propertyIsEnumerable;
var At2 = (r2, e2, t) => e2 in r2 ? vr2(r2, e2, { enumerable: true, configurable: true, writable: true, value: t }) : r2[e2] = t;
var zt2 = (r2, e2) => {
  for (var t in e2 || (e2 = {})) Ir2.call(e2, t) && At2(r2, t, e2[t]);
  if (xt3) for (var t of xt3(e2)) Cr2.call(e2, t) && At2(r2, t, e2[t]);
  return r2;
};
var Nt2 = class extends p3 {
  constructor(e2, t, i3, s2 = O3, n4 = void 0) {
    super(e2, t, i3, s2), this.core = e2, this.logger = t, this.name = i3, this.map = /* @__PURE__ */ new Map(), this.version = lt2, this.cached = [], this.initialized = false, this.storagePrefix = O3, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((a2) => {
        this.getKey && a2 !== null && !I(a2) ? this.map.set(this.getKey(a2), a2) : At(a2) ? this.map.set(a2.id, a2) : Ut(a2) && this.map.set(a2.topic, a2);
      }), this.cached = [], this.initialized = true);
    }, this.set = async (a2, o3) => {
      this.isInitialized(), this.map.has(a2) ? await this.update(a2, o3) : (this.logger.debug("Setting value"), this.logger.trace({ type: "method", method: "set", key: a2, value: o3 }), this.map.set(a2, o3), await this.persist());
    }, this.get = (a2) => (this.isInitialized(), this.logger.debug("Getting value"), this.logger.trace({ type: "method", method: "get", key: a2 }), this.getData(a2)), this.getAll = (a2) => (this.isInitialized(), a2 ? this.values.filter((o3) => Object.keys(a2).every((h4) => (0, import_lodash.default)(o3[h4], a2[h4]))) : this.values), this.update = async (a2, o3) => {
      this.isInitialized(), this.logger.debug("Updating value"), this.logger.trace({ type: "method", method: "update", key: a2, update: o3 });
      const h4 = zt2(zt2({}, this.getData(a2)), o3);
      this.map.set(a2, h4), await this.persist();
    }, this.delete = async (a2, o3) => {
      this.isInitialized(), this.map.has(a2) && (this.logger.debug("Deleting value"), this.logger.trace({ type: "method", method: "delete", key: a2, reason: o3 }), this.map.delete(a2), await this.persist());
    }, this.logger = E2(t, this.name), this.storagePrefix = s2, this.getKey = n4;
  }
  get context() {
    return y3(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  get length() {
    return this.map.size;
  }
  get keys() {
    return Array.from(this.map.keys());
  }
  get values() {
    return Array.from(this.map.values());
  }
  async setDataStore(e2) {
    await this.core.storage.setItem(this.storageKey, e2);
  }
  async getDataStore() {
    return await this.core.storage.getItem(this.storageKey);
  }
  getData(e2) {
    const t = this.map.get(e2);
    if (!t) {
      const { message: i3 } = N("NO_MATCHING_KEY", `${this.name}: ${e2}`);
      throw this.logger.error(i3), new Error(i3);
    }
    return t;
  }
  async persist() {
    await this.setDataStore(this.values);
  }
  async restore() {
    try {
      const e2 = await this.getDataStore();
      if (typeof e2 > "u" || !e2.length) return;
      if (this.map.size) {
        const { message: t } = N("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e2, this.logger.debug(`Successfully Restored value for ${this.name}`), this.logger.trace({ type: "method", method: "restore", value: this.values });
    } catch (e2) {
      this.logger.debug(`Failed to Restore value for ${this.name}`), this.logger.error(e2);
    }
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = N("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var Ut3 = class {
  constructor(e2, t) {
    this.core = e2, this.logger = t, this.name = yt3, this.version = bt2, this.events = new import_events5.default(), this.initialized = false, this.storagePrefix = O3, this.ignoredPayloadTypes = [U], this.registeredMethods = [], this.init = async () => {
      this.initialized || (await this.pairings.init(), await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.initialized = true, this.logger.trace("Initialized"));
    }, this.register = ({ methods: i3 }) => {
      this.isInitialized(), this.registeredMethods = [.../* @__PURE__ */ new Set([...this.registeredMethods, ...i3])];
    }, this.create = async () => {
      this.isInitialized();
      const i3 = An(), s2 = await this.core.crypto.setSymKey(i3), n4 = ot(import_time3.FIVE_MINUTES), a2 = { protocol: rt3 }, o3 = { topic: s2, expiry: n4, relay: a2, active: false }, h4 = yt({ protocol: this.core.protocol, version: this.core.version, topic: s2, symKey: i3, relay: a2 });
      return await this.pairings.set(s2, o3), await this.core.relayer.subscribe(s2), this.core.expirer.set(s2, n4), { topic: s2, uri: h4 };
    }, this.pair = async (i3) => {
      this.isInitialized(), this.isValidPair(i3);
      const { topic: s2, symKey: n4, relay: a2 } = mt(i3.uri);
      if (this.pairings.keys.includes(s2)) throw new Error(`Pairing already exists: ${s2}`);
      if (this.core.crypto.hasKeys(s2)) throw new Error(`Keychain already exists: ${s2}`);
      const o3 = ot(import_time3.FIVE_MINUTES), h4 = { topic: s2, relay: a2, expiry: o3, active: false };
      return await this.pairings.set(s2, h4), await this.core.crypto.setSymKey(n4, s2), await this.core.relayer.subscribe(s2, { relay: a2 }), this.core.expirer.set(s2, o3), i3.activatePairing && await this.activate({ topic: s2 }), h4;
    }, this.activate = async ({ topic: i3 }) => {
      this.isInitialized();
      const s2 = ot(import_time3.THIRTY_DAYS);
      await this.pairings.update(i3, { active: true, expiry: s2 }), this.core.expirer.set(i3, s2);
    }, this.ping = async (i3) => {
      this.isInitialized(), await this.isValidPing(i3);
      const { topic: s2 } = i3;
      if (this.pairings.keys.includes(s2)) {
        const n4 = await this.sendRequest(s2, "wc_pairingPing", {}), { done: a2, resolve: o3, reject: h4 } = Xn();
        this.events.once(it("pairing_ping", n4), ({ error: l4 }) => {
          l4 ? h4(l4) : o3();
        }), await a2();
      }
    }, this.updateExpiry = async ({ topic: i3, expiry: s2 }) => {
      this.isInitialized(), await this.pairings.update(i3, { expiry: s2 });
    }, this.updateMetadata = async ({ topic: i3, metadata: s2 }) => {
      this.isInitialized(), await this.pairings.update(i3, { peerMetadata: s2 });
    }, this.getPairings = () => (this.isInitialized(), this.pairings.values), this.disconnect = async (i3) => {
      this.isInitialized(), await this.isValidDisconnect(i3);
      const { topic: s2 } = i3;
      this.pairings.keys.includes(s2) && (await this.sendRequest(s2, "wc_pairingDelete", A("USER_DISCONNECTED")), await this.deletePairing(s2));
    }, this.sendRequest = async (i3, s2, n4) => {
      const a2 = formatJsonRpcRequest(s2, n4), o3 = await this.core.crypto.encode(i3, a2), h4 = $2[s2].req;
      return this.core.history.set(i3, a2), this.core.relayer.publish(i3, o3, h4), a2.id;
    }, this.sendResult = async (i3, s2, n4) => {
      const a2 = formatJsonRpcResult(i3, n4), o3 = await this.core.crypto.encode(s2, a2), h4 = await this.core.history.get(s2, i3), l4 = $2[h4.request.method].res;
      await this.core.relayer.publish(s2, o3, l4), await this.core.history.resolve(a2);
    }, this.sendError = async (i3, s2, n4) => {
      const a2 = formatJsonRpcError(i3, n4), o3 = await this.core.crypto.encode(s2, a2), h4 = await this.core.history.get(s2, i3), l4 = $2[h4.request.method] ? $2[h4.request.method].res : $2.unregistered_method.res;
      await this.core.relayer.publish(s2, o3, l4), await this.core.history.resolve(a2);
    }, this.deletePairing = async (i3, s2) => {
      await this.core.relayer.unsubscribe(i3), await Promise.all([this.pairings.delete(i3, A("USER_DISCONNECTED")), this.core.crypto.deleteSymKey(i3), s2 ? Promise.resolve() : this.core.expirer.del(i3)]);
    }, this.cleanup = async () => {
      const i3 = this.pairings.getAll().filter((s2) => st(s2.expiry));
      await Promise.all(i3.map((s2) => this.deletePairing(s2.topic)));
    }, this.onRelayEventRequest = (i3) => {
      const { topic: s2, payload: n4 } = i3;
      switch (n4.method) {
        case "wc_pairingPing":
          return this.onPairingPingRequest(s2, n4);
        case "wc_pairingDelete":
          return this.onPairingDeleteRequest(s2, n4);
        default:
          return this.onUnknownRpcMethodRequest(s2, n4);
      }
    }, this.onRelayEventResponse = async (i3) => {
      const { topic: s2, payload: n4 } = i3, a2 = (await this.core.history.get(s2, n4.id)).request.method;
      switch (a2) {
        case "wc_pairingPing":
          return this.onPairingPingResponse(s2, n4);
        default:
          return this.onUnknownRpcMethodResponse(a2);
      }
    }, this.onPairingPingRequest = async (i3, s2) => {
      const { id: n4 } = s2;
      try {
        this.isValidPing({ topic: i3 }), await this.sendResult(n4, i3, true), this.events.emit("pairing_ping", { id: n4, topic: i3 });
      } catch (a2) {
        await this.sendError(n4, i3, a2), this.logger.error(a2);
      }
    }, this.onPairingPingResponse = (i3, s2) => {
      const { id: n4 } = s2;
      setTimeout(() => {
        isJsonRpcResult(s2) ? this.events.emit(it("pairing_ping", n4), {}) : isJsonRpcError(s2) && this.events.emit(it("pairing_ping", n4), { error: s2.error });
      }, 500);
    }, this.onPairingDeleteRequest = async (i3, s2) => {
      const { id: n4 } = s2;
      try {
        this.isValidDisconnect({ topic: i3 }), await this.deletePairing(i3), this.events.emit("pairing_delete", { id: n4, topic: i3 });
      } catch (a2) {
        await this.sendError(n4, i3, a2), this.logger.error(a2);
      }
    }, this.onUnknownRpcMethodRequest = async (i3, s2) => {
      const { id: n4, method: a2 } = s2;
      try {
        if (this.registeredMethods.includes(a2)) return;
        const o3 = A("WC_METHOD_UNSUPPORTED", a2);
        await this.sendError(n4, i3, o3), this.logger.error(o3);
      } catch (o3) {
        await this.sendError(n4, i3, o3), this.logger.error(o3);
      }
    }, this.onUnknownRpcMethodResponse = (i3) => {
      this.registeredMethods.includes(i3) || this.logger.error(A("WC_METHOD_UNSUPPORTED", i3));
    }, this.isValidPair = (i3) => {
      if (!Dt(i3)) {
        const { message: s2 } = N("MISSING_OR_INVALID", `pair() params: ${i3}`);
        throw new Error(s2);
      }
      if (!Rt(i3.uri)) {
        const { message: s2 } = N("MISSING_OR_INVALID", `pair() uri: ${i3.uri}`);
        throw new Error(s2);
      }
    }, this.isValidPing = async (i3) => {
      if (!Dt(i3)) {
        const { message: n4 } = N("MISSING_OR_INVALID", `ping() params: ${i3}`);
        throw new Error(n4);
      }
      const { topic: s2 } = i3;
      await this.isValidPairingTopic(s2);
    }, this.isValidDisconnect = async (i3) => {
      if (!Dt(i3)) {
        const { message: n4 } = N("MISSING_OR_INVALID", `disconnect() params: ${i3}`);
        throw new Error(n4);
      }
      const { topic: s2 } = i3;
      await this.isValidPairingTopic(s2);
    }, this.isValidPairingTopic = async (i3) => {
      if (!y(i3, false)) {
        const { message: s2 } = N("MISSING_OR_INVALID", `pairing topic should be a string: ${i3}`);
        throw new Error(s2);
      }
      if (!this.pairings.keys.includes(i3)) {
        const { message: s2 } = N("NO_MATCHING_KEY", `pairing topic doesn't exist: ${i3}`);
        throw new Error(s2);
      }
      if (st(this.pairings.get(i3).expiry)) {
        await this.deletePairing(i3);
        const { message: s2 } = N("EXPIRED", `pairing topic: ${i3}`);
        throw new Error(s2);
      }
    }, this.core = e2, this.logger = E2(t, this.name), this.pairings = new Nt2(this.core, this.logger, this.name, this.storagePrefix);
  }
  get context() {
    return y3(this.logger);
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = N("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
  registerRelayerEvents() {
    this.core.relayer.on(g3.message, async (e2) => {
      const { topic: t, message: i3 } = e2;
      if (!this.pairings.keys.includes(t) || this.ignoredPayloadTypes.includes(this.core.crypto.getPayloadType(i3))) return;
      const s2 = await this.core.crypto.decode(t, i3);
      isJsonRpcRequest(s2) ? (this.core.history.set(t, s2), this.onRelayEventRequest({ topic: t, payload: s2 })) : isJsonRpcResponse(s2) && (await this.core.history.resolve(s2), await this.onRelayEventResponse({ topic: t, payload: s2 }), this.core.history.delete(t, s2.id));
    });
  }
  registerExpirerEvents() {
    this.core.expirer.on(w2.expired, async (e2) => {
      const { topic: t } = rt(e2.target);
      t && this.pairings.keys.includes(t) && (await this.deletePairing(t, true), this.events.emit("pairing_expire", { topic: t }));
    });
  }
};
var Lt3 = class extends h3 {
  constructor(e2, t) {
    super(e2, t), this.core = e2, this.logger = t, this.records = /* @__PURE__ */ new Map(), this.events = new import_events5.EventEmitter(), this.name = mt2, this.version = Et2, this.cached = [], this.initialized = false, this.storagePrefix = O3, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((i3) => this.records.set(i3.id, i3)), this.cached = [], this.registerEventListeners(), this.initialized = true);
    }, this.set = (i3, s2, n4) => {
      if (this.isInitialized(), this.logger.debug("Setting JSON-RPC request history record"), this.logger.trace({ type: "method", method: "set", topic: i3, request: s2, chainId: n4 }), this.records.has(s2.id)) return;
      const a2 = { id: s2.id, topic: i3, request: { method: s2.method, params: s2.params || null }, chainId: n4, expiry: ot(import_time3.THIRTY_DAYS) };
      this.records.set(a2.id, a2), this.events.emit(_3.created, a2);
    }, this.resolve = async (i3) => {
      if (this.isInitialized(), this.logger.debug("Updating JSON-RPC response history record"), this.logger.trace({ type: "method", method: "update", response: i3 }), !this.records.has(i3.id)) return;
      const s2 = await this.getRecord(i3.id);
      typeof s2.response > "u" && (s2.response = isJsonRpcError(i3) ? { error: i3.error } : { result: i3.result }, this.records.set(s2.id, s2), this.events.emit(_3.updated, s2));
    }, this.get = async (i3, s2) => (this.isInitialized(), this.logger.debug("Getting record"), this.logger.trace({ type: "method", method: "get", topic: i3, id: s2 }), await this.getRecord(s2)), this.delete = (i3, s2) => {
      this.isInitialized(), this.logger.debug("Deleting record"), this.logger.trace({ type: "method", method: "delete", id: s2 }), this.values.forEach((n4) => {
        if (n4.topic === i3) {
          if (typeof s2 < "u" && n4.id !== s2) return;
          this.records.delete(n4.id), this.events.emit(_3.deleted, n4);
        }
      });
    }, this.exists = async (i3, s2) => (this.isInitialized(), this.records.has(s2) ? (await this.getRecord(s2)).topic === i3 : false), this.on = (i3, s2) => {
      this.events.on(i3, s2);
    }, this.once = (i3, s2) => {
      this.events.once(i3, s2);
    }, this.off = (i3, s2) => {
      this.events.off(i3, s2);
    }, this.removeListener = (i3, s2) => {
      this.events.removeListener(i3, s2);
    }, this.logger = E2(t, this.name);
  }
  get context() {
    return y3(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  get size() {
    return this.records.size;
  }
  get keys() {
    return Array.from(this.records.keys());
  }
  get values() {
    return Array.from(this.records.values());
  }
  get pending() {
    const e2 = [];
    return this.values.forEach((t) => {
      if (typeof t.response < "u") return;
      const i3 = { topic: t.topic, request: formatJsonRpcRequest(t.request.method, t.request.params, t.id), chainId: t.chainId };
      return e2.push(i3);
    }), e2;
  }
  async setJsonRpcRecords(e2) {
    await this.core.storage.setItem(this.storageKey, e2);
  }
  async getJsonRpcRecords() {
    return await this.core.storage.getItem(this.storageKey);
  }
  getRecord(e2) {
    this.isInitialized();
    const t = this.records.get(e2);
    if (!t) {
      const { message: i3 } = N("NO_MATCHING_KEY", `${this.name}: ${e2}`);
      throw new Error(i3);
    }
    return t;
  }
  async persist() {
    await this.setJsonRpcRecords(this.values), this.events.emit(_3.sync);
  }
  async restore() {
    try {
      const e2 = await this.getJsonRpcRecords();
      if (typeof e2 > "u" || !e2.length) return;
      if (this.records.size) {
        const { message: t } = N("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e2, this.logger.debug(`Successfully Restored records for ${this.name}`), this.logger.trace({ type: "method", method: "restore", records: this.values });
    } catch (e2) {
      this.logger.debug(`Failed to Restore records for ${this.name}`), this.logger.error(e2);
    }
  }
  registerEventListeners() {
    this.events.on(_3.created, (e2) => {
      const t = _3.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e2 }), this.persist();
    }), this.events.on(_3.updated, (e2) => {
      const t = _3.updated;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e2 }), this.persist();
    }), this.events.on(_3.deleted, (e2) => {
      const t = _3.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, record: e2 }), this.persist();
    }), this.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, () => {
      this.cleanup();
    });
  }
  cleanup() {
    try {
      this.records.forEach((e2) => {
        (0, import_time3.toMiliseconds)(e2.expiry || 0) - Date.now() <= 0 && (this.logger.info(`Deleting expired history log: ${e2.id}`), this.delete(e2.topic, e2.id));
      });
    } catch (e2) {
      this.logger.warn(e2);
    }
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = N("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var $t3 = class extends E3 {
  constructor(e2, t) {
    super(e2, t), this.core = e2, this.logger = t, this.expirations = /* @__PURE__ */ new Map(), this.events = new import_events5.EventEmitter(), this.name = ft3, this.version = wt3, this.cached = [], this.initialized = false, this.storagePrefix = O3, this.init = async () => {
      this.initialized || (this.logger.trace("Initialized"), await this.restore(), this.cached.forEach((i3) => this.expirations.set(i3.target, i3)), this.cached = [], this.registerEventListeners(), this.initialized = true);
    }, this.has = (i3) => {
      try {
        const s2 = this.formatTarget(i3);
        return typeof this.getExpiration(s2) < "u";
      } catch {
        return false;
      }
    }, this.set = (i3, s2) => {
      this.isInitialized();
      const n4 = this.formatTarget(i3), a2 = { target: n4, expiry: s2 };
      this.expirations.set(n4, a2), this.checkExpiry(n4, a2), this.events.emit(w2.created, { target: n4, expiration: a2 });
    }, this.get = (i3) => {
      this.isInitialized();
      const s2 = this.formatTarget(i3);
      return this.getExpiration(s2);
    }, this.del = (i3) => {
      if (this.isInitialized(), this.has(i3)) {
        const s2 = this.formatTarget(i3), n4 = this.getExpiration(s2);
        this.expirations.delete(s2), this.events.emit(w2.deleted, { target: s2, expiration: n4 });
      }
    }, this.on = (i3, s2) => {
      this.events.on(i3, s2);
    }, this.once = (i3, s2) => {
      this.events.once(i3, s2);
    }, this.off = (i3, s2) => {
      this.events.off(i3, s2);
    }, this.removeListener = (i3, s2) => {
      this.events.removeListener(i3, s2);
    }, this.logger = E2(t, this.name);
  }
  get context() {
    return y3(this.logger);
  }
  get storageKey() {
    return this.storagePrefix + this.version + "//" + this.name;
  }
  get length() {
    return this.expirations.size;
  }
  get keys() {
    return Array.from(this.expirations.keys());
  }
  get values() {
    return Array.from(this.expirations.values());
  }
  formatTarget(e2) {
    if (typeof e2 == "string") return nt(e2);
    if (typeof e2 == "number") return tt(e2);
    const { message: t } = N("UNKNOWN_TYPE", `Target type: ${typeof e2}`);
    throw new Error(t);
  }
  async setExpirations(e2) {
    await this.core.storage.setItem(this.storageKey, e2);
  }
  async getExpirations() {
    return await this.core.storage.getItem(this.storageKey);
  }
  async persist() {
    await this.setExpirations(this.values), this.events.emit(w2.sync);
  }
  async restore() {
    try {
      const e2 = await this.getExpirations();
      if (typeof e2 > "u" || !e2.length) return;
      if (this.expirations.size) {
        const { message: t } = N("RESTORE_WILL_OVERRIDE", this.name);
        throw this.logger.error(t), new Error(t);
      }
      this.cached = e2, this.logger.debug(`Successfully Restored expirations for ${this.name}`), this.logger.trace({ type: "method", method: "restore", expirations: this.values });
    } catch (e2) {
      this.logger.debug(`Failed to Restore expirations for ${this.name}`), this.logger.error(e2);
    }
  }
  getExpiration(e2) {
    const t = this.expirations.get(e2);
    if (!t) {
      const { message: i3 } = N("NO_MATCHING_KEY", `${this.name}: ${e2}`);
      throw this.logger.error(i3), new Error(i3);
    }
    return t;
  }
  checkExpiry(e2, t) {
    const { expiry: i3 } = t;
    (0, import_time3.toMiliseconds)(i3) - Date.now() <= 0 && this.expire(e2, t);
  }
  expire(e2, t) {
    this.expirations.delete(e2), this.events.emit(w2.expired, { target: e2, expiration: t });
  }
  checkExpirations() {
    this.core.relayer.connected && this.expirations.forEach((e2, t) => this.checkExpiry(t, e2));
  }
  registerEventListeners() {
    this.core.heartbeat.on(import_heartbeat.HEARTBEAT_EVENTS.pulse, () => this.checkExpirations()), this.events.on(w2.created, (e2) => {
      const t = w2.created;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e2 }), this.persist();
    }), this.events.on(w2.expired, (e2) => {
      const t = w2.expired;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e2 }), this.persist();
    }), this.events.on(w2.deleted, (e2) => {
      const t = w2.deleted;
      this.logger.info(`Emitting ${t}`), this.logger.debug({ type: "event", event: t, data: e2 }), this.persist();
    });
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: e2 } = N("NOT_INITIALIZED", this.name);
      throw new Error(e2);
    }
  }
};
var Ft3 = class extends y4 {
  constructor(e2, t) {
    super(e2, t), this.projectId = e2, this.logger = t, this.name = X, this.initialized = false, this.init = async (i3) => {
      $e() || !je() || (this.verifyUrl = (i3 == null ? void 0 : i3.verifyUrl) || ge2, await this.createIframe());
    }, this.register = async (i3) => {
      var s2;
      if (this.initialized || await this.init(), !!this.iframe) try {
        (s2 = this.iframe.contentWindow) == null || s2.postMessage(i3.attestationId, this.verifyUrl), this.logger.info(`postMessage sent: ${i3.attestationId} ${this.verifyUrl}`);
      } catch {
      }
    }, this.resolve = async (i3) => {
      var s2;
      if (this.isDevEnv) return "";
      this.logger.info(`resolving attestation: ${i3.attestationId}`);
      const n4 = this.startAbortTimer(import_time3.FIVE_SECONDS), a2 = await fetch(`${this.verifyUrl}/attestation/${i3.attestationId}`, { signal: this.abortController.signal });
      return clearTimeout(n4), a2.status === 200 ? (s2 = await a2.json()) == null ? void 0 : s2.origin : "";
    }, this.createIframe = async () => {
      try {
        await Promise.race([new Promise((i3, s2) => {
          if (document.getElementById(X)) return i3();
          const n4 = document.createElement("iframe");
          n4.setAttribute("id", X), n4.setAttribute("src", `${this.verifyUrl}/${this.projectId}`), n4.style.display = "none", n4.addEventListener("load", () => {
            this.initialized = true, i3();
          }), n4.addEventListener("error", (a2) => {
            s2(a2);
          }), document.body.append(n4), this.iframe = n4;
        }), new Promise((i3) => {
          setTimeout(() => i3("iframe load timeout"), (0, import_time3.toMiliseconds)(import_time3.ONE_SECOND / 2));
        })]);
      } catch (i3) {
        this.logger.error(`Verify iframe failed to load: ${this.verifyUrl}`), this.logger.error(i3);
      }
    }, this.logger = E2(t, this.name), this.verifyUrl = ge2, this.abortController = new AbortController(), this.isDevEnv = ee() && process.env.IS_VITEST;
  }
  get context() {
    return y3(this.logger);
  }
  startAbortTimer(e2) {
    return setTimeout(() => this.abortController.abort(), (0, import_time3.toMiliseconds)(e2));
  }
};
var _r2 = Object.defineProperty;
var Mt3 = Object.getOwnPropertySymbols;
var Rr2 = Object.prototype.hasOwnProperty;
var Tr2 = Object.prototype.propertyIsEnumerable;
var Kt3 = (r2, e2, t) => e2 in r2 ? _r2(r2, e2, { enumerable: true, configurable: true, writable: true, value: t }) : r2[e2] = t;
var kt3 = (r2, e2) => {
  for (var t in e2 || (e2 = {})) Rr2.call(e2, t) && Kt3(r2, t, e2[t]);
  if (Mt3) for (var t of Mt3(e2)) Tr2.call(e2, t) && Kt3(r2, t, e2[t]);
  return r2;
};
var Z2 = class _Z extends n2 {
  constructor(e2) {
    super(e2), this.protocol = ce2, this.version = Ge3, this.name = W2, this.events = new import_events5.EventEmitter(), this.initialized = false, this.on = (i3, s2) => this.events.on(i3, s2), this.once = (i3, s2) => this.events.once(i3, s2), this.off = (i3, s2) => this.events.off(i3, s2), this.removeListener = (i3, s2) => this.events.removeListener(i3, s2), this.projectId = e2 == null ? void 0 : e2.projectId, this.relayUrl = (e2 == null ? void 0 : e2.relayUrl) || le3;
    const t = typeof (e2 == null ? void 0 : e2.logger) < "u" && typeof (e2 == null ? void 0 : e2.logger) != "string" ? e2.logger : (0, import_pino2.default)(k2({ level: (e2 == null ? void 0 : e2.logger) || Je3.logger }));
    this.logger = E2(t, this.name), this.heartbeat = new import_heartbeat.HeartBeat(), this.crypto = new It2(this, this.logger, e2 == null ? void 0 : e2.keychain), this.history = new Lt3(this, this.logger), this.expirer = new $t3(this, this.logger), this.storage = e2 != null && e2.storage ? e2.storage : new h(kt3(kt3({}, He3), e2 == null ? void 0 : e2.storageOptions)), this.relayer = new Ot2({ core: this, logger: this.logger, relayUrl: this.relayUrl, projectId: this.projectId }), this.pairing = new Ut3(this, this.logger), this.verify = new Ft3(this.projectId || "", this.logger);
  }
  static async init(e2) {
    const t = new _Z(e2);
    await t.initialize();
    const i3 = await t.crypto.getClientId();
    return await t.storage.setItem(dt3, i3), t;
  }
  get context() {
    return y3(this.logger);
  }
  async start() {
    this.initialized || await this.initialize();
  }
  async initialize() {
    this.logger.trace("Initialized");
    try {
      await this.crypto.init(), await this.history.init(), await this.expirer.init(), await this.relayer.init(), await this.heartbeat.init(), await this.pairing.init(), this.initialized = true, this.logger.info("Core Initialization Success");
    } catch (e2) {
      throw this.logger.warn(`Core Initialization Failure at epoch ${Date.now()}`, e2), this.logger.error(e2.message), e2;
    }
  }
};
var Sr2 = Z2;

// node_modules/@walletconnect/sign-client/dist/index.es.js
var import_events6 = __toESM(require_events());
var import_time4 = __toESM(require_cjs());
var Y2 = "wc";
var J4 = 2;
var X2 = "client";
var G3 = `${Y2}@${J4}:${X2}:`;
var $3 = { name: X2, logger: "error", controller: false, relayUrl: "wss://relay.walletconnect.com" };
var te3 = "WALLETCONNECT_DEEPLINK_CHOICE";
var ie2 = "proposal";
var re = "Proposal expired";
var ne3 = "session";
var A2 = import_time4.SEVEN_DAYS;
var oe3 = "engine";
var O4 = { wc_sessionPropose: { req: { ttl: import_time4.FIVE_MINUTES, prompt: true, tag: 1100 }, res: { ttl: import_time4.FIVE_MINUTES, prompt: false, tag: 1101 } }, wc_sessionSettle: { req: { ttl: import_time4.FIVE_MINUTES, prompt: false, tag: 1102 }, res: { ttl: import_time4.FIVE_MINUTES, prompt: false, tag: 1103 } }, wc_sessionUpdate: { req: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1104 }, res: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1105 } }, wc_sessionExtend: { req: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1106 }, res: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1107 } }, wc_sessionRequest: { req: { ttl: import_time4.FIVE_MINUTES, prompt: true, tag: 1108 }, res: { ttl: import_time4.FIVE_MINUTES, prompt: false, tag: 1109 } }, wc_sessionEvent: { req: { ttl: import_time4.FIVE_MINUTES, prompt: true, tag: 1110 }, res: { ttl: import_time4.FIVE_MINUTES, prompt: false, tag: 1111 } }, wc_sessionDelete: { req: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1112 }, res: { ttl: import_time4.ONE_DAY, prompt: false, tag: 1113 } }, wc_sessionPing: { req: { ttl: import_time4.THIRTY_SECONDS, prompt: false, tag: 1114 }, res: { ttl: import_time4.THIRTY_SECONDS, prompt: false, tag: 1115 } } };
var M4 = { min: import_time4.FIVE_MINUTES, max: import_time4.SEVEN_DAYS };
var V2 = { idle: "idle", active: "active" };
var ae3 = "request";
var ce3 = ["wc_sessionPropose", "wc_sessionRequest", "wc_authRequest"];
var ts2 = Object.defineProperty;
var is2 = Object.defineProperties;
var rs2 = Object.getOwnPropertyDescriptors;
var le4 = Object.getOwnPropertySymbols;
var ns2 = Object.prototype.hasOwnProperty;
var os2 = Object.prototype.propertyIsEnumerable;
var pe4 = (d3, r2, e2) => r2 in d3 ? ts2(d3, r2, { enumerable: true, configurable: true, writable: true, value: e2 }) : d3[r2] = e2;
var w3 = (d3, r2) => {
  for (var e2 in r2 || (r2 = {})) ns2.call(r2, e2) && pe4(d3, e2, r2[e2]);
  if (le4) for (var e2 of le4(r2)) os2.call(r2, e2) && pe4(d3, e2, r2[e2]);
  return d3;
};
var H4 = (d3, r2) => is2(d3, rs2(r2));
var as2 = class extends S3 {
  constructor(r2) {
    super(r2), this.name = oe3, this.events = new import_events6.default(), this.initialized = false, this.ignoredPayloadTypes = [U], this.requestQueue = { state: V2.idle, requests: [] }, this.requestQueueDelay = import_time4.ONE_SECOND, this.init = async () => {
      this.initialized || (await this.cleanup(), this.registerRelayerEvents(), this.registerExpirerEvents(), this.client.core.pairing.register({ methods: Object.keys(O4) }), this.initialized = true, setTimeout(() => {
        this.requestQueue.requests = this.getPendingSessionRequests(), this.processRequestQueue();
      }, (0, import_time4.toMiliseconds)(this.requestQueueDelay)));
    }, this.connect = async (e2) => {
      this.isInitialized();
      const s2 = H4(w3({}, e2), { requiredNamespaces: e2.requiredNamespaces || {}, optionalNamespaces: e2.optionalNamespaces || {} });
      await this.isValidConnect(s2);
      const { pairingTopic: t, requiredNamespaces: i3, optionalNamespaces: n4, sessionProperties: o3, relays: a2 } = s2;
      let l4 = t, h4, E6 = false;
      if (l4 && (E6 = this.client.core.pairing.pairings.get(l4).active), !l4 || !E6) {
        const { topic: f4, uri: y6 } = await this.client.core.pairing.create();
        l4 = f4, h4 = y6;
      }
      const g6 = await this.client.core.crypto.generateKeyPair(), I2 = w3({ requiredNamespaces: i3, optionalNamespaces: n4, relays: a2 ?? [{ protocol: rt3 }], proposer: { publicKey: g6, metadata: this.client.metadata } }, o3 && { sessionProperties: o3 }), { reject: u3, resolve: T3, done: K4 } = Xn(import_time4.FIVE_MINUTES, re);
      if (this.events.once(it("session_connect"), async ({ error: f4, session: y6 }) => {
        if (f4) u3(f4);
        else if (y6) {
          y6.self.publicKey = g6;
          const F = H4(w3({}, y6), { requiredNamespaces: y6.requiredNamespaces, optionalNamespaces: y6.optionalNamespaces });
          await this.client.session.set(y6.topic, F), await this.setExpiry(y6.topic, y6.expiry), l4 && await this.client.core.pairing.updateMetadata({ topic: l4, metadata: y6.peer.metadata }), T3(F);
        }
      }), !l4) {
        const { message: f4 } = N("NO_MATCHING_KEY", `connect() pairing topic: ${l4}`);
        throw new Error(f4);
      }
      const L5 = await this.sendRequest(l4, "wc_sessionPropose", I2), he3 = ot(import_time4.FIVE_MINUTES);
      return await this.setProposal(L5, w3({ id: L5, expiry: he3 }, I2)), { uri: h4, approval: K4 };
    }, this.pair = async (e2) => (this.isInitialized(), await this.client.core.pairing.pair(e2)), this.approve = async (e2) => {
      this.isInitialized(), await this.isValidApprove(e2);
      const { id: s2, relayProtocol: t, namespaces: i3, sessionProperties: n4 } = e2, o3 = this.client.proposal.get(s2);
      let { pairingTopic: a2, proposer: l4, requiredNamespaces: h4, optionalNamespaces: E6 } = o3;
      a2 = a2 || "", H(h4) || (h4 = St(i3, "approve()"));
      const g6 = await this.client.core.crypto.generateKeyPair(), I2 = l4.publicKey, u3 = await this.client.core.crypto.generateSharedKey(g6, I2);
      a2 && s2 && (await this.client.core.pairing.updateMetadata({ topic: a2, metadata: l4.metadata }), await this.sendResult(s2, a2, { relay: { protocol: t ?? "irn" }, responderPublicKey: g6 }), await this.client.proposal.delete(s2, A("USER_DISCONNECTED")), await this.client.core.pairing.activate({ topic: a2 }));
      const T3 = w3({ relay: { protocol: t ?? "irn" }, namespaces: i3, requiredNamespaces: h4, optionalNamespaces: E6, pairingTopic: a2, controller: { publicKey: g6, metadata: this.client.metadata }, expiry: ot(A2) }, n4 && { sessionProperties: n4 });
      await this.client.core.relayer.subscribe(u3), await this.sendRequest(u3, "wc_sessionSettle", T3);
      const K4 = H4(w3({}, T3), { topic: u3, pairingTopic: a2, acknowledged: false, self: T3.controller, peer: { publicKey: l4.publicKey, metadata: l4.metadata }, controller: g6 });
      return await this.client.session.set(u3, K4), await this.setExpiry(u3, ot(A2)), { topic: u3, acknowledged: () => new Promise((L5) => setTimeout(() => L5(this.client.session.get(u3)), 500)) };
    }, this.reject = async (e2) => {
      this.isInitialized(), await this.isValidReject(e2);
      const { id: s2, reason: t } = e2, { pairingTopic: i3 } = this.client.proposal.get(s2);
      i3 && (await this.sendError(s2, i3, t), await this.client.proposal.delete(s2, A("USER_DISCONNECTED")));
    }, this.update = async (e2) => {
      this.isInitialized(), await this.isValidUpdate(e2);
      const { topic: s2, namespaces: t } = e2, i3 = await this.sendRequest(s2, "wc_sessionUpdate", { namespaces: t }), { done: n4, resolve: o3, reject: a2 } = Xn();
      return this.events.once(it("session_update", i3), ({ error: l4 }) => {
        l4 ? a2(l4) : o3();
      }), await this.client.session.update(s2, { namespaces: t }), { acknowledged: n4 };
    }, this.extend = async (e2) => {
      this.isInitialized(), await this.isValidExtend(e2);
      const { topic: s2 } = e2, t = await this.sendRequest(s2, "wc_sessionExtend", {}), { done: i3, resolve: n4, reject: o3 } = Xn();
      return this.events.once(it("session_extend", t), ({ error: a2 }) => {
        a2 ? o3(a2) : n4();
      }), await this.setExpiry(s2, ot(A2)), { acknowledged: i3 };
    }, this.request = async (e2) => {
      this.isInitialized(), await this.isValidRequest(e2);
      const { chainId: s2, request: t, topic: i3, expiry: n4 } = e2, o3 = await this.sendRequest(i3, "wc_sessionRequest", { request: t, chainId: s2 }, n4), { done: a2, resolve: l4, reject: h4 } = Xn(n4);
      this.events.once(it("session_request", o3), ({ error: g6, result: I2 }) => {
        g6 ? h4(g6) : l4(I2);
      }), this.client.events.emit("session_request_sent", { topic: i3, request: t, chainId: s2, id: o3 });
      const E6 = await this.client.core.storage.getItem(te3);
      return ct({ id: o3, topic: i3, wcDeepLink: E6 }), await a2();
    }, this.respond = async (e2) => {
      this.isInitialized(), await this.isValidRespond(e2);
      const { topic: s2, response: t } = e2, { id: i3 } = t;
      isJsonRpcResult(t) ? await this.sendResult(i3, s2, t.result) : isJsonRpcError(t) && await this.sendError(i3, s2, t.error), this.cleanupAfterResponse(e2);
    }, this.ping = async (e2) => {
      this.isInitialized(), await this.isValidPing(e2);
      const { topic: s2 } = e2;
      if (this.client.session.keys.includes(s2)) {
        const t = await this.sendRequest(s2, "wc_sessionPing", {}), { done: i3, resolve: n4, reject: o3 } = Xn();
        this.events.once(it("session_ping", t), ({ error: a2 }) => {
          a2 ? o3(a2) : n4();
        }), await i3();
      } else this.client.core.pairing.pairings.keys.includes(s2) && await this.client.core.pairing.ping({ topic: s2 });
    }, this.emit = async (e2) => {
      this.isInitialized(), await this.isValidEmit(e2);
      const { topic: s2, event: t, chainId: i3 } = e2;
      await this.sendRequest(s2, "wc_sessionEvent", { event: t, chainId: i3 });
    }, this.disconnect = async (e2) => {
      this.isInitialized(), await this.isValidDisconnect(e2);
      const { topic: s2 } = e2;
      if (this.client.session.keys.includes(s2)) {
        const t = getBigIntRpcId().toString();
        let i3;
        const n4 = (o3) => {
          (o3 == null ? void 0 : o3.id.toString()) === t && (this.client.core.relayer.events.removeListener(g3.message_ack, n4), i3());
        };
        await Promise.all([new Promise((o3) => {
          i3 = o3, this.client.core.relayer.on(g3.message_ack, n4);
        }), this.sendRequest(s2, "wc_sessionDelete", A("USER_DISCONNECTED"), void 0, t)]), await this.deleteSession(s2);
      } else await this.client.core.pairing.disconnect({ topic: s2 });
    }, this.find = (e2) => (this.isInitialized(), this.client.session.getAll().filter((s2) => wt(s2, e2))), this.getPendingSessionRequests = () => (this.isInitialized(), this.client.pendingRequest.getAll()), this.cleanupDuplicatePairings = async (e2) => {
      if (e2.pairingTopic) try {
        const s2 = this.client.core.pairing.pairings.get(e2.pairingTopic), t = this.client.core.pairing.pairings.getAll().filter((i3) => {
          var n4, o3;
          return ((n4 = i3.peerMetadata) == null ? void 0 : n4.url) && ((o3 = i3.peerMetadata) == null ? void 0 : o3.url) === e2.peer.metadata.url && i3.topic && i3.topic !== s2.topic;
        });
        if (t.length === 0) return;
        this.client.logger.info(`Cleaning up ${t.length} duplicate pairing(s)`), await Promise.all(t.map((i3) => this.client.core.pairing.disconnect({ topic: i3.topic }))), this.client.logger.info("Duplicate pairings clean up finished");
      } catch (s2) {
        this.client.logger.error(s2);
      }
    }, this.deleteSession = async (e2, s2) => {
      const { self: t } = this.client.session.get(e2);
      await this.client.core.relayer.unsubscribe(e2), this.client.session.delete(e2, A("USER_DISCONNECTED")), this.client.core.crypto.keychain.has(t.publicKey) && await this.client.core.crypto.deleteKeyPair(t.publicKey), this.client.core.crypto.keychain.has(e2) && await this.client.core.crypto.deleteSymKey(e2), s2 || this.client.core.expirer.del(e2);
    }, this.deleteProposal = async (e2, s2) => {
      await Promise.all([this.client.proposal.delete(e2, A("USER_DISCONNECTED")), s2 ? Promise.resolve() : this.client.core.expirer.del(e2)]);
    }, this.deletePendingSessionRequest = async (e2, s2, t = false) => {
      await Promise.all([this.client.pendingRequest.delete(e2, s2), t ? Promise.resolve() : this.client.core.expirer.del(e2)]), this.requestQueue.requests = this.requestQueue.requests.filter((i3) => i3.id !== e2), t && (this.requestQueue.state = V2.idle);
    }, this.setExpiry = async (e2, s2) => {
      this.client.session.keys.includes(e2) && await this.client.session.update(e2, { expiry: s2 }), this.client.core.expirer.set(e2, s2);
    }, this.setProposal = async (e2, s2) => {
      await this.client.proposal.set(e2, s2), this.client.core.expirer.set(e2, s2.expiry);
    }, this.setPendingSessionRequest = async (e2) => {
      const s2 = O4.wc_sessionRequest.req.ttl, { id: t, topic: i3, params: n4 } = e2;
      await this.client.pendingRequest.set(t, { id: t, topic: i3, params: n4 }), s2 && this.client.core.expirer.set(t, ot(s2));
    }, this.sendRequest = async (e2, s2, t, i3, n4) => {
      const o3 = formatJsonRpcRequest(s2, t);
      if (je() && ce3.includes(s2)) {
        const h4 = $n(JSON.stringify(o3));
        await this.client.core.verify.register({ attestationId: h4 });
      }
      const a2 = await this.client.core.crypto.encode(e2, o3), l4 = O4[s2].req;
      return i3 && (l4.ttl = i3), n4 && (l4.id = n4), this.client.core.history.set(e2, o3), this.client.core.relayer.publish(e2, a2, l4), o3.id;
    }, this.sendResult = async (e2, s2, t) => {
      const i3 = formatJsonRpcResult(e2, t), n4 = await this.client.core.crypto.encode(s2, i3), o3 = await this.client.core.history.get(s2, e2), a2 = O4[o3.request.method].res;
      this.client.core.relayer.publish(s2, n4, a2), await this.client.core.history.resolve(i3);
    }, this.sendError = async (e2, s2, t) => {
      const i3 = formatJsonRpcError(e2, t), n4 = await this.client.core.crypto.encode(s2, i3), o3 = await this.client.core.history.get(s2, e2), a2 = O4[o3.request.method].res;
      this.client.core.relayer.publish(s2, n4, a2), await this.client.core.history.resolve(i3);
    }, this.cleanup = async () => {
      const e2 = [], s2 = [];
      this.client.session.getAll().forEach((t) => {
        st(t.expiry) && e2.push(t.topic);
      }), this.client.proposal.getAll().forEach((t) => {
        st(t.expiry) && s2.push(t.id);
      }), await Promise.all([...e2.map((t) => this.deleteSession(t)), ...s2.map((t) => this.deleteProposal(t))]);
    }, this.onRelayEventRequest = (e2) => {
      const { topic: s2, payload: t } = e2, i3 = t.method;
      switch (i3) {
        case "wc_sessionPropose":
          return this.onSessionProposeRequest(s2, t);
        case "wc_sessionSettle":
          return this.onSessionSettleRequest(s2, t);
        case "wc_sessionUpdate":
          return this.onSessionUpdateRequest(s2, t);
        case "wc_sessionExtend":
          return this.onSessionExtendRequest(s2, t);
        case "wc_sessionPing":
          return this.onSessionPingRequest(s2, t);
        case "wc_sessionDelete":
          return this.onSessionDeleteRequest(s2, t);
        case "wc_sessionRequest":
          return this.onSessionRequest(s2, t);
        case "wc_sessionEvent":
          return this.onSessionEventRequest(s2, t);
        default:
          return this.client.logger.info(`Unsupported request method ${i3}`);
      }
    }, this.onRelayEventResponse = async (e2) => {
      const { topic: s2, payload: t } = e2, i3 = (await this.client.core.history.get(s2, t.id)).request.method;
      switch (i3) {
        case "wc_sessionPropose":
          return this.onSessionProposeResponse(s2, t);
        case "wc_sessionSettle":
          return this.onSessionSettleResponse(s2, t);
        case "wc_sessionUpdate":
          return this.onSessionUpdateResponse(s2, t);
        case "wc_sessionExtend":
          return this.onSessionExtendResponse(s2, t);
        case "wc_sessionPing":
          return this.onSessionPingResponse(s2, t);
        case "wc_sessionRequest":
          return this.onSessionRequestResponse(s2, t);
        default:
          return this.client.logger.info(`Unsupported response method ${i3}`);
      }
    }, this.onRelayEventUnknownPayload = (e2) => {
      const { topic: s2 } = e2, { message: t } = N("MISSING_OR_INVALID", `Decoded payload on topic ${s2} is not identifiable as a JSON-RPC request or a response.`);
      throw new Error(t);
    }, this.onSessionProposeRequest = async (e2, s2) => {
      const { params: t, id: i3 } = s2;
      try {
        this.isValidConnect(w3({}, s2.params));
        const n4 = ot(import_time4.FIVE_MINUTES), o3 = w3({ id: i3, pairingTopic: e2, expiry: n4 }, t);
        await this.setProposal(i3, o3);
        const a2 = $n(JSON.stringify(s2)), l4 = await this.getVerifyContext(a2, o3.proposer.metadata);
        this.client.events.emit("session_proposal", { id: i3, params: o3, verifyContext: l4 });
      } catch (n4) {
        await this.sendError(i3, e2, n4), this.client.logger.error(n4);
      }
    }, this.onSessionProposeResponse = async (e2, s2) => {
      const { id: t } = s2;
      if (isJsonRpcResult(s2)) {
        const { result: i3 } = s2;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", result: i3 });
        const n4 = this.client.proposal.get(t);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", proposal: n4 });
        const o3 = n4.proposer.publicKey;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", selfPublicKey: o3 });
        const a2 = i3.responderPublicKey;
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", peerPublicKey: a2 });
        const l4 = await this.client.core.crypto.generateSharedKey(o3, a2);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", sessionTopic: l4 });
        const h4 = await this.client.core.relayer.subscribe(l4);
        this.client.logger.trace({ type: "method", method: "onSessionProposeResponse", subscriptionId: h4 }), await this.client.core.pairing.activate({ topic: e2 });
      } else isJsonRpcError(s2) && (await this.client.proposal.delete(t, A("USER_DISCONNECTED")), this.events.emit(it("session_connect"), { error: s2.error }));
    }, this.onSessionSettleRequest = async (e2, s2) => {
      const { id: t, params: i3 } = s2;
      try {
        this.isValidSessionSettleRequest(i3);
        const { relay: n4, controller: o3, expiry: a2, namespaces: l4, requiredNamespaces: h4, optionalNamespaces: E6, sessionProperties: g6, pairingTopic: I2 } = s2.params, u3 = w3({ topic: e2, relay: n4, expiry: a2, namespaces: l4, acknowledged: true, pairingTopic: I2, requiredNamespaces: h4, optionalNamespaces: E6, controller: o3.publicKey, self: { publicKey: "", metadata: this.client.metadata }, peer: { publicKey: o3.publicKey, metadata: o3.metadata } }, g6 && { sessionProperties: g6 });
        await this.sendResult(s2.id, e2, true), this.events.emit(it("session_connect"), { session: u3 }), this.cleanupDuplicatePairings(u3);
      } catch (n4) {
        await this.sendError(t, e2, n4), this.client.logger.error(n4);
      }
    }, this.onSessionSettleResponse = async (e2, s2) => {
      const { id: t } = s2;
      isJsonRpcResult(s2) ? (await this.client.session.update(e2, { acknowledged: true }), this.events.emit(it("session_approve", t), {})) : isJsonRpcError(s2) && (await this.client.session.delete(e2, A("USER_DISCONNECTED")), this.events.emit(it("session_approve", t), { error: s2.error }));
    }, this.onSessionUpdateRequest = async (e2, s2) => {
      const { params: t, id: i3 } = s2;
      try {
        this.isValidUpdate(w3({ topic: e2 }, t)), await this.client.session.update(e2, { namespaces: t.namespaces }), await this.sendResult(i3, e2, true), this.client.events.emit("session_update", { id: i3, topic: e2, params: t });
      } catch (n4) {
        await this.sendError(i3, e2, n4), this.client.logger.error(n4);
      }
    }, this.onSessionUpdateResponse = (e2, s2) => {
      const { id: t } = s2;
      isJsonRpcResult(s2) ? this.events.emit(it("session_update", t), {}) : isJsonRpcError(s2) && this.events.emit(it("session_update", t), { error: s2.error });
    }, this.onSessionExtendRequest = async (e2, s2) => {
      const { id: t } = s2;
      try {
        this.isValidExtend({ topic: e2 }), await this.setExpiry(e2, ot(A2)), await this.sendResult(t, e2, true), this.client.events.emit("session_extend", { id: t, topic: e2 });
      } catch (i3) {
        await this.sendError(t, e2, i3), this.client.logger.error(i3);
      }
    }, this.onSessionExtendResponse = (e2, s2) => {
      const { id: t } = s2;
      isJsonRpcResult(s2) ? this.events.emit(it("session_extend", t), {}) : isJsonRpcError(s2) && this.events.emit(it("session_extend", t), { error: s2.error });
    }, this.onSessionPingRequest = async (e2, s2) => {
      const { id: t } = s2;
      try {
        this.isValidPing({ topic: e2 }), await this.sendResult(t, e2, true), this.client.events.emit("session_ping", { id: t, topic: e2 });
      } catch (i3) {
        await this.sendError(t, e2, i3), this.client.logger.error(i3);
      }
    }, this.onSessionPingResponse = (e2, s2) => {
      const { id: t } = s2;
      setTimeout(() => {
        isJsonRpcResult(s2) ? this.events.emit(it("session_ping", t), {}) : isJsonRpcError(s2) && this.events.emit(it("session_ping", t), { error: s2.error });
      }, 500);
    }, this.onSessionDeleteRequest = async (e2, s2) => {
      const { id: t } = s2;
      try {
        this.isValidDisconnect({ topic: e2, reason: s2.params }), await Promise.all([new Promise((i3) => {
          this.client.core.relayer.once(g3.publish, async () => {
            i3(await this.deleteSession(e2));
          });
        }), this.sendResult(t, e2, true)]), this.client.events.emit("session_delete", { id: t, topic: e2 });
      } catch (i3) {
        this.client.logger.error(i3);
      }
    }, this.onSessionRequest = async (e2, s2) => {
      const { id: t, params: i3 } = s2;
      try {
        this.isValidRequest(w3({ topic: e2 }, i3)), await this.setPendingSessionRequest({ id: t, topic: e2, params: i3 }), this.addRequestToQueue({ id: t, topic: e2, params: i3 }), await this.processRequestQueue();
      } catch (n4) {
        await this.sendError(t, e2, n4), this.client.logger.error(n4);
      }
    }, this.onSessionRequestResponse = (e2, s2) => {
      const { id: t } = s2;
      isJsonRpcResult(s2) ? this.events.emit(it("session_request", t), { result: s2.result }) : isJsonRpcError(s2) && this.events.emit(it("session_request", t), { error: s2.error });
    }, this.onSessionEventRequest = async (e2, s2) => {
      const { id: t, params: i3 } = s2;
      try {
        this.isValidEmit(w3({ topic: e2 }, i3)), this.client.events.emit("session_event", { id: t, topic: e2, params: i3 });
      } catch (n4) {
        await this.sendError(t, e2, n4), this.client.logger.error(n4);
      }
    }, this.addRequestToQueue = (e2) => {
      this.requestQueue.requests.push(e2);
    }, this.cleanupAfterResponse = (e2) => {
      this.deletePendingSessionRequest(e2.response.id, { message: "fulfilled", code: 0 }), setTimeout(() => {
        this.requestQueue.state = V2.idle, this.processRequestQueue();
      }, (0, import_time4.toMiliseconds)(this.requestQueueDelay));
    }, this.processRequestQueue = async () => {
      if (this.requestQueue.state === V2.active) {
        this.client.logger.info("session request queue is already active.");
        return;
      }
      const e2 = this.requestQueue.requests[0];
      if (!e2) {
        this.client.logger.info("session request queue is empty.");
        return;
      }
      try {
        const { id: s2, topic: t, params: i3 } = e2, n4 = $n(JSON.stringify({ id: s2, params: i3 })), o3 = this.client.session.get(t), a2 = await this.getVerifyContext(n4, o3.peer.metadata);
        this.requestQueue.state = V2.active, this.client.events.emit("session_request", { id: s2, topic: t, params: i3, verifyContext: a2 });
      } catch (s2) {
        this.client.logger.error(s2);
      }
    }, this.isValidConnect = async (e2) => {
      if (!Dt(e2)) {
        const { message: a2 } = N("MISSING_OR_INVALID", `connect() params: ${JSON.stringify(e2)}`);
        throw new Error(a2);
      }
      const { pairingTopic: s2, requiredNamespaces: t, optionalNamespaces: i3, sessionProperties: n4, relays: o3 } = e2;
      if (I(s2) || await this.isValidPairingTopic(s2), !jt(o3, true)) {
        const { message: a2 } = N("MISSING_OR_INVALID", `connect() relays: ${o3}`);
        throw new Error(a2);
      }
      !I(t) && H(t) !== 0 && this.validateNamespaces(t, "requiredNamespaces"), !I(i3) && H(i3) !== 0 && this.validateNamespaces(i3, "optionalNamespaces"), I(n4) || this.validateSessionProps(n4, "sessionProperties");
    }, this.validateNamespaces = (e2, s2) => {
      const t = $t(e2, "connect()", s2);
      if (t) throw new Error(t.message);
    }, this.isValidApprove = async (e2) => {
      if (!Dt(e2)) throw new Error(N("MISSING_OR_INVALID", `approve() params: ${e2}`).message);
      const { id: s2, namespaces: t, relayProtocol: i3, sessionProperties: n4 } = e2;
      await this.isValidProposalId(s2);
      const o3 = this.client.proposal.get(s2), a2 = sn(t, "approve()");
      if (a2) throw new Error(a2.message);
      const l4 = an(o3.requiredNamespaces, t, "approve()");
      if (l4) throw new Error(l4.message);
      if (!y(i3, true)) {
        const { message: h4 } = N("MISSING_OR_INVALID", `approve() relayProtocol: ${i3}`);
        throw new Error(h4);
      }
      I(n4) || this.validateSessionProps(n4, "sessionProperties");
    }, this.isValidReject = async (e2) => {
      if (!Dt(e2)) {
        const { message: i3 } = N("MISSING_OR_INVALID", `reject() params: ${e2}`);
        throw new Error(i3);
      }
      const { id: s2, reason: t } = e2;
      if (await this.isValidProposalId(s2), !Vt(t)) {
        const { message: i3 } = N("MISSING_OR_INVALID", `reject() reason: ${JSON.stringify(t)}`);
        throw new Error(i3);
      }
    }, this.isValidSessionSettleRequest = (e2) => {
      if (!Dt(e2)) {
        const { message: l4 } = N("MISSING_OR_INVALID", `onSessionSettleRequest() params: ${e2}`);
        throw new Error(l4);
      }
      const { relay: s2, controller: t, namespaces: i3, expiry: n4 } = e2;
      if (!cn(s2)) {
        const { message: l4 } = N("MISSING_OR_INVALID", "onSessionSettleRequest() relay protocol should be a string");
        throw new Error(l4);
      }
      const o3 = _t(t, "onSessionSettleRequest()");
      if (o3) throw new Error(o3.message);
      const a2 = sn(i3, "onSessionSettleRequest()");
      if (a2) throw new Error(a2.message);
      if (st(n4)) {
        const { message: l4 } = N("EXPIRED", "onSessionSettleRequest()");
        throw new Error(l4);
      }
    }, this.isValidUpdate = async (e2) => {
      if (!Dt(e2)) {
        const { message: a2 } = N("MISSING_OR_INVALID", `update() params: ${e2}`);
        throw new Error(a2);
      }
      const { topic: s2, namespaces: t } = e2;
      await this.isValidSessionTopic(s2);
      const i3 = this.client.session.get(s2), n4 = sn(t, "update()");
      if (n4) throw new Error(n4.message);
      const o3 = an(i3.requiredNamespaces, t, "update()");
      if (o3) throw new Error(o3.message);
    }, this.isValidExtend = async (e2) => {
      if (!Dt(e2)) {
        const { message: t } = N("MISSING_OR_INVALID", `extend() params: ${e2}`);
        throw new Error(t);
      }
      const { topic: s2 } = e2;
      await this.isValidSessionTopic(s2);
    }, this.isValidRequest = async (e2) => {
      if (!Dt(e2)) {
        const { message: a2 } = N("MISSING_OR_INVALID", `request() params: ${e2}`);
        throw new Error(a2);
      }
      const { topic: s2, request: t, chainId: i3, expiry: n4 } = e2;
      await this.isValidSessionTopic(s2);
      const { namespaces: o3 } = this.client.session.get(s2);
      if (!Lt(o3, i3)) {
        const { message: a2 } = N("MISSING_OR_INVALID", `request() chainId: ${i3}`);
        throw new Error(a2);
      }
      if (!kt(t)) {
        const { message: a2 } = N("MISSING_OR_INVALID", `request() ${JSON.stringify(t)}`);
        throw new Error(a2);
      }
      if (!xt(o3, i3, t.method)) {
        const { message: a2 } = N("MISSING_OR_INVALID", `request() method: ${t.method}`);
        throw new Error(a2);
      }
      if (n4 && !Gt(n4, M4)) {
        const { message: a2 } = N("MISSING_OR_INVALID", `request() expiry: ${n4}. Expiry must be a number (in seconds) between ${M4.min} and ${M4.max}`);
        throw new Error(a2);
      }
    }, this.isValidRespond = async (e2) => {
      if (!Dt(e2)) {
        const { message: i3 } = N("MISSING_OR_INVALID", `respond() params: ${e2}`);
        throw new Error(i3);
      }
      const { topic: s2, response: t } = e2;
      if (await this.isValidSessionTopic(s2), !Mt(t)) {
        const { message: i3 } = N("MISSING_OR_INVALID", `respond() response: ${JSON.stringify(t)}`);
        throw new Error(i3);
      }
    }, this.isValidPing = async (e2) => {
      if (!Dt(e2)) {
        const { message: t } = N("MISSING_OR_INVALID", `ping() params: ${e2}`);
        throw new Error(t);
      }
      const { topic: s2 } = e2;
      await this.isValidSessionOrPairingTopic(s2);
    }, this.isValidEmit = async (e2) => {
      if (!Dt(e2)) {
        const { message: o3 } = N("MISSING_OR_INVALID", `emit() params: ${e2}`);
        throw new Error(o3);
      }
      const { topic: s2, event: t, chainId: i3 } = e2;
      await this.isValidSessionTopic(s2);
      const { namespaces: n4 } = this.client.session.get(s2);
      if (!Lt(n4, i3)) {
        const { message: o3 } = N("MISSING_OR_INVALID", `emit() chainId: ${i3}`);
        throw new Error(o3);
      }
      if (!Kt(t)) {
        const { message: o3 } = N("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(t)}`);
        throw new Error(o3);
      }
      if (!Ft(n4, i3, t.name)) {
        const { message: o3 } = N("MISSING_OR_INVALID", `emit() event: ${JSON.stringify(t)}`);
        throw new Error(o3);
      }
    }, this.isValidDisconnect = async (e2) => {
      if (!Dt(e2)) {
        const { message: t } = N("MISSING_OR_INVALID", `disconnect() params: ${e2}`);
        throw new Error(t);
      }
      const { topic: s2 } = e2;
      await this.isValidSessionOrPairingTopic(s2);
    }, this.getVerifyContext = async (e2, s2) => {
      const t = { verified: { verifyUrl: s2.verifyUrl || "", validation: "UNKNOWN", origin: s2.url || "" } };
      try {
        const i3 = await this.client.core.verify.resolve({ attestationId: e2, verifyUrl: s2.verifyUrl });
        i3 && (t.verified.origin = i3, t.verified.validation = i3 === s2.url ? "VALID" : "INVALID");
      } catch (i3) {
        this.client.logger.error(i3);
      }
      return this.client.logger.info(`Verify context: ${JSON.stringify(t)}`), t;
    }, this.validateSessionProps = (e2, s2) => {
      Object.values(e2).forEach((t) => {
        if (!y(t, false)) {
          const { message: i3 } = N("MISSING_OR_INVALID", `${s2} must be in Record<string, string> format. Received: ${JSON.stringify(t)}`);
          throw new Error(i3);
        }
      });
    };
  }
  isInitialized() {
    if (!this.initialized) {
      const { message: r2 } = N("NOT_INITIALIZED", this.name);
      throw new Error(r2);
    }
  }
  registerRelayerEvents() {
    this.client.core.relayer.on(g3.message, async (r2) => {
      const { topic: e2, message: s2 } = r2;
      if (this.ignoredPayloadTypes.includes(this.client.core.crypto.getPayloadType(s2))) return;
      const t = await this.client.core.crypto.decode(e2, s2);
      isJsonRpcRequest(t) ? (this.client.core.history.set(e2, t), this.onRelayEventRequest({ topic: e2, payload: t })) : isJsonRpcResponse(t) ? (await this.client.core.history.resolve(t), await this.onRelayEventResponse({ topic: e2, payload: t }), this.client.core.history.delete(e2, t.id)) : this.onRelayEventUnknownPayload({ topic: e2, payload: t });
    });
  }
  registerExpirerEvents() {
    this.client.core.expirer.on(w2.expired, async (r2) => {
      const { topic: e2, id: s2 } = rt(r2.target);
      if (s2 && this.client.pendingRequest.keys.includes(s2)) return await this.deletePendingSessionRequest(s2, N("EXPIRED"), true);
      e2 ? this.client.session.keys.includes(e2) && (await this.deleteSession(e2, true), this.client.events.emit("session_expire", { topic: e2 })) : s2 && (await this.deleteProposal(s2, true), this.client.events.emit("proposal_expire", { id: s2 }));
    });
  }
  isValidPairingTopic(r2) {
    if (!y(r2, false)) {
      const { message: e2 } = N("MISSING_OR_INVALID", `pairing topic should be a string: ${r2}`);
      throw new Error(e2);
    }
    if (!this.client.core.pairing.pairings.keys.includes(r2)) {
      const { message: e2 } = N("NO_MATCHING_KEY", `pairing topic doesn't exist: ${r2}`);
      throw new Error(e2);
    }
    if (st(this.client.core.pairing.pairings.get(r2).expiry)) {
      const { message: e2 } = N("EXPIRED", `pairing topic: ${r2}`);
      throw new Error(e2);
    }
  }
  async isValidSessionTopic(r2) {
    if (!y(r2, false)) {
      const { message: e2 } = N("MISSING_OR_INVALID", `session topic should be a string: ${r2}`);
      throw new Error(e2);
    }
    if (!this.client.session.keys.includes(r2)) {
      const { message: e2 } = N("NO_MATCHING_KEY", `session topic doesn't exist: ${r2}`);
      throw new Error(e2);
    }
    if (st(this.client.session.get(r2).expiry)) {
      await this.deleteSession(r2);
      const { message: e2 } = N("EXPIRED", `session topic: ${r2}`);
      throw new Error(e2);
    }
  }
  async isValidSessionOrPairingTopic(r2) {
    if (this.client.session.keys.includes(r2)) await this.isValidSessionTopic(r2);
    else if (this.client.core.pairing.pairings.keys.includes(r2)) this.isValidPairingTopic(r2);
    else if (y(r2, false)) {
      const { message: e2 } = N("NO_MATCHING_KEY", `session or pairing topic doesn't exist: ${r2}`);
      throw new Error(e2);
    } else {
      const { message: e2 } = N("MISSING_OR_INVALID", `session or pairing topic should be a string: ${r2}`);
      throw new Error(e2);
    }
  }
  async isValidProposalId(r2) {
    if (!Ct(r2)) {
      const { message: e2 } = N("MISSING_OR_INVALID", `proposal id should be a number: ${r2}`);
      throw new Error(e2);
    }
    if (!this.client.proposal.keys.includes(r2)) {
      const { message: e2 } = N("NO_MATCHING_KEY", `proposal id doesn't exist: ${r2}`);
      throw new Error(e2);
    }
    if (st(this.client.proposal.get(r2).expiry)) {
      await this.deleteProposal(r2);
      const { message: e2 } = N("EXPIRED", `proposal id: ${r2}`);
      throw new Error(e2);
    }
  }
};
var cs2 = class extends Nt2 {
  constructor(r2, e2) {
    super(r2, e2, ie2, G3), this.core = r2, this.logger = e2;
  }
};
var ls2 = class extends Nt2 {
  constructor(r2, e2) {
    super(r2, e2, ne3, G3), this.core = r2, this.logger = e2;
  }
};
var ps2 = class extends Nt2 {
  constructor(r2, e2) {
    super(r2, e2, ae3, G3, (s2) => s2.id), this.core = r2, this.logger = e2;
  }
};
var U4 = class _U extends b3 {
  constructor(r2) {
    super(r2), this.protocol = Y2, this.version = J4, this.name = $3.name, this.events = new import_events6.EventEmitter(), this.on = (s2, t) => this.events.on(s2, t), this.once = (s2, t) => this.events.once(s2, t), this.off = (s2, t) => this.events.off(s2, t), this.removeListener = (s2, t) => this.events.removeListener(s2, t), this.removeAllListeners = (s2) => this.events.removeAllListeners(s2), this.connect = async (s2) => {
      try {
        return await this.engine.connect(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.pair = async (s2) => {
      try {
        return await this.engine.pair(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.approve = async (s2) => {
      try {
        return await this.engine.approve(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.reject = async (s2) => {
      try {
        return await this.engine.reject(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.update = async (s2) => {
      try {
        return await this.engine.update(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.extend = async (s2) => {
      try {
        return await this.engine.extend(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.request = async (s2) => {
      try {
        return await this.engine.request(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.respond = async (s2) => {
      try {
        return await this.engine.respond(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.ping = async (s2) => {
      try {
        return await this.engine.ping(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.emit = async (s2) => {
      try {
        return await this.engine.emit(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.disconnect = async (s2) => {
      try {
        return await this.engine.disconnect(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.find = (s2) => {
      try {
        return this.engine.find(s2);
      } catch (t) {
        throw this.logger.error(t.message), t;
      }
    }, this.getPendingSessionRequests = () => {
      try {
        return this.engine.getPendingSessionRequests();
      } catch (s2) {
        throw this.logger.error(s2.message), s2;
      }
    }, this.name = (r2 == null ? void 0 : r2.name) || $3.name, this.metadata = (r2 == null ? void 0 : r2.metadata) || Fn();
    const e2 = typeof (r2 == null ? void 0 : r2.logger) < "u" && typeof (r2 == null ? void 0 : r2.logger) != "string" ? r2.logger : (0, import_pino2.default)(k2({ level: (r2 == null ? void 0 : r2.logger) || $3.logger }));
    this.core = (r2 == null ? void 0 : r2.core) || new Sr2(r2), this.logger = E2(e2, this.name), this.session = new ls2(this.core, this.logger), this.proposal = new cs2(this.core, this.logger), this.pendingRequest = new ps2(this.core, this.logger), this.engine = new as2(this);
  }
  static async init(r2) {
    const e2 = new _U(r2);
    return await e2.initialize(), e2;
  }
  get context() {
    return y3(this.logger);
  }
  get pairing() {
    return this.core.pairing.pairings;
  }
  async initialize() {
    this.logger.trace("Initialized");
    try {
      await this.core.start(), await this.session.init(), await this.proposal.init(), await this.pendingRequest.init(), await this.engine.init(), this.core.verify.init({ verifyUrl: this.metadata.verifyUrl }), this.logger.info("SignClient Initialization Success");
    } catch (r2) {
      throw this.logger.info("SignClient Initialization Failure"), this.logger.error(r2.message), r2;
    }
  }
};

// node_modules/@walletconnect/jsonrpc-http-connection/dist/index.es.js
var import_events7 = __toESM(require_events());
var import_cross_fetch = __toESM(require_browser_ponyfill());
var P3 = Object.defineProperty;
var w4 = Object.defineProperties;
var E4 = Object.getOwnPropertyDescriptors;
var c4 = Object.getOwnPropertySymbols;
var L3 = Object.prototype.hasOwnProperty;
var O5 = Object.prototype.propertyIsEnumerable;
var l3 = (r2, t, e2) => t in r2 ? P3(r2, t, { enumerable: true, configurable: true, writable: true, value: e2 }) : r2[t] = e2;
var p5 = (r2, t) => {
  for (var e2 in t || (t = {})) L3.call(t, e2) && l3(r2, e2, t[e2]);
  if (c4) for (var e2 of c4(t)) O5.call(t, e2) && l3(r2, e2, t[e2]);
  return r2;
};
var v2 = (r2, t) => w4(r2, E4(t));
var j5 = { Accept: "application/json", "Content-Type": "application/json" };
var T2 = "POST";
var d2 = { headers: j5, method: T2 };
var g4 = 10;
var f2 = class {
  constructor(t, e2 = false) {
    if (this.url = t, this.disableProviderPing = e2, this.events = new import_events7.EventEmitter(), this.isAvailable = false, this.registering = false, !isHttpUrl(t)) throw new Error(`Provided URL is not compatible with HTTP connection: ${t}`);
    this.url = t, this.disableProviderPing = e2;
  }
  get connected() {
    return this.isAvailable;
  }
  get connecting() {
    return this.registering;
  }
  on(t, e2) {
    this.events.on(t, e2);
  }
  once(t, e2) {
    this.events.once(t, e2);
  }
  off(t, e2) {
    this.events.off(t, e2);
  }
  removeListener(t, e2) {
    this.events.removeListener(t, e2);
  }
  async open(t = this.url) {
    await this.register(t);
  }
  async close() {
    if (!this.isAvailable) throw new Error("Connection already closed");
    this.onClose();
  }
  async send(t) {
    this.isAvailable || await this.register();
    try {
      const e2 = safeJsonStringify(t), s2 = await (await (0, import_cross_fetch.default)(this.url, v2(p5({}, d2), { body: e2 }))).json();
      this.onPayload({ data: s2 });
    } catch (e2) {
      this.onError(t.id, e2);
    }
  }
  async register(t = this.url) {
    if (!isHttpUrl(t)) throw new Error(`Provided URL is not compatible with HTTP connection: ${t}`);
    if (this.registering) {
      const e2 = this.events.getMaxListeners();
      return (this.events.listenerCount("register_error") >= e2 || this.events.listenerCount("open") >= e2) && this.events.setMaxListeners(e2 + 1), new Promise((s2, i3) => {
        this.events.once("register_error", (n4) => {
          this.resetMaxListeners(), i3(n4);
        }), this.events.once("open", () => {
          if (this.resetMaxListeners(), typeof this.isAvailable > "u") return i3(new Error("HTTP connection is missing or invalid"));
          s2();
        });
      });
    }
    this.url = t, this.registering = true;
    try {
      if (!this.disableProviderPing) {
        const e2 = safeJsonStringify({ id: 1, jsonrpc: "2.0", method: "test", params: [] });
        await (0, import_cross_fetch.default)(t, v2(p5({}, d2), { body: e2 }));
      }
      this.onOpen();
    } catch (e2) {
      const s2 = this.parseError(e2);
      throw this.events.emit("register_error", s2), this.onClose(), s2;
    }
  }
  onOpen() {
    this.isAvailable = true, this.registering = false, this.events.emit("open");
  }
  onClose() {
    this.isAvailable = false, this.registering = false, this.events.emit("close");
  }
  onPayload(t) {
    if (typeof t.data > "u") return;
    const e2 = typeof t.data == "string" ? safeJsonParse(t.data) : t.data;
    this.events.emit("payload", e2);
  }
  onError(t, e2) {
    const s2 = this.parseError(e2), i3 = s2.message || s2.toString(), n4 = formatJsonRpcError(t, i3);
    this.events.emit("payload", n4);
  }
  parseError(t, e2 = this.url) {
    return parseConnectionError(t, e2, "HTTP");
  }
  resetMaxListeners() {
    this.events.getMaxListeners() > g4 && this.events.setMaxListeners(g4);
  }
};

// node_modules/@walletconnect/universal-provider/node_modules/@walletconnect/jsonrpc-provider/dist/esm/provider.js
var import_events8 = __toESM(require_events());
var JsonRpcProvider2 = class extends r {
  constructor(connection) {
    super(connection);
    this.events = new import_events8.EventEmitter();
    this.hasRegisteredEventListeners = false;
    this.connection = this.setConnection(connection);
    if (this.connection.connected) {
      this.registerEventListeners();
    }
  }
  async connect(connection = this.connection) {
    await this.open(connection);
  }
  async disconnect() {
    await this.close();
  }
  on(event, listener) {
    this.events.on(event, listener);
  }
  once(event, listener) {
    this.events.once(event, listener);
  }
  off(event, listener) {
    this.events.off(event, listener);
  }
  removeListener(event, listener) {
    this.events.removeListener(event, listener);
  }
  async request(request, context) {
    return this.requestStrict(formatJsonRpcRequest(request.method, request.params || [], request.id || getBigIntRpcId().toString()), context);
  }
  async requestStrict(request, context) {
    return new Promise(async (resolve, reject) => {
      if (!this.connection.connected) {
        try {
          await this.open();
        } catch (e2) {
          reject(e2);
        }
      }
      this.events.on(`${request.id}`, (response) => {
        if (isJsonRpcError(response)) {
          reject(response.error);
        } else {
          resolve(response.result);
        }
      });
      try {
        await this.connection.send(request, context);
      } catch (e2) {
        reject(e2);
      }
    });
  }
  setConnection(connection = this.connection) {
    return connection;
  }
  onPayload(payload) {
    this.events.emit("payload", payload);
    if (isJsonRpcResponse(payload)) {
      this.events.emit(`${payload.id}`, payload);
    } else {
      this.events.emit("message", {
        type: payload.method,
        data: payload.params
      });
    }
  }
  onClose(event) {
    if (event && event.code === 3e3) {
      this.events.emit("error", new Error(`WebSocket connection closed abnormally with code: ${event.code} ${event.reason ? `(${event.reason})` : ""}`));
    }
    this.events.emit("disconnect");
  }
  async open(connection = this.connection) {
    if (this.connection === connection && this.connection.connected)
      return;
    if (this.connection.connected)
      this.close();
    if (typeof connection === "string") {
      await this.connection.open(connection);
      connection = this.connection;
    }
    this.connection = this.setConnection(connection);
    await this.connection.open();
    this.registerEventListeners();
    this.events.emit("connect");
  }
  async close() {
    await this.connection.close();
  }
  registerEventListeners() {
    if (this.hasRegisteredEventListeners)
      return;
    this.connection.on("payload", (payload) => this.onPayload(payload));
    this.connection.on("close", (event) => this.onClose(event));
    this.connection.on("error", (error) => this.events.emit("error", error));
    this.connection.on("register_error", (error) => this.onClose());
    this.hasRegisteredEventListeners = true;
  }
};

// node_modules/@walletconnect/universal-provider/dist/index.es.js
var import_events9 = __toESM(require_events());
var Ca = "error";
var Hg = "wss://relay.walletconnect.com";
var $g = "wc";
var Ug = "universal_provider";
var Ia = `${$g}@2:${Ug}:`;
var Wg = "https://rpc.walletconnect.com/v1";
var ot3 = { DEFAULT_CHAIN_CHANGED: "default_chain_changed" };
var pe5 = typeof globalThis < "u" ? globalThis : typeof window < "u" ? window : typeof global < "u" ? global : typeof self < "u" ? self : {};
var $i2 = { exports: {} };
(function(C4, u3) {
  (function() {
    var i3, p7 = "4.17.21", I2 = 200, D4 = "Unsupported core-js use. Try https://npms.io/search?q=ponyfill.", F = "Expected a function", Fn3 = "Invalid `variable` option passed into `_.template`", Gt3 = "__lodash_hash_undefined__", lr3 = 500, At3 = "__lodash_placeholder__", Ln2 = 1, Mn3 = 2, Ct3 = 4, It3 = 1, de3 = 2, vn3 = 1, ft4 = 2, Mi2 = 4, Dn2 = 8, xt4 = 16, Nn2 = 32, Et3 = 64, qn3 = 128, zt3 = 256, pr3 = 512, Ta = 30, La = "...", Da = 800, Na = 16, qi2 = 1, Ha = 2, $a = 3, ct4 = 1 / 0, kn3 = 9007199254740991, Ua = 17976931348623157e292, ge3 = 0 / 0, Hn2 = 4294967295, Wa = Hn2 - 1, Fa = Hn2 >>> 1, Ma = [["ary", qn3], ["bind", vn3], ["bindKey", ft4], ["curry", Dn2], ["curryRight", xt4], ["flip", pr3], ["partial", Nn2], ["partialRight", Et3], ["rearg", zt3]], yt4 = "[object Arguments]", ve3 = "[object Array]", qa = "[object AsyncFunction]", Kt4 = "[object Boolean]", Yt2 = "[object Date]", Ba = "[object DOMException]", _e3 = "[object Error]", me2 = "[object Function]", Bi2 = "[object GeneratorFunction]", yn2 = "[object Map]", Zt2 = "[object Number]", Ga = "[object Null]", Bn3 = "[object Object]", Gi2 = "[object Promise]", za = "[object Proxy]", Jt2 = "[object RegExp]", Sn2 = "[object Set]", Xt2 = "[object String]", we3 = "[object Symbol]", Ka = "[object Undefined]", Qt2 = "[object WeakMap]", Ya = "[object WeakSet]", Vt4 = "[object ArrayBuffer]", St4 = "[object DataView]", dr3 = "[object Float32Array]", gr3 = "[object Float64Array]", vr3 = "[object Int8Array]", _r3 = "[object Int16Array]", mr3 = "[object Int32Array]", wr3 = "[object Uint8Array]", Pr2 = "[object Uint8ClampedArray]", Ar2 = "[object Uint16Array]", Cr3 = "[object Uint32Array]", Za = /\b__p \+= '';/g, Ja = /\b(__p \+=) '' \+/g, Xa = /(__e\(.*?\)|\b__t\)) \+\n'';/g, zi = /&(?:amp|lt|gt|quot|#39);/g, Ki2 = /[&<>"']/g, Qa = RegExp(zi.source), Va = RegExp(Ki2.source), ka = /<%-([\s\S]+?)%>/g, ja = /<%([\s\S]+?)%>/g, Yi2 = /<%=([\s\S]+?)%>/g, no2 = /\.|\[(?:[^[\]]*|(["'])(?:(?!\1)[^\\]|\\.)*?\1)\]/, to2 = /^\w*$/, eo2 = /[^.[\]]+|\[(?:(-?\d+(?:\.\d+)?)|(["'])((?:(?!\2)[^\\]|\\.)*?)\2)\]|(?=(?:\.|\[\])(?:\.|\[\]|$))/g, Ir3 = /[\\^$.*+?()[\]{}|]/g, ro2 = RegExp(Ir3.source), xr2 = /^\s+/, io2 = /\s/, so2 = /\{(?:\n\/\* \[wrapped with .+\] \*\/)?\n?/, uo2 = /\{\n\/\* \[wrapped with (.+)\] \*/, ao2 = /,? & /, oo2 = /[^\x00-\x2f\x3a-\x40\x5b-\x60\x7b-\x7f]+/g, fo2 = /[()=,{}\[\]\/\s]/, co2 = /\\(\\)?/g, ho2 = /\$\{([^\\}]*(?:\\.[^\\}]*)*)\}/g, Zi2 = /\w*$/, lo2 = /^[-+]0x[0-9a-f]+$/i, po2 = /^0b[01]+$/i, go2 = /^\[object .+?Constructor\]$/, vo2 = /^0o[0-7]+$/i, _o2 = /^(?:0|[1-9]\d*)$/, mo2 = /[\xc0-\xd6\xd8-\xf6\xf8-\xff\u0100-\u017f]/g, Pe3 = /($^)/, wo2 = /['\n\r\u2028\u2029\\]/g, Ae4 = "\\ud800-\\udfff", Po2 = "\\u0300-\\u036f", Ao2 = "\\ufe20-\\ufe2f", Co2 = "\\u20d0-\\u20ff", Ji2 = Po2 + Ao2 + Co2, Xi2 = "\\u2700-\\u27bf", Qi2 = "a-z\\xdf-\\xf6\\xf8-\\xff", Io2 = "\\xac\\xb1\\xd7\\xf7", xo2 = "\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\xbf", Eo2 = "\\u2000-\\u206f", yo2 = " \\t\\x0b\\f\\xa0\\ufeff\\n\\r\\u2028\\u2029\\u1680\\u180e\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u202f\\u205f\\u3000", Vi2 = "A-Z\\xc0-\\xd6\\xd8-\\xde", ki2 = "\\ufe0e\\ufe0f", ji2 = Io2 + xo2 + Eo2 + yo2, Er3 = "['’]", So2 = "[" + Ae4 + "]", ns3 = "[" + ji2 + "]", Ce4 = "[" + Ji2 + "]", ts3 = "\\d+", Oo2 = "[" + Xi2 + "]", es2 = "[" + Qi2 + "]", rs3 = "[^" + Ae4 + ji2 + ts3 + Xi2 + Qi2 + Vi2 + "]", yr3 = "\\ud83c[\\udffb-\\udfff]", Ro2 = "(?:" + Ce4 + "|" + yr3 + ")", is3 = "[^" + Ae4 + "]", Sr3 = "(?:\\ud83c[\\udde6-\\uddff]){2}", Or2 = "[\\ud800-\\udbff][\\udc00-\\udfff]", Ot3 = "[" + Vi2 + "]", ss2 = "\\u200d", us2 = "(?:" + es2 + "|" + rs3 + ")", bo2 = "(?:" + Ot3 + "|" + rs3 + ")", as3 = "(?:" + Er3 + "(?:d|ll|m|re|s|t|ve))?", os3 = "(?:" + Er3 + "(?:D|LL|M|RE|S|T|VE))?", fs2 = Ro2 + "?", cs3 = "[" + ki2 + "]?", To2 = "(?:" + ss2 + "(?:" + [is3, Sr3, Or2].join("|") + ")" + cs3 + fs2 + ")*", Lo2 = "\\d*(?:1st|2nd|3rd|(?![123])\\dth)(?=\\b|[A-Z_])", Do2 = "\\d*(?:1ST|2ND|3RD|(?![123])\\dTH)(?=\\b|[a-z_])", hs2 = cs3 + fs2 + To2, No2 = "(?:" + [Oo2, Sr3, Or2].join("|") + ")" + hs2, Ho2 = "(?:" + [is3 + Ce4 + "?", Ce4, Sr3, Or2, So2].join("|") + ")", $o2 = RegExp(Er3, "g"), Uo2 = RegExp(Ce4, "g"), Rr3 = RegExp(yr3 + "(?=" + yr3 + ")|" + Ho2 + hs2, "g"), Wo2 = RegExp([Ot3 + "?" + es2 + "+" + as3 + "(?=" + [ns3, Ot3, "$"].join("|") + ")", bo2 + "+" + os3 + "(?=" + [ns3, Ot3 + us2, "$"].join("|") + ")", Ot3 + "?" + us2 + "+" + as3, Ot3 + "+" + os3, Do2, Lo2, ts3, No2].join("|"), "g"), Fo2 = RegExp("[" + ss2 + Ae4 + Ji2 + ki2 + "]"), Mo2 = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/, qo2 = ["Array", "Buffer", "DataView", "Date", "Error", "Float32Array", "Float64Array", "Function", "Int8Array", "Int16Array", "Int32Array", "Map", "Math", "Object", "Promise", "RegExp", "Set", "String", "Symbol", "TypeError", "Uint8Array", "Uint8ClampedArray", "Uint16Array", "Uint32Array", "WeakMap", "_", "clearTimeout", "isFinite", "parseInt", "setTimeout"], Bo2 = -1, B2 = {};
    B2[dr3] = B2[gr3] = B2[vr3] = B2[_r3] = B2[mr3] = B2[wr3] = B2[Pr2] = B2[Ar2] = B2[Cr3] = true, B2[yt4] = B2[ve3] = B2[Vt4] = B2[Kt4] = B2[St4] = B2[Yt2] = B2[_e3] = B2[me2] = B2[yn2] = B2[Zt2] = B2[Bn3] = B2[Jt2] = B2[Sn2] = B2[Xt2] = B2[Qt2] = false;
    var q3 = {};
    q3[yt4] = q3[ve3] = q3[Vt4] = q3[St4] = q3[Kt4] = q3[Yt2] = q3[dr3] = q3[gr3] = q3[vr3] = q3[_r3] = q3[mr3] = q3[yn2] = q3[Zt2] = q3[Bn3] = q3[Jt2] = q3[Sn2] = q3[Xt2] = q3[we3] = q3[wr3] = q3[Pr2] = q3[Ar2] = q3[Cr3] = true, q3[_e3] = q3[me2] = q3[Qt2] = false;
    var Go2 = { À: "A", Á: "A", Â: "A", Ã: "A", Ä: "A", Å: "A", à: "a", á: "a", â: "a", ã: "a", ä: "a", å: "a", Ç: "C", ç: "c", Ð: "D", ð: "d", È: "E", É: "E", Ê: "E", Ë: "E", è: "e", é: "e", ê: "e", ë: "e", Ì: "I", Í: "I", Î: "I", Ï: "I", ì: "i", í: "i", î: "i", ï: "i", Ñ: "N", ñ: "n", Ò: "O", Ó: "O", Ô: "O", Õ: "O", Ö: "O", Ø: "O", ò: "o", ó: "o", ô: "o", õ: "o", ö: "o", ø: "o", Ù: "U", Ú: "U", Û: "U", Ü: "U", ù: "u", ú: "u", û: "u", ü: "u", Ý: "Y", ý: "y", ÿ: "y", Æ: "Ae", æ: "ae", Þ: "Th", þ: "th", ß: "ss", Ā: "A", Ă: "A", Ą: "A", ā: "a", ă: "a", ą: "a", Ć: "C", Ĉ: "C", Ċ: "C", Č: "C", ć: "c", ĉ: "c", ċ: "c", č: "c", Ď: "D", Đ: "D", ď: "d", đ: "d", Ē: "E", Ĕ: "E", Ė: "E", Ę: "E", Ě: "E", ē: "e", ĕ: "e", ė: "e", ę: "e", ě: "e", Ĝ: "G", Ğ: "G", Ġ: "G", Ģ: "G", ĝ: "g", ğ: "g", ġ: "g", ģ: "g", Ĥ: "H", Ħ: "H", ĥ: "h", ħ: "h", Ĩ: "I", Ī: "I", Ĭ: "I", Į: "I", İ: "I", ĩ: "i", ī: "i", ĭ: "i", į: "i", ı: "i", Ĵ: "J", ĵ: "j", Ķ: "K", ķ: "k", ĸ: "k", Ĺ: "L", Ļ: "L", Ľ: "L", Ŀ: "L", Ł: "L", ĺ: "l", ļ: "l", ľ: "l", ŀ: "l", ł: "l", Ń: "N", Ņ: "N", Ň: "N", Ŋ: "N", ń: "n", ņ: "n", ň: "n", ŋ: "n", Ō: "O", Ŏ: "O", Ő: "O", ō: "o", ŏ: "o", ő: "o", Ŕ: "R", Ŗ: "R", Ř: "R", ŕ: "r", ŗ: "r", ř: "r", Ś: "S", Ŝ: "S", Ş: "S", Š: "S", ś: "s", ŝ: "s", ş: "s", š: "s", Ţ: "T", Ť: "T", Ŧ: "T", ţ: "t", ť: "t", ŧ: "t", Ũ: "U", Ū: "U", Ŭ: "U", Ů: "U", Ű: "U", Ų: "U", ũ: "u", ū: "u", ŭ: "u", ů: "u", ű: "u", ų: "u", Ŵ: "W", ŵ: "w", Ŷ: "Y", ŷ: "y", Ÿ: "Y", Ź: "Z", Ż: "Z", Ž: "Z", ź: "z", ż: "z", ž: "z", Ĳ: "IJ", ĳ: "ij", Œ: "Oe", œ: "oe", ŉ: "'n", ſ: "s" }, zo2 = { "&": "&amp;", "<": "&lt;", ">": "&gt;", '"': "&quot;", "'": "&#39;" }, Ko2 = { "&amp;": "&", "&lt;": "<", "&gt;": ">", "&quot;": '"', "&#39;": "'" }, Yo2 = { "\\": "\\", "'": "'", "\n": "n", "\r": "r", "\u2028": "u2028", "\u2029": "u2029" }, Zo2 = parseFloat, Jo2 = parseInt, ls3 = typeof pe5 == "object" && pe5 && pe5.Object === Object && pe5, Xo = typeof self == "object" && self && self.Object === Object && self, k4 = ls3 || Xo || Function("return this")(), br3 = u3 && !u3.nodeType && u3, ht3 = br3 && true && C4 && !C4.nodeType && C4, ps3 = ht3 && ht3.exports === br3, Tr3 = ps3 && ls3.process, _n3 = function() {
      try {
        var h4 = ht3 && ht3.require && ht3.require("util").types;
        return h4 || Tr3 && Tr3.binding && Tr3.binding("util");
      } catch {
      }
    }(), ds2 = _n3 && _n3.isArrayBuffer, gs2 = _n3 && _n3.isDate, vs2 = _n3 && _n3.isMap, _s2 = _n3 && _n3.isRegExp, ms2 = _n3 && _n3.isSet, ws2 = _n3 && _n3.isTypedArray;
    function cn2(h4, g6, d3) {
      switch (d3.length) {
        case 0:
          return h4.call(g6);
        case 1:
          return h4.call(g6, d3[0]);
        case 2:
          return h4.call(g6, d3[0], d3[1]);
        case 3:
          return h4.call(g6, d3[0], d3[1], d3[2]);
      }
      return h4.apply(g6, d3);
    }
    function Qo2(h4, g6, d3, P5) {
      for (var S5 = -1, $5 = h4 == null ? 0 : h4.length; ++S5 < $5; ) {
        var X3 = h4[S5];
        g6(P5, X3, d3(X3), h4);
      }
      return P5;
    }
    function mn3(h4, g6) {
      for (var d3 = -1, P5 = h4 == null ? 0 : h4.length; ++d3 < P5 && g6(h4[d3], d3, h4) !== false; ) ;
      return h4;
    }
    function Vo2(h4, g6) {
      for (var d3 = h4 == null ? 0 : h4.length; d3-- && g6(h4[d3], d3, h4) !== false; ) ;
      return h4;
    }
    function Ps2(h4, g6) {
      for (var d3 = -1, P5 = h4 == null ? 0 : h4.length; ++d3 < P5; ) if (!g6(h4[d3], d3, h4)) return false;
      return true;
    }
    function jn3(h4, g6) {
      for (var d3 = -1, P5 = h4 == null ? 0 : h4.length, S5 = 0, $5 = []; ++d3 < P5; ) {
        var X3 = h4[d3];
        g6(X3, d3, h4) && ($5[S5++] = X3);
      }
      return $5;
    }
    function Ie4(h4, g6) {
      var d3 = h4 == null ? 0 : h4.length;
      return !!d3 && Rt4(h4, g6, 0) > -1;
    }
    function Lr2(h4, g6, d3) {
      for (var P5 = -1, S5 = h4 == null ? 0 : h4.length; ++P5 < S5; ) if (d3(g6, h4[P5])) return true;
      return false;
    }
    function G5(h4, g6) {
      for (var d3 = -1, P5 = h4 == null ? 0 : h4.length, S5 = Array(P5); ++d3 < P5; ) S5[d3] = g6(h4[d3], d3, h4);
      return S5;
    }
    function nt4(h4, g6) {
      for (var d3 = -1, P5 = g6.length, S5 = h4.length; ++d3 < P5; ) h4[S5 + d3] = g6[d3];
      return h4;
    }
    function Dr3(h4, g6, d3, P5) {
      var S5 = -1, $5 = h4 == null ? 0 : h4.length;
      for (P5 && $5 && (d3 = h4[++S5]); ++S5 < $5; ) d3 = g6(d3, h4[S5], S5, h4);
      return d3;
    }
    function ko2(h4, g6, d3, P5) {
      var S5 = h4 == null ? 0 : h4.length;
      for (P5 && S5 && (d3 = h4[--S5]); S5--; ) d3 = g6(d3, h4[S5], S5, h4);
      return d3;
    }
    function Nr2(h4, g6) {
      for (var d3 = -1, P5 = h4 == null ? 0 : h4.length; ++d3 < P5; ) if (g6(h4[d3], d3, h4)) return true;
      return false;
    }
    var jo2 = Hr2("length");
    function nf(h4) {
      return h4.split("");
    }
    function tf(h4) {
      return h4.match(oo2) || [];
    }
    function As2(h4, g6, d3) {
      var P5;
      return d3(h4, function(S5, $5, X3) {
        if (g6(S5, $5, X3)) return P5 = $5, false;
      }), P5;
    }
    function xe4(h4, g6, d3, P5) {
      for (var S5 = h4.length, $5 = d3 + (P5 ? 1 : -1); P5 ? $5-- : ++$5 < S5; ) if (g6(h4[$5], $5, h4)) return $5;
      return -1;
    }
    function Rt4(h4, g6, d3) {
      return g6 === g6 ? df(h4, g6, d3) : xe4(h4, Cs2, d3);
    }
    function ef(h4, g6, d3, P5) {
      for (var S5 = d3 - 1, $5 = h4.length; ++S5 < $5; ) if (P5(h4[S5], g6)) return S5;
      return -1;
    }
    function Cs2(h4) {
      return h4 !== h4;
    }
    function Is2(h4, g6) {
      var d3 = h4 == null ? 0 : h4.length;
      return d3 ? Ur2(h4, g6) / d3 : ge3;
    }
    function Hr2(h4) {
      return function(g6) {
        return g6 == null ? i3 : g6[h4];
      };
    }
    function $r2(h4) {
      return function(g6) {
        return h4 == null ? i3 : h4[g6];
      };
    }
    function xs2(h4, g6, d3, P5, S5) {
      return S5(h4, function($5, X3, M6) {
        d3 = P5 ? (P5 = false, $5) : g6(d3, $5, X3, M6);
      }), d3;
    }
    function rf(h4, g6) {
      var d3 = h4.length;
      for (h4.sort(g6); d3--; ) h4[d3] = h4[d3].value;
      return h4;
    }
    function Ur2(h4, g6) {
      for (var d3, P5 = -1, S5 = h4.length; ++P5 < S5; ) {
        var $5 = g6(h4[P5]);
        $5 !== i3 && (d3 = d3 === i3 ? $5 : d3 + $5);
      }
      return d3;
    }
    function Wr2(h4, g6) {
      for (var d3 = -1, P5 = Array(h4); ++d3 < h4; ) P5[d3] = g6(d3);
      return P5;
    }
    function sf(h4, g6) {
      return G5(g6, function(d3) {
        return [d3, h4[d3]];
      });
    }
    function Es2(h4) {
      return h4 && h4.slice(0, Rs2(h4) + 1).replace(xr2, "");
    }
    function hn2(h4) {
      return function(g6) {
        return h4(g6);
      };
    }
    function Fr2(h4, g6) {
      return G5(g6, function(d3) {
        return h4[d3];
      });
    }
    function kt4(h4, g6) {
      return h4.has(g6);
    }
    function ys2(h4, g6) {
      for (var d3 = -1, P5 = h4.length; ++d3 < P5 && Rt4(g6, h4[d3], 0) > -1; ) ;
      return d3;
    }
    function Ss2(h4, g6) {
      for (var d3 = h4.length; d3-- && Rt4(g6, h4[d3], 0) > -1; ) ;
      return d3;
    }
    function uf(h4, g6) {
      for (var d3 = h4.length, P5 = 0; d3--; ) h4[d3] === g6 && ++P5;
      return P5;
    }
    var af = $r2(Go2), of = $r2(zo2);
    function ff(h4) {
      return "\\" + Yo2[h4];
    }
    function cf(h4, g6) {
      return h4 == null ? i3 : h4[g6];
    }
    function bt3(h4) {
      return Fo2.test(h4);
    }
    function hf(h4) {
      return Mo2.test(h4);
    }
    function lf(h4) {
      for (var g6, d3 = []; !(g6 = h4.next()).done; ) d3.push(g6.value);
      return d3;
    }
    function Mr2(h4) {
      var g6 = -1, d3 = Array(h4.size);
      return h4.forEach(function(P5, S5) {
        d3[++g6] = [S5, P5];
      }), d3;
    }
    function Os2(h4, g6) {
      return function(d3) {
        return h4(g6(d3));
      };
    }
    function tt3(h4, g6) {
      for (var d3 = -1, P5 = h4.length, S5 = 0, $5 = []; ++d3 < P5; ) {
        var X3 = h4[d3];
        (X3 === g6 || X3 === At3) && (h4[d3] = At3, $5[S5++] = d3);
      }
      return $5;
    }
    function Ee2(h4) {
      var g6 = -1, d3 = Array(h4.size);
      return h4.forEach(function(P5) {
        d3[++g6] = P5;
      }), d3;
    }
    function pf(h4) {
      var g6 = -1, d3 = Array(h4.size);
      return h4.forEach(function(P5) {
        d3[++g6] = [P5, P5];
      }), d3;
    }
    function df(h4, g6, d3) {
      for (var P5 = d3 - 1, S5 = h4.length; ++P5 < S5; ) if (h4[P5] === g6) return P5;
      return -1;
    }
    function gf(h4, g6, d3) {
      for (var P5 = d3 + 1; P5--; ) if (h4[P5] === g6) return P5;
      return P5;
    }
    function Tt4(h4) {
      return bt3(h4) ? _f(h4) : jo2(h4);
    }
    function On3(h4) {
      return bt3(h4) ? mf(h4) : nf(h4);
    }
    function Rs2(h4) {
      for (var g6 = h4.length; g6-- && io2.test(h4.charAt(g6)); ) ;
      return g6;
    }
    var vf = $r2(Ko2);
    function _f(h4) {
      for (var g6 = Rr3.lastIndex = 0; Rr3.test(h4); ) ++g6;
      return g6;
    }
    function mf(h4) {
      return h4.match(Rr3) || [];
    }
    function wf(h4) {
      return h4.match(Wo2) || [];
    }
    var Pf = function h4(g6) {
      g6 = g6 == null ? k4 : Lt4.defaults(k4.Object(), g6, Lt4.pick(k4, qo2));
      var d3 = g6.Array, P5 = g6.Date, S5 = g6.Error, $5 = g6.Function, X3 = g6.Math, M6 = g6.Object, qr2 = g6.RegExp, Af = g6.String, wn2 = g6.TypeError, ye2 = d3.prototype, Cf = $5.prototype, Dt4 = M6.prototype, Se3 = g6["__core-js_shared__"], Oe4 = Cf.toString, W3 = Dt4.hasOwnProperty, If = 0, bs2 = function() {
        var n4 = /[^.]+$/.exec(Se3 && Se3.keys && Se3.keys.IE_PROTO || "");
        return n4 ? "Symbol(src)_1." + n4 : "";
      }(), Re3 = Dt4.toString, xf = Oe4.call(M6), Ef = k4._, yf = qr2("^" + Oe4.call(W3).replace(Ir3, "\\$&").replace(/hasOwnProperty|(function).*?(?=\\\()| for .+?(?=\\\])/g, "$1.*?") + "$"), be2 = ps3 ? g6.Buffer : i3, et3 = g6.Symbol, Te3 = g6.Uint8Array, Ts2 = be2 ? be2.allocUnsafe : i3, Le3 = Os2(M6.getPrototypeOf, M6), Ls2 = M6.create, Ds2 = Dt4.propertyIsEnumerable, De3 = ye2.splice, Ns2 = et3 ? et3.isConcatSpreadable : i3, jt3 = et3 ? et3.iterator : i3, lt3 = et3 ? et3.toStringTag : i3, Ne3 = function() {
        try {
          var n4 = _t4(M6, "defineProperty");
          return n4({}, "", {}), n4;
        } catch {
        }
      }(), Sf = g6.clearTimeout !== k4.clearTimeout && g6.clearTimeout, Of = P5 && P5.now !== k4.Date.now && P5.now, Rf = g6.setTimeout !== k4.setTimeout && g6.setTimeout, He4 = X3.ceil, $e4 = X3.floor, Br2 = M6.getOwnPropertySymbols, bf = be2 ? be2.isBuffer : i3, Hs2 = g6.isFinite, Tf = ye2.join, Lf = Os2(M6.keys, M6), Q4 = X3.max, nn2 = X3.min, Df = P5.now, Nf = g6.parseInt, $s2 = X3.random, Hf = ye2.reverse, Gr2 = _t4(g6, "DataView"), ne4 = _t4(g6, "Map"), zr2 = _t4(g6, "Promise"), Nt3 = _t4(g6, "Set"), te4 = _t4(g6, "WeakMap"), ee3 = _t4(M6, "create"), Ue4 = te4 && new te4(), Ht3 = {}, $f = mt3(Gr2), Uf = mt3(ne4), Wf = mt3(zr2), Ff = mt3(Nt3), Mf = mt3(te4), We4 = et3 ? et3.prototype : i3, re2 = We4 ? We4.valueOf : i3, Us2 = We4 ? We4.toString : i3;
      function a2(n4) {
        if (K4(n4) && !O7(n4) && !(n4 instanceof N14)) {
          if (n4 instanceof Pn2) return n4;
          if (W3.call(n4, "__wrapped__")) return Wu(n4);
        }
        return new Pn2(n4);
      }
      var $t4 = /* @__PURE__ */ function() {
        function n4() {
        }
        return function(t) {
          if (!z4(t)) return {};
          if (Ls2) return Ls2(t);
          n4.prototype = t;
          var e2 = new n4();
          return n4.prototype = i3, e2;
        };
      }();
      function Fe3() {
      }
      function Pn2(n4, t) {
        this.__wrapped__ = n4, this.__actions__ = [], this.__chain__ = !!t, this.__index__ = 0, this.__values__ = i3;
      }
      a2.templateSettings = { escape: ka, evaluate: ja, interpolate: Yi2, variable: "", imports: { _: a2 } }, a2.prototype = Fe3.prototype, a2.prototype.constructor = a2, Pn2.prototype = $t4(Fe3.prototype), Pn2.prototype.constructor = Pn2;
      function N14(n4) {
        this.__wrapped__ = n4, this.__actions__ = [], this.__dir__ = 1, this.__filtered__ = false, this.__iteratees__ = [], this.__takeCount__ = Hn2, this.__views__ = [];
      }
      function qf() {
        var n4 = new N14(this.__wrapped__);
        return n4.__actions__ = un2(this.__actions__), n4.__dir__ = this.__dir__, n4.__filtered__ = this.__filtered__, n4.__iteratees__ = un2(this.__iteratees__), n4.__takeCount__ = this.__takeCount__, n4.__views__ = un2(this.__views__), n4;
      }
      function Bf() {
        if (this.__filtered__) {
          var n4 = new N14(this);
          n4.__dir__ = -1, n4.__filtered__ = true;
        } else n4 = this.clone(), n4.__dir__ *= -1;
        return n4;
      }
      function Gf() {
        var n4 = this.__wrapped__.value(), t = this.__dir__, e2 = O7(n4), r2 = t < 0, s2 = e2 ? n4.length : 0, o3 = th(0, s2, this.__views__), f4 = o3.start, c5 = o3.end, l4 = c5 - f4, v4 = r2 ? c5 : f4 - 1, _5 = this.__iteratees__, m4 = _5.length, w5 = 0, A3 = nn2(l4, this.__takeCount__);
        if (!e2 || !r2 && s2 == l4 && A3 == l4) return au(n4, this.__actions__);
        var E6 = [];
        n: for (; l4-- && w5 < A3; ) {
          v4 += t;
          for (var b5 = -1, y6 = n4[v4]; ++b5 < m4; ) {
            var L5 = _5[b5], H5 = L5.iteratee, dn = L5.type, sn2 = H5(y6);
            if (dn == Ha) y6 = sn2;
            else if (!sn2) {
              if (dn == qi2) continue n;
              break n;
            }
          }
          E6[w5++] = y6;
        }
        return E6;
      }
      N14.prototype = $t4(Fe3.prototype), N14.prototype.constructor = N14;
      function pt3(n4) {
        var t = -1, e2 = n4 == null ? 0 : n4.length;
        for (this.clear(); ++t < e2; ) {
          var r2 = n4[t];
          this.set(r2[0], r2[1]);
        }
      }
      function zf() {
        this.__data__ = ee3 ? ee3(null) : {}, this.size = 0;
      }
      function Kf(n4) {
        var t = this.has(n4) && delete this.__data__[n4];
        return this.size -= t ? 1 : 0, t;
      }
      function Yf(n4) {
        var t = this.__data__;
        if (ee3) {
          var e2 = t[n4];
          return e2 === Gt3 ? i3 : e2;
        }
        return W3.call(t, n4) ? t[n4] : i3;
      }
      function Zf(n4) {
        var t = this.__data__;
        return ee3 ? t[n4] !== i3 : W3.call(t, n4);
      }
      function Jf(n4, t) {
        var e2 = this.__data__;
        return this.size += this.has(n4) ? 0 : 1, e2[n4] = ee3 && t === i3 ? Gt3 : t, this;
      }
      pt3.prototype.clear = zf, pt3.prototype.delete = Kf, pt3.prototype.get = Yf, pt3.prototype.has = Zf, pt3.prototype.set = Jf;
      function Gn2(n4) {
        var t = -1, e2 = n4 == null ? 0 : n4.length;
        for (this.clear(); ++t < e2; ) {
          var r2 = n4[t];
          this.set(r2[0], r2[1]);
        }
      }
      function Xf() {
        this.__data__ = [], this.size = 0;
      }
      function Qf(n4) {
        var t = this.__data__, e2 = Me3(t, n4);
        if (e2 < 0) return false;
        var r2 = t.length - 1;
        return e2 == r2 ? t.pop() : De3.call(t, e2, 1), --this.size, true;
      }
      function Vf(n4) {
        var t = this.__data__, e2 = Me3(t, n4);
        return e2 < 0 ? i3 : t[e2][1];
      }
      function kf(n4) {
        return Me3(this.__data__, n4) > -1;
      }
      function jf(n4, t) {
        var e2 = this.__data__, r2 = Me3(e2, n4);
        return r2 < 0 ? (++this.size, e2.push([n4, t])) : e2[r2][1] = t, this;
      }
      Gn2.prototype.clear = Xf, Gn2.prototype.delete = Qf, Gn2.prototype.get = Vf, Gn2.prototype.has = kf, Gn2.prototype.set = jf;
      function zn2(n4) {
        var t = -1, e2 = n4 == null ? 0 : n4.length;
        for (this.clear(); ++t < e2; ) {
          var r2 = n4[t];
          this.set(r2[0], r2[1]);
        }
      }
      function nc() {
        this.size = 0, this.__data__ = { hash: new pt3(), map: new (ne4 || Gn2)(), string: new pt3() };
      }
      function tc(n4) {
        var t = ke5(this, n4).delete(n4);
        return this.size -= t ? 1 : 0, t;
      }
      function ec(n4) {
        return ke5(this, n4).get(n4);
      }
      function rc(n4) {
        return ke5(this, n4).has(n4);
      }
      function ic(n4, t) {
        var e2 = ke5(this, n4), r2 = e2.size;
        return e2.set(n4, t), this.size += e2.size == r2 ? 0 : 1, this;
      }
      zn2.prototype.clear = nc, zn2.prototype.delete = tc, zn2.prototype.get = ec, zn2.prototype.has = rc, zn2.prototype.set = ic;
      function dt4(n4) {
        var t = -1, e2 = n4 == null ? 0 : n4.length;
        for (this.__data__ = new zn2(); ++t < e2; ) this.add(n4[t]);
      }
      function sc(n4) {
        return this.__data__.set(n4, Gt3), this;
      }
      function uc(n4) {
        return this.__data__.has(n4);
      }
      dt4.prototype.add = dt4.prototype.push = sc, dt4.prototype.has = uc;
      function Rn3(n4) {
        var t = this.__data__ = new Gn2(n4);
        this.size = t.size;
      }
      function ac() {
        this.__data__ = new Gn2(), this.size = 0;
      }
      function oc(n4) {
        var t = this.__data__, e2 = t.delete(n4);
        return this.size = t.size, e2;
      }
      function fc(n4) {
        return this.__data__.get(n4);
      }
      function cc(n4) {
        return this.__data__.has(n4);
      }
      function hc(n4, t) {
        var e2 = this.__data__;
        if (e2 instanceof Gn2) {
          var r2 = e2.__data__;
          if (!ne4 || r2.length < I2 - 1) return r2.push([n4, t]), this.size = ++e2.size, this;
          e2 = this.__data__ = new zn2(r2);
        }
        return e2.set(n4, t), this.size = e2.size, this;
      }
      Rn3.prototype.clear = ac, Rn3.prototype.delete = oc, Rn3.prototype.get = fc, Rn3.prototype.has = cc, Rn3.prototype.set = hc;
      function Ws2(n4, t) {
        var e2 = O7(n4), r2 = !e2 && wt4(n4), s2 = !e2 && !r2 && at3(n4), o3 = !e2 && !r2 && !s2 && Mt4(n4), f4 = e2 || r2 || s2 || o3, c5 = f4 ? Wr2(n4.length, Af) : [], l4 = c5.length;
        for (var v4 in n4) (t || W3.call(n4, v4)) && !(f4 && (v4 == "length" || s2 && (v4 == "offset" || v4 == "parent") || o3 && (v4 == "buffer" || v4 == "byteLength" || v4 == "byteOffset") || Jn2(v4, l4))) && c5.push(v4);
        return c5;
      }
      function Fs2(n4) {
        var t = n4.length;
        return t ? n4[ti(0, t - 1)] : i3;
      }
      function lc(n4, t) {
        return je4(un2(n4), gt3(t, 0, n4.length));
      }
      function pc(n4) {
        return je4(un2(n4));
      }
      function Kr2(n4, t, e2) {
        (e2 !== i3 && !bn2(n4[t], e2) || e2 === i3 && !(t in n4)) && Kn3(n4, t, e2);
      }
      function ie3(n4, t, e2) {
        var r2 = n4[t];
        (!(W3.call(n4, t) && bn2(r2, e2)) || e2 === i3 && !(t in n4)) && Kn3(n4, t, e2);
      }
      function Me3(n4, t) {
        for (var e2 = n4.length; e2--; ) if (bn2(n4[e2][0], t)) return e2;
        return -1;
      }
      function dc(n4, t, e2, r2) {
        return rt4(n4, function(s2, o3, f4) {
          t(r2, s2, e2(s2), f4);
        }), r2;
      }
      function Ms2(n4, t) {
        return n4 && Un3(t, V3(t), n4);
      }
      function gc(n4, t) {
        return n4 && Un3(t, on3(t), n4);
      }
      function Kn3(n4, t, e2) {
        t == "__proto__" && Ne3 ? Ne3(n4, t, { configurable: true, enumerable: true, value: e2, writable: true }) : n4[t] = e2;
      }
      function Yr2(n4, t) {
        for (var e2 = -1, r2 = t.length, s2 = d3(r2), o3 = n4 == null; ++e2 < r2; ) s2[e2] = o3 ? i3 : yi(n4, t[e2]);
        return s2;
      }
      function gt3(n4, t, e2) {
        return n4 === n4 && (e2 !== i3 && (n4 = n4 <= e2 ? n4 : e2), t !== i3 && (n4 = n4 >= t ? n4 : t)), n4;
      }
      function An3(n4, t, e2, r2, s2, o3) {
        var f4, c5 = t & Ln2, l4 = t & Mn3, v4 = t & Ct3;
        if (e2 && (f4 = s2 ? e2(n4, r2, s2, o3) : e2(n4)), f4 !== i3) return f4;
        if (!z4(n4)) return n4;
        var _5 = O7(n4);
        if (_5) {
          if (f4 = rh(n4), !c5) return un2(n4, f4);
        } else {
          var m4 = tn2(n4), w5 = m4 == me2 || m4 == Bi2;
          if (at3(n4)) return cu(n4, c5);
          if (m4 == Bn3 || m4 == yt4 || w5 && !s2) {
            if (f4 = l4 || w5 ? {} : Ru(n4), !c5) return l4 ? Yc(n4, gc(f4, n4)) : Kc(n4, Ms2(f4, n4));
          } else {
            if (!q3[m4]) return s2 ? n4 : {};
            f4 = ih(n4, m4, c5);
          }
        }
        o3 || (o3 = new Rn3());
        var A3 = o3.get(n4);
        if (A3) return A3;
        o3.set(n4, f4), ia(n4) ? n4.forEach(function(y6) {
          f4.add(An3(y6, t, e2, y6, n4, o3));
        }) : ea(n4) && n4.forEach(function(y6, L5) {
          f4.set(L5, An3(y6, t, e2, L5, n4, o3));
        });
        var E6 = v4 ? l4 ? li : hi : l4 ? on3 : V3, b5 = _5 ? i3 : E6(n4);
        return mn3(b5 || n4, function(y6, L5) {
          b5 && (L5 = y6, y6 = n4[L5]), ie3(f4, L5, An3(y6, t, e2, L5, n4, o3));
        }), f4;
      }
      function vc(n4) {
        var t = V3(n4);
        return function(e2) {
          return qs2(e2, n4, t);
        };
      }
      function qs2(n4, t, e2) {
        var r2 = e2.length;
        if (n4 == null) return !r2;
        for (n4 = M6(n4); r2--; ) {
          var s2 = e2[r2], o3 = t[s2], f4 = n4[s2];
          if (f4 === i3 && !(s2 in n4) || !o3(f4)) return false;
        }
        return true;
      }
      function Bs2(n4, t, e2) {
        if (typeof n4 != "function") throw new wn2(F);
        return he3(function() {
          n4.apply(i3, e2);
        }, t);
      }
      function se3(n4, t, e2, r2) {
        var s2 = -1, o3 = Ie4, f4 = true, c5 = n4.length, l4 = [], v4 = t.length;
        if (!c5) return l4;
        e2 && (t = G5(t, hn2(e2))), r2 ? (o3 = Lr2, f4 = false) : t.length >= I2 && (o3 = kt4, f4 = false, t = new dt4(t));
        n: for (; ++s2 < c5; ) {
          var _5 = n4[s2], m4 = e2 == null ? _5 : e2(_5);
          if (_5 = r2 || _5 !== 0 ? _5 : 0, f4 && m4 === m4) {
            for (var w5 = v4; w5--; ) if (t[w5] === m4) continue n;
            l4.push(_5);
          } else o3(t, m4, r2) || l4.push(_5);
        }
        return l4;
      }
      var rt4 = gu($n3), Gs2 = gu(Jr2, true);
      function _c(n4, t) {
        var e2 = true;
        return rt4(n4, function(r2, s2, o3) {
          return e2 = !!t(r2, s2, o3), e2;
        }), e2;
      }
      function qe4(n4, t, e2) {
        for (var r2 = -1, s2 = n4.length; ++r2 < s2; ) {
          var o3 = n4[r2], f4 = t(o3);
          if (f4 != null && (c5 === i3 ? f4 === f4 && !pn2(f4) : e2(f4, c5))) var c5 = f4, l4 = o3;
        }
        return l4;
      }
      function mc(n4, t, e2, r2) {
        var s2 = n4.length;
        for (e2 = R2(e2), e2 < 0 && (e2 = -e2 > s2 ? 0 : s2 + e2), r2 = r2 === i3 || r2 > s2 ? s2 : R2(r2), r2 < 0 && (r2 += s2), r2 = e2 > r2 ? 0 : ua(r2); e2 < r2; ) n4[e2++] = t;
        return n4;
      }
      function zs2(n4, t) {
        var e2 = [];
        return rt4(n4, function(r2, s2, o3) {
          t(r2, s2, o3) && e2.push(r2);
        }), e2;
      }
      function j7(n4, t, e2, r2, s2) {
        var o3 = -1, f4 = n4.length;
        for (e2 || (e2 = uh), s2 || (s2 = []); ++o3 < f4; ) {
          var c5 = n4[o3];
          t > 0 && e2(c5) ? t > 1 ? j7(c5, t - 1, e2, r2, s2) : nt4(s2, c5) : r2 || (s2[s2.length] = c5);
        }
        return s2;
      }
      var Zr2 = vu(), Ks2 = vu(true);
      function $n3(n4, t) {
        return n4 && Zr2(n4, t, V3);
      }
      function Jr2(n4, t) {
        return n4 && Ks2(n4, t, V3);
      }
      function Be3(n4, t) {
        return jn3(t, function(e2) {
          return Xn3(n4[e2]);
        });
      }
      function vt3(n4, t) {
        t = st3(t, n4);
        for (var e2 = 0, r2 = t.length; n4 != null && e2 < r2; ) n4 = n4[Wn2(t[e2++])];
        return e2 && e2 == r2 ? n4 : i3;
      }
      function Ys2(n4, t, e2) {
        var r2 = t(n4);
        return O7(n4) ? r2 : nt4(r2, e2(n4));
      }
      function en3(n4) {
        return n4 == null ? n4 === i3 ? Ka : Ga : lt3 && lt3 in M6(n4) ? nh(n4) : ph(n4);
      }
      function Xr2(n4, t) {
        return n4 > t;
      }
      function wc(n4, t) {
        return n4 != null && W3.call(n4, t);
      }
      function Pc(n4, t) {
        return n4 != null && t in M6(n4);
      }
      function Ac(n4, t, e2) {
        return n4 >= nn2(t, e2) && n4 < Q4(t, e2);
      }
      function Qr2(n4, t, e2) {
        for (var r2 = e2 ? Lr2 : Ie4, s2 = n4[0].length, o3 = n4.length, f4 = o3, c5 = d3(o3), l4 = 1 / 0, v4 = []; f4--; ) {
          var _5 = n4[f4];
          f4 && t && (_5 = G5(_5, hn2(t))), l4 = nn2(_5.length, l4), c5[f4] = !e2 && (t || s2 >= 120 && _5.length >= 120) ? new dt4(f4 && _5) : i3;
        }
        _5 = n4[0];
        var m4 = -1, w5 = c5[0];
        n: for (; ++m4 < s2 && v4.length < l4; ) {
          var A3 = _5[m4], E6 = t ? t(A3) : A3;
          if (A3 = e2 || A3 !== 0 ? A3 : 0, !(w5 ? kt4(w5, E6) : r2(v4, E6, e2))) {
            for (f4 = o3; --f4; ) {
              var b5 = c5[f4];
              if (!(b5 ? kt4(b5, E6) : r2(n4[f4], E6, e2))) continue n;
            }
            w5 && w5.push(E6), v4.push(A3);
          }
        }
        return v4;
      }
      function Cc(n4, t, e2, r2) {
        return $n3(n4, function(s2, o3, f4) {
          t(r2, e2(s2), o3, f4);
        }), r2;
      }
      function ue3(n4, t, e2) {
        t = st3(t, n4), n4 = Du(n4, t);
        var r2 = n4 == null ? n4 : n4[Wn2(In2(t))];
        return r2 == null ? i3 : cn2(r2, n4, e2);
      }
      function Zs2(n4) {
        return K4(n4) && en3(n4) == yt4;
      }
      function Ic(n4) {
        return K4(n4) && en3(n4) == Vt4;
      }
      function xc(n4) {
        return K4(n4) && en3(n4) == Yt2;
      }
      function ae4(n4, t, e2, r2, s2) {
        return n4 === t ? true : n4 == null || t == null || !K4(n4) && !K4(t) ? n4 !== n4 && t !== t : Ec(n4, t, e2, r2, ae4, s2);
      }
      function Ec(n4, t, e2, r2, s2, o3) {
        var f4 = O7(n4), c5 = O7(t), l4 = f4 ? ve3 : tn2(n4), v4 = c5 ? ve3 : tn2(t);
        l4 = l4 == yt4 ? Bn3 : l4, v4 = v4 == yt4 ? Bn3 : v4;
        var _5 = l4 == Bn3, m4 = v4 == Bn3, w5 = l4 == v4;
        if (w5 && at3(n4)) {
          if (!at3(t)) return false;
          f4 = true, _5 = false;
        }
        if (w5 && !_5) return o3 || (o3 = new Rn3()), f4 || Mt4(n4) ? yu(n4, t, e2, r2, s2, o3) : kc(n4, t, l4, e2, r2, s2, o3);
        if (!(e2 & It3)) {
          var A3 = _5 && W3.call(n4, "__wrapped__"), E6 = m4 && W3.call(t, "__wrapped__");
          if (A3 || E6) {
            var b5 = A3 ? n4.value() : n4, y6 = E6 ? t.value() : t;
            return o3 || (o3 = new Rn3()), s2(b5, y6, e2, r2, o3);
          }
        }
        return w5 ? (o3 || (o3 = new Rn3()), jc(n4, t, e2, r2, s2, o3)) : false;
      }
      function yc(n4) {
        return K4(n4) && tn2(n4) == yn2;
      }
      function Vr2(n4, t, e2, r2) {
        var s2 = e2.length, o3 = s2, f4 = !r2;
        if (n4 == null) return !o3;
        for (n4 = M6(n4); s2--; ) {
          var c5 = e2[s2];
          if (f4 && c5[2] ? c5[1] !== n4[c5[0]] : !(c5[0] in n4)) return false;
        }
        for (; ++s2 < o3; ) {
          c5 = e2[s2];
          var l4 = c5[0], v4 = n4[l4], _5 = c5[1];
          if (f4 && c5[2]) {
            if (v4 === i3 && !(l4 in n4)) return false;
          } else {
            var m4 = new Rn3();
            if (r2) var w5 = r2(v4, _5, l4, n4, t, m4);
            if (!(w5 === i3 ? ae4(_5, v4, It3 | de3, r2, m4) : w5)) return false;
          }
        }
        return true;
      }
      function Js2(n4) {
        if (!z4(n4) || oh(n4)) return false;
        var t = Xn3(n4) ? yf : go2;
        return t.test(mt3(n4));
      }
      function Sc(n4) {
        return K4(n4) && en3(n4) == Jt2;
      }
      function Oc(n4) {
        return K4(n4) && tn2(n4) == Sn2;
      }
      function Rc(n4) {
        return K4(n4) && sr3(n4.length) && !!B2[en3(n4)];
      }
      function Xs2(n4) {
        return typeof n4 == "function" ? n4 : n4 == null ? fn : typeof n4 == "object" ? O7(n4) ? ks2(n4[0], n4[1]) : Vs2(n4) : _a(n4);
      }
      function kr2(n4) {
        if (!ce4(n4)) return Lf(n4);
        var t = [];
        for (var e2 in M6(n4)) W3.call(n4, e2) && e2 != "constructor" && t.push(e2);
        return t;
      }
      function bc(n4) {
        if (!z4(n4)) return lh(n4);
        var t = ce4(n4), e2 = [];
        for (var r2 in n4) r2 == "constructor" && (t || !W3.call(n4, r2)) || e2.push(r2);
        return e2;
      }
      function jr2(n4, t) {
        return n4 < t;
      }
      function Qs2(n4, t) {
        var e2 = -1, r2 = an2(n4) ? d3(n4.length) : [];
        return rt4(n4, function(s2, o3, f4) {
          r2[++e2] = t(s2, o3, f4);
        }), r2;
      }
      function Vs2(n4) {
        var t = di(n4);
        return t.length == 1 && t[0][2] ? Tu(t[0][0], t[0][1]) : function(e2) {
          return e2 === n4 || Vr2(e2, n4, t);
        };
      }
      function ks2(n4, t) {
        return vi(n4) && bu(t) ? Tu(Wn2(n4), t) : function(e2) {
          var r2 = yi(e2, n4);
          return r2 === i3 && r2 === t ? Si2(e2, n4) : ae4(t, r2, It3 | de3);
        };
      }
      function Ge4(n4, t, e2, r2, s2) {
        n4 !== t && Zr2(t, function(o3, f4) {
          if (s2 || (s2 = new Rn3()), z4(o3)) Tc(n4, t, f4, e2, Ge4, r2, s2);
          else {
            var c5 = r2 ? r2(mi(n4, f4), o3, f4 + "", n4, t, s2) : i3;
            c5 === i3 && (c5 = o3), Kr2(n4, f4, c5);
          }
        }, on3);
      }
      function Tc(n4, t, e2, r2, s2, o3, f4) {
        var c5 = mi(n4, e2), l4 = mi(t, e2), v4 = f4.get(l4);
        if (v4) {
          Kr2(n4, e2, v4);
          return;
        }
        var _5 = o3 ? o3(c5, l4, e2 + "", n4, t, f4) : i3, m4 = _5 === i3;
        if (m4) {
          var w5 = O7(l4), A3 = !w5 && at3(l4), E6 = !w5 && !A3 && Mt4(l4);
          _5 = l4, w5 || A3 || E6 ? O7(c5) ? _5 = c5 : Y3(c5) ? _5 = un2(c5) : A3 ? (m4 = false, _5 = cu(l4, true)) : E6 ? (m4 = false, _5 = hu(l4, true)) : _5 = [] : le5(l4) || wt4(l4) ? (_5 = c5, wt4(c5) ? _5 = aa(c5) : (!z4(c5) || Xn3(c5)) && (_5 = Ru(l4))) : m4 = false;
        }
        m4 && (f4.set(l4, _5), s2(_5, l4, r2, o3, f4), f4.delete(l4)), Kr2(n4, e2, _5);
      }
      function js2(n4, t) {
        var e2 = n4.length;
        if (e2) return t += t < 0 ? e2 : 0, Jn2(t, e2) ? n4[t] : i3;
      }
      function nu(n4, t, e2) {
        t.length ? t = G5(t, function(o3) {
          return O7(o3) ? function(f4) {
            return vt3(f4, o3.length === 1 ? o3[0] : o3);
          } : o3;
        }) : t = [fn];
        var r2 = -1;
        t = G5(t, hn2(x5()));
        var s2 = Qs2(n4, function(o3, f4, c5) {
          var l4 = G5(t, function(v4) {
            return v4(o3);
          });
          return { criteria: l4, index: ++r2, value: o3 };
        });
        return rf(s2, function(o3, f4) {
          return zc(o3, f4, e2);
        });
      }
      function Lc(n4, t) {
        return tu(n4, t, function(e2, r2) {
          return Si2(n4, r2);
        });
      }
      function tu(n4, t, e2) {
        for (var r2 = -1, s2 = t.length, o3 = {}; ++r2 < s2; ) {
          var f4 = t[r2], c5 = vt3(n4, f4);
          e2(c5, f4) && oe4(o3, st3(f4, n4), c5);
        }
        return o3;
      }
      function Dc(n4) {
        return function(t) {
          return vt3(t, n4);
        };
      }
      function ni(n4, t, e2, r2) {
        var s2 = r2 ? ef : Rt4, o3 = -1, f4 = t.length, c5 = n4;
        for (n4 === t && (t = un2(t)), e2 && (c5 = G5(n4, hn2(e2))); ++o3 < f4; ) for (var l4 = 0, v4 = t[o3], _5 = e2 ? e2(v4) : v4; (l4 = s2(c5, _5, l4, r2)) > -1; ) c5 !== n4 && De3.call(c5, l4, 1), De3.call(n4, l4, 1);
        return n4;
      }
      function eu(n4, t) {
        for (var e2 = n4 ? t.length : 0, r2 = e2 - 1; e2--; ) {
          var s2 = t[e2];
          if (e2 == r2 || s2 !== o3) {
            var o3 = s2;
            Jn2(s2) ? De3.call(n4, s2, 1) : ii(n4, s2);
          }
        }
        return n4;
      }
      function ti(n4, t) {
        return n4 + $e4($s2() * (t - n4 + 1));
      }
      function Nc(n4, t, e2, r2) {
        for (var s2 = -1, o3 = Q4(He4((t - n4) / (e2 || 1)), 0), f4 = d3(o3); o3--; ) f4[r2 ? o3 : ++s2] = n4, n4 += e2;
        return f4;
      }
      function ei(n4, t) {
        var e2 = "";
        if (!n4 || t < 1 || t > kn3) return e2;
        do
          t % 2 && (e2 += n4), t = $e4(t / 2), t && (n4 += n4);
        while (t);
        return e2;
      }
      function T3(n4, t) {
        return wi(Lu(n4, t, fn), n4 + "");
      }
      function Hc(n4) {
        return Fs2(qt3(n4));
      }
      function $c(n4, t) {
        var e2 = qt3(n4);
        return je4(e2, gt3(t, 0, e2.length));
      }
      function oe4(n4, t, e2, r2) {
        if (!z4(n4)) return n4;
        t = st3(t, n4);
        for (var s2 = -1, o3 = t.length, f4 = o3 - 1, c5 = n4; c5 != null && ++s2 < o3; ) {
          var l4 = Wn2(t[s2]), v4 = e2;
          if (l4 === "__proto__" || l4 === "constructor" || l4 === "prototype") return n4;
          if (s2 != f4) {
            var _5 = c5[l4];
            v4 = r2 ? r2(_5, l4, c5) : i3, v4 === i3 && (v4 = z4(_5) ? _5 : Jn2(t[s2 + 1]) ? [] : {});
          }
          ie3(c5, l4, v4), c5 = c5[l4];
        }
        return n4;
      }
      var ru = Ue4 ? function(n4, t) {
        return Ue4.set(n4, t), n4;
      } : fn, Uc = Ne3 ? function(n4, t) {
        return Ne3(n4, "toString", { configurable: true, enumerable: false, value: Ri(t), writable: true });
      } : fn;
      function Wc(n4) {
        return je4(qt3(n4));
      }
      function Cn3(n4, t, e2) {
        var r2 = -1, s2 = n4.length;
        t < 0 && (t = -t > s2 ? 0 : s2 + t), e2 = e2 > s2 ? s2 : e2, e2 < 0 && (e2 += s2), s2 = t > e2 ? 0 : e2 - t >>> 0, t >>>= 0;
        for (var o3 = d3(s2); ++r2 < s2; ) o3[r2] = n4[r2 + t];
        return o3;
      }
      function Fc(n4, t) {
        var e2;
        return rt4(n4, function(r2, s2, o3) {
          return e2 = t(r2, s2, o3), !e2;
        }), !!e2;
      }
      function ze3(n4, t, e2) {
        var r2 = 0, s2 = n4 == null ? r2 : n4.length;
        if (typeof t == "number" && t === t && s2 <= Fa) {
          for (; r2 < s2; ) {
            var o3 = r2 + s2 >>> 1, f4 = n4[o3];
            f4 !== null && !pn2(f4) && (e2 ? f4 <= t : f4 < t) ? r2 = o3 + 1 : s2 = o3;
          }
          return s2;
        }
        return ri(n4, t, fn, e2);
      }
      function ri(n4, t, e2, r2) {
        var s2 = 0, o3 = n4 == null ? 0 : n4.length;
        if (o3 === 0) return 0;
        t = e2(t);
        for (var f4 = t !== t, c5 = t === null, l4 = pn2(t), v4 = t === i3; s2 < o3; ) {
          var _5 = $e4((s2 + o3) / 2), m4 = e2(n4[_5]), w5 = m4 !== i3, A3 = m4 === null, E6 = m4 === m4, b5 = pn2(m4);
          if (f4) var y6 = r2 || E6;
          else v4 ? y6 = E6 && (r2 || w5) : c5 ? y6 = E6 && w5 && (r2 || !A3) : l4 ? y6 = E6 && w5 && !A3 && (r2 || !b5) : A3 || b5 ? y6 = false : y6 = r2 ? m4 <= t : m4 < t;
          y6 ? s2 = _5 + 1 : o3 = _5;
        }
        return nn2(o3, Wa);
      }
      function iu(n4, t) {
        for (var e2 = -1, r2 = n4.length, s2 = 0, o3 = []; ++e2 < r2; ) {
          var f4 = n4[e2], c5 = t ? t(f4) : f4;
          if (!e2 || !bn2(c5, l4)) {
            var l4 = c5;
            o3[s2++] = f4 === 0 ? 0 : f4;
          }
        }
        return o3;
      }
      function su(n4) {
        return typeof n4 == "number" ? n4 : pn2(n4) ? ge3 : +n4;
      }
      function ln(n4) {
        if (typeof n4 == "string") return n4;
        if (O7(n4)) return G5(n4, ln) + "";
        if (pn2(n4)) return Us2 ? Us2.call(n4) : "";
        var t = n4 + "";
        return t == "0" && 1 / n4 == -ct4 ? "-0" : t;
      }
      function it4(n4, t, e2) {
        var r2 = -1, s2 = Ie4, o3 = n4.length, f4 = true, c5 = [], l4 = c5;
        if (e2) f4 = false, s2 = Lr2;
        else if (o3 >= I2) {
          var v4 = t ? null : Qc(n4);
          if (v4) return Ee2(v4);
          f4 = false, s2 = kt4, l4 = new dt4();
        } else l4 = t ? [] : c5;
        n: for (; ++r2 < o3; ) {
          var _5 = n4[r2], m4 = t ? t(_5) : _5;
          if (_5 = e2 || _5 !== 0 ? _5 : 0, f4 && m4 === m4) {
            for (var w5 = l4.length; w5--; ) if (l4[w5] === m4) continue n;
            t && l4.push(m4), c5.push(_5);
          } else s2(l4, m4, e2) || (l4 !== c5 && l4.push(m4), c5.push(_5));
        }
        return c5;
      }
      function ii(n4, t) {
        return t = st3(t, n4), n4 = Du(n4, t), n4 == null || delete n4[Wn2(In2(t))];
      }
      function uu(n4, t, e2, r2) {
        return oe4(n4, t, e2(vt3(n4, t)), r2);
      }
      function Ke4(n4, t, e2, r2) {
        for (var s2 = n4.length, o3 = r2 ? s2 : -1; (r2 ? o3-- : ++o3 < s2) && t(n4[o3], o3, n4); ) ;
        return e2 ? Cn3(n4, r2 ? 0 : o3, r2 ? o3 + 1 : s2) : Cn3(n4, r2 ? o3 + 1 : 0, r2 ? s2 : o3);
      }
      function au(n4, t) {
        var e2 = n4;
        return e2 instanceof N14 && (e2 = e2.value()), Dr3(t, function(r2, s2) {
          return s2.func.apply(s2.thisArg, nt4([r2], s2.args));
        }, e2);
      }
      function si(n4, t, e2) {
        var r2 = n4.length;
        if (r2 < 2) return r2 ? it4(n4[0]) : [];
        for (var s2 = -1, o3 = d3(r2); ++s2 < r2; ) for (var f4 = n4[s2], c5 = -1; ++c5 < r2; ) c5 != s2 && (o3[s2] = se3(o3[s2] || f4, n4[c5], t, e2));
        return it4(j7(o3, 1), t, e2);
      }
      function ou(n4, t, e2) {
        for (var r2 = -1, s2 = n4.length, o3 = t.length, f4 = {}; ++r2 < s2; ) {
          var c5 = r2 < o3 ? t[r2] : i3;
          e2(f4, n4[r2], c5);
        }
        return f4;
      }
      function ui(n4) {
        return Y3(n4) ? n4 : [];
      }
      function ai(n4) {
        return typeof n4 == "function" ? n4 : fn;
      }
      function st3(n4, t) {
        return O7(n4) ? n4 : vi(n4, t) ? [n4] : Uu(U6(n4));
      }
      var Mc = T3;
      function ut4(n4, t, e2) {
        var r2 = n4.length;
        return e2 = e2 === i3 ? r2 : e2, !t && e2 >= r2 ? n4 : Cn3(n4, t, e2);
      }
      var fu = Sf || function(n4) {
        return k4.clearTimeout(n4);
      };
      function cu(n4, t) {
        if (t) return n4.slice();
        var e2 = n4.length, r2 = Ts2 ? Ts2(e2) : new n4.constructor(e2);
        return n4.copy(r2), r2;
      }
      function oi(n4) {
        var t = new n4.constructor(n4.byteLength);
        return new Te3(t).set(new Te3(n4)), t;
      }
      function qc(n4, t) {
        var e2 = t ? oi(n4.buffer) : n4.buffer;
        return new n4.constructor(e2, n4.byteOffset, n4.byteLength);
      }
      function Bc(n4) {
        var t = new n4.constructor(n4.source, Zi2.exec(n4));
        return t.lastIndex = n4.lastIndex, t;
      }
      function Gc(n4) {
        return re2 ? M6(re2.call(n4)) : {};
      }
      function hu(n4, t) {
        var e2 = t ? oi(n4.buffer) : n4.buffer;
        return new n4.constructor(e2, n4.byteOffset, n4.length);
      }
      function lu(n4, t) {
        if (n4 !== t) {
          var e2 = n4 !== i3, r2 = n4 === null, s2 = n4 === n4, o3 = pn2(n4), f4 = t !== i3, c5 = t === null, l4 = t === t, v4 = pn2(t);
          if (!c5 && !v4 && !o3 && n4 > t || o3 && f4 && l4 && !c5 && !v4 || r2 && f4 && l4 || !e2 && l4 || !s2) return 1;
          if (!r2 && !o3 && !v4 && n4 < t || v4 && e2 && s2 && !r2 && !o3 || c5 && e2 && s2 || !f4 && s2 || !l4) return -1;
        }
        return 0;
      }
      function zc(n4, t, e2) {
        for (var r2 = -1, s2 = n4.criteria, o3 = t.criteria, f4 = s2.length, c5 = e2.length; ++r2 < f4; ) {
          var l4 = lu(s2[r2], o3[r2]);
          if (l4) {
            if (r2 >= c5) return l4;
            var v4 = e2[r2];
            return l4 * (v4 == "desc" ? -1 : 1);
          }
        }
        return n4.index - t.index;
      }
      function pu(n4, t, e2, r2) {
        for (var s2 = -1, o3 = n4.length, f4 = e2.length, c5 = -1, l4 = t.length, v4 = Q4(o3 - f4, 0), _5 = d3(l4 + v4), m4 = !r2; ++c5 < l4; ) _5[c5] = t[c5];
        for (; ++s2 < f4; ) (m4 || s2 < o3) && (_5[e2[s2]] = n4[s2]);
        for (; v4--; ) _5[c5++] = n4[s2++];
        return _5;
      }
      function du(n4, t, e2, r2) {
        for (var s2 = -1, o3 = n4.length, f4 = -1, c5 = e2.length, l4 = -1, v4 = t.length, _5 = Q4(o3 - c5, 0), m4 = d3(_5 + v4), w5 = !r2; ++s2 < _5; ) m4[s2] = n4[s2];
        for (var A3 = s2; ++l4 < v4; ) m4[A3 + l4] = t[l4];
        for (; ++f4 < c5; ) (w5 || s2 < o3) && (m4[A3 + e2[f4]] = n4[s2++]);
        return m4;
      }
      function un2(n4, t) {
        var e2 = -1, r2 = n4.length;
        for (t || (t = d3(r2)); ++e2 < r2; ) t[e2] = n4[e2];
        return t;
      }
      function Un3(n4, t, e2, r2) {
        var s2 = !e2;
        e2 || (e2 = {});
        for (var o3 = -1, f4 = t.length; ++o3 < f4; ) {
          var c5 = t[o3], l4 = r2 ? r2(e2[c5], n4[c5], c5, e2, n4) : i3;
          l4 === i3 && (l4 = n4[c5]), s2 ? Kn3(e2, c5, l4) : ie3(e2, c5, l4);
        }
        return e2;
      }
      function Kc(n4, t) {
        return Un3(n4, gi(n4), t);
      }
      function Yc(n4, t) {
        return Un3(n4, Su(n4), t);
      }
      function Ye4(n4, t) {
        return function(e2, r2) {
          var s2 = O7(e2) ? Qo2 : dc, o3 = t ? t() : {};
          return s2(e2, n4, x5(r2, 2), o3);
        };
      }
      function Ut4(n4) {
        return T3(function(t, e2) {
          var r2 = -1, s2 = e2.length, o3 = s2 > 1 ? e2[s2 - 1] : i3, f4 = s2 > 2 ? e2[2] : i3;
          for (o3 = n4.length > 3 && typeof o3 == "function" ? (s2--, o3) : i3, f4 && rn3(e2[0], e2[1], f4) && (o3 = s2 < 3 ? i3 : o3, s2 = 1), t = M6(t); ++r2 < s2; ) {
            var c5 = e2[r2];
            c5 && n4(t, c5, r2, o3);
          }
          return t;
        });
      }
      function gu(n4, t) {
        return function(e2, r2) {
          if (e2 == null) return e2;
          if (!an2(e2)) return n4(e2, r2);
          for (var s2 = e2.length, o3 = t ? s2 : -1, f4 = M6(e2); (t ? o3-- : ++o3 < s2) && r2(f4[o3], o3, f4) !== false; ) ;
          return e2;
        };
      }
      function vu(n4) {
        return function(t, e2, r2) {
          for (var s2 = -1, o3 = M6(t), f4 = r2(t), c5 = f4.length; c5--; ) {
            var l4 = f4[n4 ? c5 : ++s2];
            if (e2(o3[l4], l4, o3) === false) break;
          }
          return t;
        };
      }
      function Zc(n4, t, e2) {
        var r2 = t & vn3, s2 = fe3(n4);
        function o3() {
          var f4 = this && this !== k4 && this instanceof o3 ? s2 : n4;
          return f4.apply(r2 ? e2 : this, arguments);
        }
        return o3;
      }
      function _u(n4) {
        return function(t) {
          t = U6(t);
          var e2 = bt3(t) ? On3(t) : i3, r2 = e2 ? e2[0] : t.charAt(0), s2 = e2 ? ut4(e2, 1).join("") : t.slice(1);
          return r2[n4]() + s2;
        };
      }
      function Wt2(n4) {
        return function(t) {
          return Dr3(ga(da(t).replace($o2, "")), n4, "");
        };
      }
      function fe3(n4) {
        return function() {
          var t = arguments;
          switch (t.length) {
            case 0:
              return new n4();
            case 1:
              return new n4(t[0]);
            case 2:
              return new n4(t[0], t[1]);
            case 3:
              return new n4(t[0], t[1], t[2]);
            case 4:
              return new n4(t[0], t[1], t[2], t[3]);
            case 5:
              return new n4(t[0], t[1], t[2], t[3], t[4]);
            case 6:
              return new n4(t[0], t[1], t[2], t[3], t[4], t[5]);
            case 7:
              return new n4(t[0], t[1], t[2], t[3], t[4], t[5], t[6]);
          }
          var e2 = $t4(n4.prototype), r2 = n4.apply(e2, t);
          return z4(r2) ? r2 : e2;
        };
      }
      function Jc(n4, t, e2) {
        var r2 = fe3(n4);
        function s2() {
          for (var o3 = arguments.length, f4 = d3(o3), c5 = o3, l4 = Ft4(s2); c5--; ) f4[c5] = arguments[c5];
          var v4 = o3 < 3 && f4[0] !== l4 && f4[o3 - 1] !== l4 ? [] : tt3(f4, l4);
          if (o3 -= v4.length, o3 < e2) return Cu(n4, t, Ze4, s2.placeholder, i3, f4, v4, i3, i3, e2 - o3);
          var _5 = this && this !== k4 && this instanceof s2 ? r2 : n4;
          return cn2(_5, this, f4);
        }
        return s2;
      }
      function mu(n4) {
        return function(t, e2, r2) {
          var s2 = M6(t);
          if (!an2(t)) {
            var o3 = x5(e2, 3);
            t = V3(t), e2 = function(c5) {
              return o3(s2[c5], c5, s2);
            };
          }
          var f4 = n4(t, e2, r2);
          return f4 > -1 ? s2[o3 ? t[f4] : f4] : i3;
        };
      }
      function wu(n4) {
        return Zn2(function(t) {
          var e2 = t.length, r2 = e2, s2 = Pn2.prototype.thru;
          for (n4 && t.reverse(); r2--; ) {
            var o3 = t[r2];
            if (typeof o3 != "function") throw new wn2(F);
            if (s2 && !f4 && Ve4(o3) == "wrapper") var f4 = new Pn2([], true);
          }
          for (r2 = f4 ? r2 : e2; ++r2 < e2; ) {
            o3 = t[r2];
            var c5 = Ve4(o3), l4 = c5 == "wrapper" ? pi(o3) : i3;
            l4 && _i(l4[0]) && l4[1] == (qn3 | Dn2 | Nn2 | zt3) && !l4[4].length && l4[9] == 1 ? f4 = f4[Ve4(l4[0])].apply(f4, l4[3]) : f4 = o3.length == 1 && _i(o3) ? f4[c5]() : f4.thru(o3);
          }
          return function() {
            var v4 = arguments, _5 = v4[0];
            if (f4 && v4.length == 1 && O7(_5)) return f4.plant(_5).value();
            for (var m4 = 0, w5 = e2 ? t[m4].apply(this, v4) : _5; ++m4 < e2; ) w5 = t[m4].call(this, w5);
            return w5;
          };
        });
      }
      function Ze4(n4, t, e2, r2, s2, o3, f4, c5, l4, v4) {
        var _5 = t & qn3, m4 = t & vn3, w5 = t & ft4, A3 = t & (Dn2 | xt4), E6 = t & pr3, b5 = w5 ? i3 : fe3(n4);
        function y6() {
          for (var L5 = arguments.length, H5 = d3(L5), dn = L5; dn--; ) H5[dn] = arguments[dn];
          if (A3) var sn2 = Ft4(y6), gn2 = uf(H5, sn2);
          if (r2 && (H5 = pu(H5, r2, s2, A3)), o3 && (H5 = du(H5, o3, f4, A3)), L5 -= gn2, A3 && L5 < v4) {
            var Z4 = tt3(H5, sn2);
            return Cu(n4, t, Ze4, y6.placeholder, e2, H5, Z4, c5, l4, v4 - L5);
          }
          var Tn2 = m4 ? e2 : this, Vn3 = w5 ? Tn2[n4] : n4;
          return L5 = H5.length, c5 ? H5 = dh(H5, c5) : E6 && L5 > 1 && H5.reverse(), _5 && l4 < L5 && (H5.length = l4), this && this !== k4 && this instanceof y6 && (Vn3 = b5 || fe3(Vn3)), Vn3.apply(Tn2, H5);
        }
        return y6;
      }
      function Pu(n4, t) {
        return function(e2, r2) {
          return Cc(e2, n4, t(r2), {});
        };
      }
      function Je4(n4, t) {
        return function(e2, r2) {
          var s2;
          if (e2 === i3 && r2 === i3) return t;
          if (e2 !== i3 && (s2 = e2), r2 !== i3) {
            if (s2 === i3) return r2;
            typeof e2 == "string" || typeof r2 == "string" ? (e2 = ln(e2), r2 = ln(r2)) : (e2 = su(e2), r2 = su(r2)), s2 = n4(e2, r2);
          }
          return s2;
        };
      }
      function fi(n4) {
        return Zn2(function(t) {
          return t = G5(t, hn2(x5())), T3(function(e2) {
            var r2 = this;
            return n4(t, function(s2) {
              return cn2(s2, r2, e2);
            });
          });
        });
      }
      function Xe4(n4, t) {
        t = t === i3 ? " " : ln(t);
        var e2 = t.length;
        if (e2 < 2) return e2 ? ei(t, n4) : t;
        var r2 = ei(t, He4(n4 / Tt4(t)));
        return bt3(t) ? ut4(On3(r2), 0, n4).join("") : r2.slice(0, n4);
      }
      function Xc(n4, t, e2, r2) {
        var s2 = t & vn3, o3 = fe3(n4);
        function f4() {
          for (var c5 = -1, l4 = arguments.length, v4 = -1, _5 = r2.length, m4 = d3(_5 + l4), w5 = this && this !== k4 && this instanceof f4 ? o3 : n4; ++v4 < _5; ) m4[v4] = r2[v4];
          for (; l4--; ) m4[v4++] = arguments[++c5];
          return cn2(w5, s2 ? e2 : this, m4);
        }
        return f4;
      }
      function Au(n4) {
        return function(t, e2, r2) {
          return r2 && typeof r2 != "number" && rn3(t, e2, r2) && (e2 = r2 = i3), t = Qn2(t), e2 === i3 ? (e2 = t, t = 0) : e2 = Qn2(e2), r2 = r2 === i3 ? t < e2 ? 1 : -1 : Qn2(r2), Nc(t, e2, r2, n4);
        };
      }
      function Qe5(n4) {
        return function(t, e2) {
          return typeof t == "string" && typeof e2 == "string" || (t = xn2(t), e2 = xn2(e2)), n4(t, e2);
        };
      }
      function Cu(n4, t, e2, r2, s2, o3, f4, c5, l4, v4) {
        var _5 = t & Dn2, m4 = _5 ? f4 : i3, w5 = _5 ? i3 : f4, A3 = _5 ? o3 : i3, E6 = _5 ? i3 : o3;
        t |= _5 ? Nn2 : Et3, t &= ~(_5 ? Et3 : Nn2), t & Mi2 || (t &= ~(vn3 | ft4));
        var b5 = [n4, t, s2, A3, m4, E6, w5, c5, l4, v4], y6 = e2.apply(i3, b5);
        return _i(n4) && Nu(y6, b5), y6.placeholder = r2, Hu(y6, n4, t);
      }
      function ci(n4) {
        var t = X3[n4];
        return function(e2, r2) {
          if (e2 = xn2(e2), r2 = r2 == null ? 0 : nn2(R2(r2), 292), r2 && Hs2(e2)) {
            var s2 = (U6(e2) + "e").split("e"), o3 = t(s2[0] + "e" + (+s2[1] + r2));
            return s2 = (U6(o3) + "e").split("e"), +(s2[0] + "e" + (+s2[1] - r2));
          }
          return t(e2);
        };
      }
      var Qc = Nt3 && 1 / Ee2(new Nt3([, -0]))[1] == ct4 ? function(n4) {
        return new Nt3(n4);
      } : Li2;
      function Iu(n4) {
        return function(t) {
          var e2 = tn2(t);
          return e2 == yn2 ? Mr2(t) : e2 == Sn2 ? pf(t) : sf(t, n4(t));
        };
      }
      function Yn3(n4, t, e2, r2, s2, o3, f4, c5) {
        var l4 = t & ft4;
        if (!l4 && typeof n4 != "function") throw new wn2(F);
        var v4 = r2 ? r2.length : 0;
        if (v4 || (t &= ~(Nn2 | Et3), r2 = s2 = i3), f4 = f4 === i3 ? f4 : Q4(R2(f4), 0), c5 = c5 === i3 ? c5 : R2(c5), v4 -= s2 ? s2.length : 0, t & Et3) {
          var _5 = r2, m4 = s2;
          r2 = s2 = i3;
        }
        var w5 = l4 ? i3 : pi(n4), A3 = [n4, t, e2, r2, s2, _5, m4, o3, f4, c5];
        if (w5 && hh(A3, w5), n4 = A3[0], t = A3[1], e2 = A3[2], r2 = A3[3], s2 = A3[4], c5 = A3[9] = A3[9] === i3 ? l4 ? 0 : n4.length : Q4(A3[9] - v4, 0), !c5 && t & (Dn2 | xt4) && (t &= ~(Dn2 | xt4)), !t || t == vn3) var E6 = Zc(n4, t, e2);
        else t == Dn2 || t == xt4 ? E6 = Jc(n4, t, c5) : (t == Nn2 || t == (vn3 | Nn2)) && !s2.length ? E6 = Xc(n4, t, e2, r2) : E6 = Ze4.apply(i3, A3);
        var b5 = w5 ? ru : Nu;
        return Hu(b5(E6, A3), n4, t);
      }
      function xu(n4, t, e2, r2) {
        return n4 === i3 || bn2(n4, Dt4[e2]) && !W3.call(r2, e2) ? t : n4;
      }
      function Eu(n4, t, e2, r2, s2, o3) {
        return z4(n4) && z4(t) && (o3.set(t, n4), Ge4(n4, t, i3, Eu, o3), o3.delete(t)), n4;
      }
      function Vc(n4) {
        return le5(n4) ? i3 : n4;
      }
      function yu(n4, t, e2, r2, s2, o3) {
        var f4 = e2 & It3, c5 = n4.length, l4 = t.length;
        if (c5 != l4 && !(f4 && l4 > c5)) return false;
        var v4 = o3.get(n4), _5 = o3.get(t);
        if (v4 && _5) return v4 == t && _5 == n4;
        var m4 = -1, w5 = true, A3 = e2 & de3 ? new dt4() : i3;
        for (o3.set(n4, t), o3.set(t, n4); ++m4 < c5; ) {
          var E6 = n4[m4], b5 = t[m4];
          if (r2) var y6 = f4 ? r2(b5, E6, m4, t, n4, o3) : r2(E6, b5, m4, n4, t, o3);
          if (y6 !== i3) {
            if (y6) continue;
            w5 = false;
            break;
          }
          if (A3) {
            if (!Nr2(t, function(L5, H5) {
              if (!kt4(A3, H5) && (E6 === L5 || s2(E6, L5, e2, r2, o3))) return A3.push(H5);
            })) {
              w5 = false;
              break;
            }
          } else if (!(E6 === b5 || s2(E6, b5, e2, r2, o3))) {
            w5 = false;
            break;
          }
        }
        return o3.delete(n4), o3.delete(t), w5;
      }
      function kc(n4, t, e2, r2, s2, o3, f4) {
        switch (e2) {
          case St4:
            if (n4.byteLength != t.byteLength || n4.byteOffset != t.byteOffset) return false;
            n4 = n4.buffer, t = t.buffer;
          case Vt4:
            return !(n4.byteLength != t.byteLength || !o3(new Te3(n4), new Te3(t)));
          case Kt4:
          case Yt2:
          case Zt2:
            return bn2(+n4, +t);
          case _e3:
            return n4.name == t.name && n4.message == t.message;
          case Jt2:
          case Xt2:
            return n4 == t + "";
          case yn2:
            var c5 = Mr2;
          case Sn2:
            var l4 = r2 & It3;
            if (c5 || (c5 = Ee2), n4.size != t.size && !l4) return false;
            var v4 = f4.get(n4);
            if (v4) return v4 == t;
            r2 |= de3, f4.set(n4, t);
            var _5 = yu(c5(n4), c5(t), r2, s2, o3, f4);
            return f4.delete(n4), _5;
          case we3:
            if (re2) return re2.call(n4) == re2.call(t);
        }
        return false;
      }
      function jc(n4, t, e2, r2, s2, o3) {
        var f4 = e2 & It3, c5 = hi(n4), l4 = c5.length, v4 = hi(t), _5 = v4.length;
        if (l4 != _5 && !f4) return false;
        for (var m4 = l4; m4--; ) {
          var w5 = c5[m4];
          if (!(f4 ? w5 in t : W3.call(t, w5))) return false;
        }
        var A3 = o3.get(n4), E6 = o3.get(t);
        if (A3 && E6) return A3 == t && E6 == n4;
        var b5 = true;
        o3.set(n4, t), o3.set(t, n4);
        for (var y6 = f4; ++m4 < l4; ) {
          w5 = c5[m4];
          var L5 = n4[w5], H5 = t[w5];
          if (r2) var dn = f4 ? r2(H5, L5, w5, t, n4, o3) : r2(L5, H5, w5, n4, t, o3);
          if (!(dn === i3 ? L5 === H5 || s2(L5, H5, e2, r2, o3) : dn)) {
            b5 = false;
            break;
          }
          y6 || (y6 = w5 == "constructor");
        }
        if (b5 && !y6) {
          var sn2 = n4.constructor, gn2 = t.constructor;
          sn2 != gn2 && "constructor" in n4 && "constructor" in t && !(typeof sn2 == "function" && sn2 instanceof sn2 && typeof gn2 == "function" && gn2 instanceof gn2) && (b5 = false);
        }
        return o3.delete(n4), o3.delete(t), b5;
      }
      function Zn2(n4) {
        return wi(Lu(n4, i3, qu), n4 + "");
      }
      function hi(n4) {
        return Ys2(n4, V3, gi);
      }
      function li(n4) {
        return Ys2(n4, on3, Su);
      }
      var pi = Ue4 ? function(n4) {
        return Ue4.get(n4);
      } : Li2;
      function Ve4(n4) {
        for (var t = n4.name + "", e2 = Ht3[t], r2 = W3.call(Ht3, t) ? e2.length : 0; r2--; ) {
          var s2 = e2[r2], o3 = s2.func;
          if (o3 == null || o3 == n4) return s2.name;
        }
        return t;
      }
      function Ft4(n4) {
        var t = W3.call(a2, "placeholder") ? a2 : n4;
        return t.placeholder;
      }
      function x5() {
        var n4 = a2.iteratee || bi;
        return n4 = n4 === bi ? Xs2 : n4, arguments.length ? n4(arguments[0], arguments[1]) : n4;
      }
      function ke5(n4, t) {
        var e2 = n4.__data__;
        return ah(t) ? e2[typeof t == "string" ? "string" : "hash"] : e2.map;
      }
      function di(n4) {
        for (var t = V3(n4), e2 = t.length; e2--; ) {
          var r2 = t[e2], s2 = n4[r2];
          t[e2] = [r2, s2, bu(s2)];
        }
        return t;
      }
      function _t4(n4, t) {
        var e2 = cf(n4, t);
        return Js2(e2) ? e2 : i3;
      }
      function nh(n4) {
        var t = W3.call(n4, lt3), e2 = n4[lt3];
        try {
          n4[lt3] = i3;
          var r2 = true;
        } catch {
        }
        var s2 = Re3.call(n4);
        return r2 && (t ? n4[lt3] = e2 : delete n4[lt3]), s2;
      }
      var gi = Br2 ? function(n4) {
        return n4 == null ? [] : (n4 = M6(n4), jn3(Br2(n4), function(t) {
          return Ds2.call(n4, t);
        }));
      } : Di, Su = Br2 ? function(n4) {
        for (var t = []; n4; ) nt4(t, gi(n4)), n4 = Le3(n4);
        return t;
      } : Di, tn2 = en3;
      (Gr2 && tn2(new Gr2(new ArrayBuffer(1))) != St4 || ne4 && tn2(new ne4()) != yn2 || zr2 && tn2(zr2.resolve()) != Gi2 || Nt3 && tn2(new Nt3()) != Sn2 || te4 && tn2(new te4()) != Qt2) && (tn2 = function(n4) {
        var t = en3(n4), e2 = t == Bn3 ? n4.constructor : i3, r2 = e2 ? mt3(e2) : "";
        if (r2) switch (r2) {
          case $f:
            return St4;
          case Uf:
            return yn2;
          case Wf:
            return Gi2;
          case Ff:
            return Sn2;
          case Mf:
            return Qt2;
        }
        return t;
      });
      function th(n4, t, e2) {
        for (var r2 = -1, s2 = e2.length; ++r2 < s2; ) {
          var o3 = e2[r2], f4 = o3.size;
          switch (o3.type) {
            case "drop":
              n4 += f4;
              break;
            case "dropRight":
              t -= f4;
              break;
            case "take":
              t = nn2(t, n4 + f4);
              break;
            case "takeRight":
              n4 = Q4(n4, t - f4);
              break;
          }
        }
        return { start: n4, end: t };
      }
      function eh(n4) {
        var t = n4.match(uo2);
        return t ? t[1].split(ao2) : [];
      }
      function Ou(n4, t, e2) {
        t = st3(t, n4);
        for (var r2 = -1, s2 = t.length, o3 = false; ++r2 < s2; ) {
          var f4 = Wn2(t[r2]);
          if (!(o3 = n4 != null && e2(n4, f4))) break;
          n4 = n4[f4];
        }
        return o3 || ++r2 != s2 ? o3 : (s2 = n4 == null ? 0 : n4.length, !!s2 && sr3(s2) && Jn2(f4, s2) && (O7(n4) || wt4(n4)));
      }
      function rh(n4) {
        var t = n4.length, e2 = new n4.constructor(t);
        return t && typeof n4[0] == "string" && W3.call(n4, "index") && (e2.index = n4.index, e2.input = n4.input), e2;
      }
      function Ru(n4) {
        return typeof n4.constructor == "function" && !ce4(n4) ? $t4(Le3(n4)) : {};
      }
      function ih(n4, t, e2) {
        var r2 = n4.constructor;
        switch (t) {
          case Vt4:
            return oi(n4);
          case Kt4:
          case Yt2:
            return new r2(+n4);
          case St4:
            return qc(n4, e2);
          case dr3:
          case gr3:
          case vr3:
          case _r3:
          case mr3:
          case wr3:
          case Pr2:
          case Ar2:
          case Cr3:
            return hu(n4, e2);
          case yn2:
            return new r2();
          case Zt2:
          case Xt2:
            return new r2(n4);
          case Jt2:
            return Bc(n4);
          case Sn2:
            return new r2();
          case we3:
            return Gc(n4);
        }
      }
      function sh(n4, t) {
        var e2 = t.length;
        if (!e2) return n4;
        var r2 = e2 - 1;
        return t[r2] = (e2 > 1 ? "& " : "") + t[r2], t = t.join(e2 > 2 ? ", " : " "), n4.replace(so2, `{
/* [wrapped with ` + t + `] */
`);
      }
      function uh(n4) {
        return O7(n4) || wt4(n4) || !!(Ns2 && n4 && n4[Ns2]);
      }
      function Jn2(n4, t) {
        var e2 = typeof n4;
        return t = t ?? kn3, !!t && (e2 == "number" || e2 != "symbol" && _o2.test(n4)) && n4 > -1 && n4 % 1 == 0 && n4 < t;
      }
      function rn3(n4, t, e2) {
        if (!z4(e2)) return false;
        var r2 = typeof t;
        return (r2 == "number" ? an2(e2) && Jn2(t, e2.length) : r2 == "string" && t in e2) ? bn2(e2[t], n4) : false;
      }
      function vi(n4, t) {
        if (O7(n4)) return false;
        var e2 = typeof n4;
        return e2 == "number" || e2 == "symbol" || e2 == "boolean" || n4 == null || pn2(n4) ? true : to2.test(n4) || !no2.test(n4) || t != null && n4 in M6(t);
      }
      function ah(n4) {
        var t = typeof n4;
        return t == "string" || t == "number" || t == "symbol" || t == "boolean" ? n4 !== "__proto__" : n4 === null;
      }
      function _i(n4) {
        var t = Ve4(n4), e2 = a2[t];
        if (typeof e2 != "function" || !(t in N14.prototype)) return false;
        if (n4 === e2) return true;
        var r2 = pi(e2);
        return !!r2 && n4 === r2[0];
      }
      function oh(n4) {
        return !!bs2 && bs2 in n4;
      }
      var fh = Se3 ? Xn3 : Ni;
      function ce4(n4) {
        var t = n4 && n4.constructor, e2 = typeof t == "function" && t.prototype || Dt4;
        return n4 === e2;
      }
      function bu(n4) {
        return n4 === n4 && !z4(n4);
      }
      function Tu(n4, t) {
        return function(e2) {
          return e2 == null ? false : e2[n4] === t && (t !== i3 || n4 in M6(e2));
        };
      }
      function ch(n4) {
        var t = rr3(n4, function(r2) {
          return e2.size === lr3 && e2.clear(), r2;
        }), e2 = t.cache;
        return t;
      }
      function hh(n4, t) {
        var e2 = n4[1], r2 = t[1], s2 = e2 | r2, o3 = s2 < (vn3 | ft4 | qn3), f4 = r2 == qn3 && e2 == Dn2 || r2 == qn3 && e2 == zt3 && n4[7].length <= t[8] || r2 == (qn3 | zt3) && t[7].length <= t[8] && e2 == Dn2;
        if (!(o3 || f4)) return n4;
        r2 & vn3 && (n4[2] = t[2], s2 |= e2 & vn3 ? 0 : Mi2);
        var c5 = t[3];
        if (c5) {
          var l4 = n4[3];
          n4[3] = l4 ? pu(l4, c5, t[4]) : c5, n4[4] = l4 ? tt3(n4[3], At3) : t[4];
        }
        return c5 = t[5], c5 && (l4 = n4[5], n4[5] = l4 ? du(l4, c5, t[6]) : c5, n4[6] = l4 ? tt3(n4[5], At3) : t[6]), c5 = t[7], c5 && (n4[7] = c5), r2 & qn3 && (n4[8] = n4[8] == null ? t[8] : nn2(n4[8], t[8])), n4[9] == null && (n4[9] = t[9]), n4[0] = t[0], n4[1] = s2, n4;
      }
      function lh(n4) {
        var t = [];
        if (n4 != null) for (var e2 in M6(n4)) t.push(e2);
        return t;
      }
      function ph(n4) {
        return Re3.call(n4);
      }
      function Lu(n4, t, e2) {
        return t = Q4(t === i3 ? n4.length - 1 : t, 0), function() {
          for (var r2 = arguments, s2 = -1, o3 = Q4(r2.length - t, 0), f4 = d3(o3); ++s2 < o3; ) f4[s2] = r2[t + s2];
          s2 = -1;
          for (var c5 = d3(t + 1); ++s2 < t; ) c5[s2] = r2[s2];
          return c5[t] = e2(f4), cn2(n4, this, c5);
        };
      }
      function Du(n4, t) {
        return t.length < 2 ? n4 : vt3(n4, Cn3(t, 0, -1));
      }
      function dh(n4, t) {
        for (var e2 = n4.length, r2 = nn2(t.length, e2), s2 = un2(n4); r2--; ) {
          var o3 = t[r2];
          n4[r2] = Jn2(o3, e2) ? s2[o3] : i3;
        }
        return n4;
      }
      function mi(n4, t) {
        if (!(t === "constructor" && typeof n4[t] == "function") && t != "__proto__") return n4[t];
      }
      var Nu = $u(ru), he3 = Rf || function(n4, t) {
        return k4.setTimeout(n4, t);
      }, wi = $u(Uc);
      function Hu(n4, t, e2) {
        var r2 = t + "";
        return wi(n4, sh(r2, gh(eh(r2), e2)));
      }
      function $u(n4) {
        var t = 0, e2 = 0;
        return function() {
          var r2 = Df(), s2 = Na - (r2 - e2);
          if (e2 = r2, s2 > 0) {
            if (++t >= Da) return arguments[0];
          } else t = 0;
          return n4.apply(i3, arguments);
        };
      }
      function je4(n4, t) {
        var e2 = -1, r2 = n4.length, s2 = r2 - 1;
        for (t = t === i3 ? r2 : t; ++e2 < t; ) {
          var o3 = ti(e2, s2), f4 = n4[o3];
          n4[o3] = n4[e2], n4[e2] = f4;
        }
        return n4.length = t, n4;
      }
      var Uu = ch(function(n4) {
        var t = [];
        return n4.charCodeAt(0) === 46 && t.push(""), n4.replace(eo2, function(e2, r2, s2, o3) {
          t.push(s2 ? o3.replace(co2, "$1") : r2 || e2);
        }), t;
      });
      function Wn2(n4) {
        if (typeof n4 == "string" || pn2(n4)) return n4;
        var t = n4 + "";
        return t == "0" && 1 / n4 == -ct4 ? "-0" : t;
      }
      function mt3(n4) {
        if (n4 != null) {
          try {
            return Oe4.call(n4);
          } catch {
          }
          try {
            return n4 + "";
          } catch {
          }
        }
        return "";
      }
      function gh(n4, t) {
        return mn3(Ma, function(e2) {
          var r2 = "_." + e2[0];
          t & e2[1] && !Ie4(n4, r2) && n4.push(r2);
        }), n4.sort();
      }
      function Wu(n4) {
        if (n4 instanceof N14) return n4.clone();
        var t = new Pn2(n4.__wrapped__, n4.__chain__);
        return t.__actions__ = un2(n4.__actions__), t.__index__ = n4.__index__, t.__values__ = n4.__values__, t;
      }
      function vh(n4, t, e2) {
        (e2 ? rn3(n4, t, e2) : t === i3) ? t = 1 : t = Q4(R2(t), 0);
        var r2 = n4 == null ? 0 : n4.length;
        if (!r2 || t < 1) return [];
        for (var s2 = 0, o3 = 0, f4 = d3(He4(r2 / t)); s2 < r2; ) f4[o3++] = Cn3(n4, s2, s2 += t);
        return f4;
      }
      function _h(n4) {
        for (var t = -1, e2 = n4 == null ? 0 : n4.length, r2 = 0, s2 = []; ++t < e2; ) {
          var o3 = n4[t];
          o3 && (s2[r2++] = o3);
        }
        return s2;
      }
      function mh() {
        var n4 = arguments.length;
        if (!n4) return [];
        for (var t = d3(n4 - 1), e2 = arguments[0], r2 = n4; r2--; ) t[r2 - 1] = arguments[r2];
        return nt4(O7(e2) ? un2(e2) : [e2], j7(t, 1));
      }
      var wh = T3(function(n4, t) {
        return Y3(n4) ? se3(n4, j7(t, 1, Y3, true)) : [];
      }), Ph = T3(function(n4, t) {
        var e2 = In2(t);
        return Y3(e2) && (e2 = i3), Y3(n4) ? se3(n4, j7(t, 1, Y3, true), x5(e2, 2)) : [];
      }), Ah = T3(function(n4, t) {
        var e2 = In2(t);
        return Y3(e2) && (e2 = i3), Y3(n4) ? se3(n4, j7(t, 1, Y3, true), i3, e2) : [];
      });
      function Ch(n4, t, e2) {
        var r2 = n4 == null ? 0 : n4.length;
        return r2 ? (t = e2 || t === i3 ? 1 : R2(t), Cn3(n4, t < 0 ? 0 : t, r2)) : [];
      }
      function Ih(n4, t, e2) {
        var r2 = n4 == null ? 0 : n4.length;
        return r2 ? (t = e2 || t === i3 ? 1 : R2(t), t = r2 - t, Cn3(n4, 0, t < 0 ? 0 : t)) : [];
      }
      function xh(n4, t) {
        return n4 && n4.length ? Ke4(n4, x5(t, 3), true, true) : [];
      }
      function Eh(n4, t) {
        return n4 && n4.length ? Ke4(n4, x5(t, 3), true) : [];
      }
      function yh(n4, t, e2, r2) {
        var s2 = n4 == null ? 0 : n4.length;
        return s2 ? (e2 && typeof e2 != "number" && rn3(n4, t, e2) && (e2 = 0, r2 = s2), mc(n4, t, e2, r2)) : [];
      }
      function Fu(n4, t, e2) {
        var r2 = n4 == null ? 0 : n4.length;
        if (!r2) return -1;
        var s2 = e2 == null ? 0 : R2(e2);
        return s2 < 0 && (s2 = Q4(r2 + s2, 0)), xe4(n4, x5(t, 3), s2);
      }
      function Mu(n4, t, e2) {
        var r2 = n4 == null ? 0 : n4.length;
        if (!r2) return -1;
        var s2 = r2 - 1;
        return e2 !== i3 && (s2 = R2(e2), s2 = e2 < 0 ? Q4(r2 + s2, 0) : nn2(s2, r2 - 1)), xe4(n4, x5(t, 3), s2, true);
      }
      function qu(n4) {
        var t = n4 == null ? 0 : n4.length;
        return t ? j7(n4, 1) : [];
      }
      function Sh(n4) {
        var t = n4 == null ? 0 : n4.length;
        return t ? j7(n4, ct4) : [];
      }
      function Oh(n4, t) {
        var e2 = n4 == null ? 0 : n4.length;
        return e2 ? (t = t === i3 ? 1 : R2(t), j7(n4, t)) : [];
      }
      function Rh(n4) {
        for (var t = -1, e2 = n4 == null ? 0 : n4.length, r2 = {}; ++t < e2; ) {
          var s2 = n4[t];
          r2[s2[0]] = s2[1];
        }
        return r2;
      }
      function Bu(n4) {
        return n4 && n4.length ? n4[0] : i3;
      }
      function bh(n4, t, e2) {
        var r2 = n4 == null ? 0 : n4.length;
        if (!r2) return -1;
        var s2 = e2 == null ? 0 : R2(e2);
        return s2 < 0 && (s2 = Q4(r2 + s2, 0)), Rt4(n4, t, s2);
      }
      function Th(n4) {
        var t = n4 == null ? 0 : n4.length;
        return t ? Cn3(n4, 0, -1) : [];
      }
      var Lh = T3(function(n4) {
        var t = G5(n4, ui);
        return t.length && t[0] === n4[0] ? Qr2(t) : [];
      }), Dh = T3(function(n4) {
        var t = In2(n4), e2 = G5(n4, ui);
        return t === In2(e2) ? t = i3 : e2.pop(), e2.length && e2[0] === n4[0] ? Qr2(e2, x5(t, 2)) : [];
      }), Nh = T3(function(n4) {
        var t = In2(n4), e2 = G5(n4, ui);
        return t = typeof t == "function" ? t : i3, t && e2.pop(), e2.length && e2[0] === n4[0] ? Qr2(e2, i3, t) : [];
      });
      function Hh(n4, t) {
        return n4 == null ? "" : Tf.call(n4, t);
      }
      function In2(n4) {
        var t = n4 == null ? 0 : n4.length;
        return t ? n4[t - 1] : i3;
      }
      function $h(n4, t, e2) {
        var r2 = n4 == null ? 0 : n4.length;
        if (!r2) return -1;
        var s2 = r2;
        return e2 !== i3 && (s2 = R2(e2), s2 = s2 < 0 ? Q4(r2 + s2, 0) : nn2(s2, r2 - 1)), t === t ? gf(n4, t, s2) : xe4(n4, Cs2, s2, true);
      }
      function Uh(n4, t) {
        return n4 && n4.length ? js2(n4, R2(t)) : i3;
      }
      var Wh = T3(Gu);
      function Gu(n4, t) {
        return n4 && n4.length && t && t.length ? ni(n4, t) : n4;
      }
      function Fh(n4, t, e2) {
        return n4 && n4.length && t && t.length ? ni(n4, t, x5(e2, 2)) : n4;
      }
      function Mh(n4, t, e2) {
        return n4 && n4.length && t && t.length ? ni(n4, t, i3, e2) : n4;
      }
      var qh = Zn2(function(n4, t) {
        var e2 = n4 == null ? 0 : n4.length, r2 = Yr2(n4, t);
        return eu(n4, G5(t, function(s2) {
          return Jn2(s2, e2) ? +s2 : s2;
        }).sort(lu)), r2;
      });
      function Bh(n4, t) {
        var e2 = [];
        if (!(n4 && n4.length)) return e2;
        var r2 = -1, s2 = [], o3 = n4.length;
        for (t = x5(t, 3); ++r2 < o3; ) {
          var f4 = n4[r2];
          t(f4, r2, n4) && (e2.push(f4), s2.push(r2));
        }
        return eu(n4, s2), e2;
      }
      function Pi2(n4) {
        return n4 == null ? n4 : Hf.call(n4);
      }
      function Gh(n4, t, e2) {
        var r2 = n4 == null ? 0 : n4.length;
        return r2 ? (e2 && typeof e2 != "number" && rn3(n4, t, e2) ? (t = 0, e2 = r2) : (t = t == null ? 0 : R2(t), e2 = e2 === i3 ? r2 : R2(e2)), Cn3(n4, t, e2)) : [];
      }
      function zh(n4, t) {
        return ze3(n4, t);
      }
      function Kh(n4, t, e2) {
        return ri(n4, t, x5(e2, 2));
      }
      function Yh(n4, t) {
        var e2 = n4 == null ? 0 : n4.length;
        if (e2) {
          var r2 = ze3(n4, t);
          if (r2 < e2 && bn2(n4[r2], t)) return r2;
        }
        return -1;
      }
      function Zh(n4, t) {
        return ze3(n4, t, true);
      }
      function Jh(n4, t, e2) {
        return ri(n4, t, x5(e2, 2), true);
      }
      function Xh(n4, t) {
        var e2 = n4 == null ? 0 : n4.length;
        if (e2) {
          var r2 = ze3(n4, t, true) - 1;
          if (bn2(n4[r2], t)) return r2;
        }
        return -1;
      }
      function Qh(n4) {
        return n4 && n4.length ? iu(n4) : [];
      }
      function Vh(n4, t) {
        return n4 && n4.length ? iu(n4, x5(t, 2)) : [];
      }
      function kh(n4) {
        var t = n4 == null ? 0 : n4.length;
        return t ? Cn3(n4, 1, t) : [];
      }
      function jh(n4, t, e2) {
        return n4 && n4.length ? (t = e2 || t === i3 ? 1 : R2(t), Cn3(n4, 0, t < 0 ? 0 : t)) : [];
      }
      function nl(n4, t, e2) {
        var r2 = n4 == null ? 0 : n4.length;
        return r2 ? (t = e2 || t === i3 ? 1 : R2(t), t = r2 - t, Cn3(n4, t < 0 ? 0 : t, r2)) : [];
      }
      function tl(n4, t) {
        return n4 && n4.length ? Ke4(n4, x5(t, 3), false, true) : [];
      }
      function el(n4, t) {
        return n4 && n4.length ? Ke4(n4, x5(t, 3)) : [];
      }
      var rl = T3(function(n4) {
        return it4(j7(n4, 1, Y3, true));
      }), il = T3(function(n4) {
        var t = In2(n4);
        return Y3(t) && (t = i3), it4(j7(n4, 1, Y3, true), x5(t, 2));
      }), sl = T3(function(n4) {
        var t = In2(n4);
        return t = typeof t == "function" ? t : i3, it4(j7(n4, 1, Y3, true), i3, t);
      });
      function ul(n4) {
        return n4 && n4.length ? it4(n4) : [];
      }
      function al(n4, t) {
        return n4 && n4.length ? it4(n4, x5(t, 2)) : [];
      }
      function ol(n4, t) {
        return t = typeof t == "function" ? t : i3, n4 && n4.length ? it4(n4, i3, t) : [];
      }
      function Ai(n4) {
        if (!(n4 && n4.length)) return [];
        var t = 0;
        return n4 = jn3(n4, function(e2) {
          if (Y3(e2)) return t = Q4(e2.length, t), true;
        }), Wr2(t, function(e2) {
          return G5(n4, Hr2(e2));
        });
      }
      function zu(n4, t) {
        if (!(n4 && n4.length)) return [];
        var e2 = Ai(n4);
        return t == null ? e2 : G5(e2, function(r2) {
          return cn2(t, i3, r2);
        });
      }
      var fl = T3(function(n4, t) {
        return Y3(n4) ? se3(n4, t) : [];
      }), cl = T3(function(n4) {
        return si(jn3(n4, Y3));
      }), hl = T3(function(n4) {
        var t = In2(n4);
        return Y3(t) && (t = i3), si(jn3(n4, Y3), x5(t, 2));
      }), ll = T3(function(n4) {
        var t = In2(n4);
        return t = typeof t == "function" ? t : i3, si(jn3(n4, Y3), i3, t);
      }), pl = T3(Ai);
      function dl(n4, t) {
        return ou(n4 || [], t || [], ie3);
      }
      function gl(n4, t) {
        return ou(n4 || [], t || [], oe4);
      }
      var vl = T3(function(n4) {
        var t = n4.length, e2 = t > 1 ? n4[t - 1] : i3;
        return e2 = typeof e2 == "function" ? (n4.pop(), e2) : i3, zu(n4, e2);
      });
      function Ku(n4) {
        var t = a2(n4);
        return t.__chain__ = true, t;
      }
      function _l(n4, t) {
        return t(n4), n4;
      }
      function nr3(n4, t) {
        return t(n4);
      }
      var ml = Zn2(function(n4) {
        var t = n4.length, e2 = t ? n4[0] : 0, r2 = this.__wrapped__, s2 = function(o3) {
          return Yr2(o3, n4);
        };
        return t > 1 || this.__actions__.length || !(r2 instanceof N14) || !Jn2(e2) ? this.thru(s2) : (r2 = r2.slice(e2, +e2 + (t ? 1 : 0)), r2.__actions__.push({ func: nr3, args: [s2], thisArg: i3 }), new Pn2(r2, this.__chain__).thru(function(o3) {
          return t && !o3.length && o3.push(i3), o3;
        }));
      });
      function wl() {
        return Ku(this);
      }
      function Pl() {
        return new Pn2(this.value(), this.__chain__);
      }
      function Al() {
        this.__values__ === i3 && (this.__values__ = sa(this.value()));
        var n4 = this.__index__ >= this.__values__.length, t = n4 ? i3 : this.__values__[this.__index__++];
        return { done: n4, value: t };
      }
      function Cl() {
        return this;
      }
      function Il(n4) {
        for (var t, e2 = this; e2 instanceof Fe3; ) {
          var r2 = Wu(e2);
          r2.__index__ = 0, r2.__values__ = i3, t ? s2.__wrapped__ = r2 : t = r2;
          var s2 = r2;
          e2 = e2.__wrapped__;
        }
        return s2.__wrapped__ = n4, t;
      }
      function xl() {
        var n4 = this.__wrapped__;
        if (n4 instanceof N14) {
          var t = n4;
          return this.__actions__.length && (t = new N14(this)), t = t.reverse(), t.__actions__.push({ func: nr3, args: [Pi2], thisArg: i3 }), new Pn2(t, this.__chain__);
        }
        return this.thru(Pi2);
      }
      function El() {
        return au(this.__wrapped__, this.__actions__);
      }
      var yl = Ye4(function(n4, t, e2) {
        W3.call(n4, e2) ? ++n4[e2] : Kn3(n4, e2, 1);
      });
      function Sl(n4, t, e2) {
        var r2 = O7(n4) ? Ps2 : _c;
        return e2 && rn3(n4, t, e2) && (t = i3), r2(n4, x5(t, 3));
      }
      function Ol(n4, t) {
        var e2 = O7(n4) ? jn3 : zs2;
        return e2(n4, x5(t, 3));
      }
      var Rl = mu(Fu), bl = mu(Mu);
      function Tl(n4, t) {
        return j7(tr3(n4, t), 1);
      }
      function Ll(n4, t) {
        return j7(tr3(n4, t), ct4);
      }
      function Dl(n4, t, e2) {
        return e2 = e2 === i3 ? 1 : R2(e2), j7(tr3(n4, t), e2);
      }
      function Yu(n4, t) {
        var e2 = O7(n4) ? mn3 : rt4;
        return e2(n4, x5(t, 3));
      }
      function Zu(n4, t) {
        var e2 = O7(n4) ? Vo2 : Gs2;
        return e2(n4, x5(t, 3));
      }
      var Nl = Ye4(function(n4, t, e2) {
        W3.call(n4, e2) ? n4[e2].push(t) : Kn3(n4, e2, [t]);
      });
      function Hl(n4, t, e2, r2) {
        n4 = an2(n4) ? n4 : qt3(n4), e2 = e2 && !r2 ? R2(e2) : 0;
        var s2 = n4.length;
        return e2 < 0 && (e2 = Q4(s2 + e2, 0)), ur2(n4) ? e2 <= s2 && n4.indexOf(t, e2) > -1 : !!s2 && Rt4(n4, t, e2) > -1;
      }
      var $l = T3(function(n4, t, e2) {
        var r2 = -1, s2 = typeof t == "function", o3 = an2(n4) ? d3(n4.length) : [];
        return rt4(n4, function(f4) {
          o3[++r2] = s2 ? cn2(t, f4, e2) : ue3(f4, t, e2);
        }), o3;
      }), Ul = Ye4(function(n4, t, e2) {
        Kn3(n4, e2, t);
      });
      function tr3(n4, t) {
        var e2 = O7(n4) ? G5 : Qs2;
        return e2(n4, x5(t, 3));
      }
      function Wl(n4, t, e2, r2) {
        return n4 == null ? [] : (O7(t) || (t = t == null ? [] : [t]), e2 = r2 ? i3 : e2, O7(e2) || (e2 = e2 == null ? [] : [e2]), nu(n4, t, e2));
      }
      var Fl = Ye4(function(n4, t, e2) {
        n4[e2 ? 0 : 1].push(t);
      }, function() {
        return [[], []];
      });
      function Ml(n4, t, e2) {
        var r2 = O7(n4) ? Dr3 : xs2, s2 = arguments.length < 3;
        return r2(n4, x5(t, 4), e2, s2, rt4);
      }
      function ql(n4, t, e2) {
        var r2 = O7(n4) ? ko2 : xs2, s2 = arguments.length < 3;
        return r2(n4, x5(t, 4), e2, s2, Gs2);
      }
      function Bl(n4, t) {
        var e2 = O7(n4) ? jn3 : zs2;
        return e2(n4, ir3(x5(t, 3)));
      }
      function Gl(n4) {
        var t = O7(n4) ? Fs2 : Hc;
        return t(n4);
      }
      function zl(n4, t, e2) {
        (e2 ? rn3(n4, t, e2) : t === i3) ? t = 1 : t = R2(t);
        var r2 = O7(n4) ? lc : $c;
        return r2(n4, t);
      }
      function Kl(n4) {
        var t = O7(n4) ? pc : Wc;
        return t(n4);
      }
      function Yl(n4) {
        if (n4 == null) return 0;
        if (an2(n4)) return ur2(n4) ? Tt4(n4) : n4.length;
        var t = tn2(n4);
        return t == yn2 || t == Sn2 ? n4.size : kr2(n4).length;
      }
      function Zl(n4, t, e2) {
        var r2 = O7(n4) ? Nr2 : Fc;
        return e2 && rn3(n4, t, e2) && (t = i3), r2(n4, x5(t, 3));
      }
      var Jl = T3(function(n4, t) {
        if (n4 == null) return [];
        var e2 = t.length;
        return e2 > 1 && rn3(n4, t[0], t[1]) ? t = [] : e2 > 2 && rn3(t[0], t[1], t[2]) && (t = [t[0]]), nu(n4, j7(t, 1), []);
      }), er3 = Of || function() {
        return k4.Date.now();
      };
      function Xl(n4, t) {
        if (typeof t != "function") throw new wn2(F);
        return n4 = R2(n4), function() {
          if (--n4 < 1) return t.apply(this, arguments);
        };
      }
      function Ju(n4, t, e2) {
        return t = e2 ? i3 : t, t = n4 && t == null ? n4.length : t, Yn3(n4, qn3, i3, i3, i3, i3, t);
      }
      function Xu(n4, t) {
        var e2;
        if (typeof t != "function") throw new wn2(F);
        return n4 = R2(n4), function() {
          return --n4 > 0 && (e2 = t.apply(this, arguments)), n4 <= 1 && (t = i3), e2;
        };
      }
      var Ci = T3(function(n4, t, e2) {
        var r2 = vn3;
        if (e2.length) {
          var s2 = tt3(e2, Ft4(Ci));
          r2 |= Nn2;
        }
        return Yn3(n4, r2, t, e2, s2);
      }), Qu = T3(function(n4, t, e2) {
        var r2 = vn3 | ft4;
        if (e2.length) {
          var s2 = tt3(e2, Ft4(Qu));
          r2 |= Nn2;
        }
        return Yn3(t, r2, n4, e2, s2);
      });
      function Vu(n4, t, e2) {
        t = e2 ? i3 : t;
        var r2 = Yn3(n4, Dn2, i3, i3, i3, i3, i3, t);
        return r2.placeholder = Vu.placeholder, r2;
      }
      function ku(n4, t, e2) {
        t = e2 ? i3 : t;
        var r2 = Yn3(n4, xt4, i3, i3, i3, i3, i3, t);
        return r2.placeholder = ku.placeholder, r2;
      }
      function ju(n4, t, e2) {
        var r2, s2, o3, f4, c5, l4, v4 = 0, _5 = false, m4 = false, w5 = true;
        if (typeof n4 != "function") throw new wn2(F);
        t = xn2(t) || 0, z4(e2) && (_5 = !!e2.leading, m4 = "maxWait" in e2, o3 = m4 ? Q4(xn2(e2.maxWait) || 0, t) : o3, w5 = "trailing" in e2 ? !!e2.trailing : w5);
        function A3(Z4) {
          var Tn2 = r2, Vn3 = s2;
          return r2 = s2 = i3, v4 = Z4, f4 = n4.apply(Vn3, Tn2), f4;
        }
        function E6(Z4) {
          return v4 = Z4, c5 = he3(L5, t), _5 ? A3(Z4) : f4;
        }
        function b5(Z4) {
          var Tn2 = Z4 - l4, Vn3 = Z4 - v4, ma = t - Tn2;
          return m4 ? nn2(ma, o3 - Vn3) : ma;
        }
        function y6(Z4) {
          var Tn2 = Z4 - l4, Vn3 = Z4 - v4;
          return l4 === i3 || Tn2 >= t || Tn2 < 0 || m4 && Vn3 >= o3;
        }
        function L5() {
          var Z4 = er3();
          if (y6(Z4)) return H5(Z4);
          c5 = he3(L5, b5(Z4));
        }
        function H5(Z4) {
          return c5 = i3, w5 && r2 ? A3(Z4) : (r2 = s2 = i3, f4);
        }
        function dn() {
          c5 !== i3 && fu(c5), v4 = 0, r2 = l4 = s2 = c5 = i3;
        }
        function sn2() {
          return c5 === i3 ? f4 : H5(er3());
        }
        function gn2() {
          var Z4 = er3(), Tn2 = y6(Z4);
          if (r2 = arguments, s2 = this, l4 = Z4, Tn2) {
            if (c5 === i3) return E6(l4);
            if (m4) return fu(c5), c5 = he3(L5, t), A3(l4);
          }
          return c5 === i3 && (c5 = he3(L5, t)), f4;
        }
        return gn2.cancel = dn, gn2.flush = sn2, gn2;
      }
      var Ql = T3(function(n4, t) {
        return Bs2(n4, 1, t);
      }), Vl = T3(function(n4, t, e2) {
        return Bs2(n4, xn2(t) || 0, e2);
      });
      function kl(n4) {
        return Yn3(n4, pr3);
      }
      function rr3(n4, t) {
        if (typeof n4 != "function" || t != null && typeof t != "function") throw new wn2(F);
        var e2 = function() {
          var r2 = arguments, s2 = t ? t.apply(this, r2) : r2[0], o3 = e2.cache;
          if (o3.has(s2)) return o3.get(s2);
          var f4 = n4.apply(this, r2);
          return e2.cache = o3.set(s2, f4) || o3, f4;
        };
        return e2.cache = new (rr3.Cache || zn2)(), e2;
      }
      rr3.Cache = zn2;
      function ir3(n4) {
        if (typeof n4 != "function") throw new wn2(F);
        return function() {
          var t = arguments;
          switch (t.length) {
            case 0:
              return !n4.call(this);
            case 1:
              return !n4.call(this, t[0]);
            case 2:
              return !n4.call(this, t[0], t[1]);
            case 3:
              return !n4.call(this, t[0], t[1], t[2]);
          }
          return !n4.apply(this, t);
        };
      }
      function jl(n4) {
        return Xu(2, n4);
      }
      var np = Mc(function(n4, t) {
        t = t.length == 1 && O7(t[0]) ? G5(t[0], hn2(x5())) : G5(j7(t, 1), hn2(x5()));
        var e2 = t.length;
        return T3(function(r2) {
          for (var s2 = -1, o3 = nn2(r2.length, e2); ++s2 < o3; ) r2[s2] = t[s2].call(this, r2[s2]);
          return cn2(n4, this, r2);
        });
      }), Ii = T3(function(n4, t) {
        var e2 = tt3(t, Ft4(Ii));
        return Yn3(n4, Nn2, i3, t, e2);
      }), na = T3(function(n4, t) {
        var e2 = tt3(t, Ft4(na));
        return Yn3(n4, Et3, i3, t, e2);
      }), tp = Zn2(function(n4, t) {
        return Yn3(n4, zt3, i3, i3, i3, t);
      });
      function ep(n4, t) {
        if (typeof n4 != "function") throw new wn2(F);
        return t = t === i3 ? t : R2(t), T3(n4, t);
      }
      function rp(n4, t) {
        if (typeof n4 != "function") throw new wn2(F);
        return t = t == null ? 0 : Q4(R2(t), 0), T3(function(e2) {
          var r2 = e2[t], s2 = ut4(e2, 0, t);
          return r2 && nt4(s2, r2), cn2(n4, this, s2);
        });
      }
      function ip(n4, t, e2) {
        var r2 = true, s2 = true;
        if (typeof n4 != "function") throw new wn2(F);
        return z4(e2) && (r2 = "leading" in e2 ? !!e2.leading : r2, s2 = "trailing" in e2 ? !!e2.trailing : s2), ju(n4, t, { leading: r2, maxWait: t, trailing: s2 });
      }
      function sp(n4) {
        return Ju(n4, 1);
      }
      function up(n4, t) {
        return Ii(ai(t), n4);
      }
      function ap() {
        if (!arguments.length) return [];
        var n4 = arguments[0];
        return O7(n4) ? n4 : [n4];
      }
      function op(n4) {
        return An3(n4, Ct3);
      }
      function fp(n4, t) {
        return t = typeof t == "function" ? t : i3, An3(n4, Ct3, t);
      }
      function cp(n4) {
        return An3(n4, Ln2 | Ct3);
      }
      function hp(n4, t) {
        return t = typeof t == "function" ? t : i3, An3(n4, Ln2 | Ct3, t);
      }
      function lp(n4, t) {
        return t == null || qs2(n4, t, V3(t));
      }
      function bn2(n4, t) {
        return n4 === t || n4 !== n4 && t !== t;
      }
      var pp = Qe5(Xr2), dp = Qe5(function(n4, t) {
        return n4 >= t;
      }), wt4 = Zs2(/* @__PURE__ */ function() {
        return arguments;
      }()) ? Zs2 : function(n4) {
        return K4(n4) && W3.call(n4, "callee") && !Ds2.call(n4, "callee");
      }, O7 = d3.isArray, gp = ds2 ? hn2(ds2) : Ic;
      function an2(n4) {
        return n4 != null && sr3(n4.length) && !Xn3(n4);
      }
      function Y3(n4) {
        return K4(n4) && an2(n4);
      }
      function vp(n4) {
        return n4 === true || n4 === false || K4(n4) && en3(n4) == Kt4;
      }
      var at3 = bf || Ni, _p = gs2 ? hn2(gs2) : xc;
      function mp(n4) {
        return K4(n4) && n4.nodeType === 1 && !le5(n4);
      }
      function wp(n4) {
        if (n4 == null) return true;
        if (an2(n4) && (O7(n4) || typeof n4 == "string" || typeof n4.splice == "function" || at3(n4) || Mt4(n4) || wt4(n4))) return !n4.length;
        var t = tn2(n4);
        if (t == yn2 || t == Sn2) return !n4.size;
        if (ce4(n4)) return !kr2(n4).length;
        for (var e2 in n4) if (W3.call(n4, e2)) return false;
        return true;
      }
      function Pp(n4, t) {
        return ae4(n4, t);
      }
      function Ap(n4, t, e2) {
        e2 = typeof e2 == "function" ? e2 : i3;
        var r2 = e2 ? e2(n4, t) : i3;
        return r2 === i3 ? ae4(n4, t, i3, e2) : !!r2;
      }
      function xi(n4) {
        if (!K4(n4)) return false;
        var t = en3(n4);
        return t == _e3 || t == Ba || typeof n4.message == "string" && typeof n4.name == "string" && !le5(n4);
      }
      function Cp(n4) {
        return typeof n4 == "number" && Hs2(n4);
      }
      function Xn3(n4) {
        if (!z4(n4)) return false;
        var t = en3(n4);
        return t == me2 || t == Bi2 || t == qa || t == za;
      }
      function ta(n4) {
        return typeof n4 == "number" && n4 == R2(n4);
      }
      function sr3(n4) {
        return typeof n4 == "number" && n4 > -1 && n4 % 1 == 0 && n4 <= kn3;
      }
      function z4(n4) {
        var t = typeof n4;
        return n4 != null && (t == "object" || t == "function");
      }
      function K4(n4) {
        return n4 != null && typeof n4 == "object";
      }
      var ea = vs2 ? hn2(vs2) : yc;
      function Ip(n4, t) {
        return n4 === t || Vr2(n4, t, di(t));
      }
      function xp(n4, t, e2) {
        return e2 = typeof e2 == "function" ? e2 : i3, Vr2(n4, t, di(t), e2);
      }
      function Ep(n4) {
        return ra(n4) && n4 != +n4;
      }
      function yp(n4) {
        if (fh(n4)) throw new S5(D4);
        return Js2(n4);
      }
      function Sp(n4) {
        return n4 === null;
      }
      function Op(n4) {
        return n4 == null;
      }
      function ra(n4) {
        return typeof n4 == "number" || K4(n4) && en3(n4) == Zt2;
      }
      function le5(n4) {
        if (!K4(n4) || en3(n4) != Bn3) return false;
        var t = Le3(n4);
        if (t === null) return true;
        var e2 = W3.call(t, "constructor") && t.constructor;
        return typeof e2 == "function" && e2 instanceof e2 && Oe4.call(e2) == xf;
      }
      var Ei = _s2 ? hn2(_s2) : Sc;
      function Rp(n4) {
        return ta(n4) && n4 >= -kn3 && n4 <= kn3;
      }
      var ia = ms2 ? hn2(ms2) : Oc;
      function ur2(n4) {
        return typeof n4 == "string" || !O7(n4) && K4(n4) && en3(n4) == Xt2;
      }
      function pn2(n4) {
        return typeof n4 == "symbol" || K4(n4) && en3(n4) == we3;
      }
      var Mt4 = ws2 ? hn2(ws2) : Rc;
      function bp(n4) {
        return n4 === i3;
      }
      function Tp(n4) {
        return K4(n4) && tn2(n4) == Qt2;
      }
      function Lp(n4) {
        return K4(n4) && en3(n4) == Ya;
      }
      var Dp = Qe5(jr2), Np = Qe5(function(n4, t) {
        return n4 <= t;
      });
      function sa(n4) {
        if (!n4) return [];
        if (an2(n4)) return ur2(n4) ? On3(n4) : un2(n4);
        if (jt3 && n4[jt3]) return lf(n4[jt3]());
        var t = tn2(n4), e2 = t == yn2 ? Mr2 : t == Sn2 ? Ee2 : qt3;
        return e2(n4);
      }
      function Qn2(n4) {
        if (!n4) return n4 === 0 ? n4 : 0;
        if (n4 = xn2(n4), n4 === ct4 || n4 === -ct4) {
          var t = n4 < 0 ? -1 : 1;
          return t * Ua;
        }
        return n4 === n4 ? n4 : 0;
      }
      function R2(n4) {
        var t = Qn2(n4), e2 = t % 1;
        return t === t ? e2 ? t - e2 : t : 0;
      }
      function ua(n4) {
        return n4 ? gt3(R2(n4), 0, Hn2) : 0;
      }
      function xn2(n4) {
        if (typeof n4 == "number") return n4;
        if (pn2(n4)) return ge3;
        if (z4(n4)) {
          var t = typeof n4.valueOf == "function" ? n4.valueOf() : n4;
          n4 = z4(t) ? t + "" : t;
        }
        if (typeof n4 != "string") return n4 === 0 ? n4 : +n4;
        n4 = Es2(n4);
        var e2 = po2.test(n4);
        return e2 || vo2.test(n4) ? Jo2(n4.slice(2), e2 ? 2 : 8) : lo2.test(n4) ? ge3 : +n4;
      }
      function aa(n4) {
        return Un3(n4, on3(n4));
      }
      function Hp(n4) {
        return n4 ? gt3(R2(n4), -kn3, kn3) : n4 === 0 ? n4 : 0;
      }
      function U6(n4) {
        return n4 == null ? "" : ln(n4);
      }
      var $p = Ut4(function(n4, t) {
        if (ce4(t) || an2(t)) {
          Un3(t, V3(t), n4);
          return;
        }
        for (var e2 in t) W3.call(t, e2) && ie3(n4, e2, t[e2]);
      }), oa = Ut4(function(n4, t) {
        Un3(t, on3(t), n4);
      }), ar3 = Ut4(function(n4, t, e2, r2) {
        Un3(t, on3(t), n4, r2);
      }), Up = Ut4(function(n4, t, e2, r2) {
        Un3(t, V3(t), n4, r2);
      }), Wp = Zn2(Yr2);
      function Fp(n4, t) {
        var e2 = $t4(n4);
        return t == null ? e2 : Ms2(e2, t);
      }
      var Mp = T3(function(n4, t) {
        n4 = M6(n4);
        var e2 = -1, r2 = t.length, s2 = r2 > 2 ? t[2] : i3;
        for (s2 && rn3(t[0], t[1], s2) && (r2 = 1); ++e2 < r2; ) for (var o3 = t[e2], f4 = on3(o3), c5 = -1, l4 = f4.length; ++c5 < l4; ) {
          var v4 = f4[c5], _5 = n4[v4];
          (_5 === i3 || bn2(_5, Dt4[v4]) && !W3.call(n4, v4)) && (n4[v4] = o3[v4]);
        }
        return n4;
      }), qp = T3(function(n4) {
        return n4.push(i3, Eu), cn2(fa, i3, n4);
      });
      function Bp(n4, t) {
        return As2(n4, x5(t, 3), $n3);
      }
      function Gp(n4, t) {
        return As2(n4, x5(t, 3), Jr2);
      }
      function zp(n4, t) {
        return n4 == null ? n4 : Zr2(n4, x5(t, 3), on3);
      }
      function Kp(n4, t) {
        return n4 == null ? n4 : Ks2(n4, x5(t, 3), on3);
      }
      function Yp(n4, t) {
        return n4 && $n3(n4, x5(t, 3));
      }
      function Zp(n4, t) {
        return n4 && Jr2(n4, x5(t, 3));
      }
      function Jp(n4) {
        return n4 == null ? [] : Be3(n4, V3(n4));
      }
      function Xp(n4) {
        return n4 == null ? [] : Be3(n4, on3(n4));
      }
      function yi(n4, t, e2) {
        var r2 = n4 == null ? i3 : vt3(n4, t);
        return r2 === i3 ? e2 : r2;
      }
      function Qp(n4, t) {
        return n4 != null && Ou(n4, t, wc);
      }
      function Si2(n4, t) {
        return n4 != null && Ou(n4, t, Pc);
      }
      var Vp = Pu(function(n4, t, e2) {
        t != null && typeof t.toString != "function" && (t = Re3.call(t)), n4[t] = e2;
      }, Ri(fn)), kp = Pu(function(n4, t, e2) {
        t != null && typeof t.toString != "function" && (t = Re3.call(t)), W3.call(n4, t) ? n4[t].push(e2) : n4[t] = [e2];
      }, x5), jp = T3(ue3);
      function V3(n4) {
        return an2(n4) ? Ws2(n4) : kr2(n4);
      }
      function on3(n4) {
        return an2(n4) ? Ws2(n4, true) : bc(n4);
      }
      function nd(n4, t) {
        var e2 = {};
        return t = x5(t, 3), $n3(n4, function(r2, s2, o3) {
          Kn3(e2, t(r2, s2, o3), r2);
        }), e2;
      }
      function td(n4, t) {
        var e2 = {};
        return t = x5(t, 3), $n3(n4, function(r2, s2, o3) {
          Kn3(e2, s2, t(r2, s2, o3));
        }), e2;
      }
      var ed = Ut4(function(n4, t, e2) {
        Ge4(n4, t, e2);
      }), fa = Ut4(function(n4, t, e2, r2) {
        Ge4(n4, t, e2, r2);
      }), rd = Zn2(function(n4, t) {
        var e2 = {};
        if (n4 == null) return e2;
        var r2 = false;
        t = G5(t, function(o3) {
          return o3 = st3(o3, n4), r2 || (r2 = o3.length > 1), o3;
        }), Un3(n4, li(n4), e2), r2 && (e2 = An3(e2, Ln2 | Mn3 | Ct3, Vc));
        for (var s2 = t.length; s2--; ) ii(e2, t[s2]);
        return e2;
      });
      function id(n4, t) {
        return ca(n4, ir3(x5(t)));
      }
      var sd = Zn2(function(n4, t) {
        return n4 == null ? {} : Lc(n4, t);
      });
      function ca(n4, t) {
        if (n4 == null) return {};
        var e2 = G5(li(n4), function(r2) {
          return [r2];
        });
        return t = x5(t), tu(n4, e2, function(r2, s2) {
          return t(r2, s2[0]);
        });
      }
      function ud(n4, t, e2) {
        t = st3(t, n4);
        var r2 = -1, s2 = t.length;
        for (s2 || (s2 = 1, n4 = i3); ++r2 < s2; ) {
          var o3 = n4 == null ? i3 : n4[Wn2(t[r2])];
          o3 === i3 && (r2 = s2, o3 = e2), n4 = Xn3(o3) ? o3.call(n4) : o3;
        }
        return n4;
      }
      function ad(n4, t, e2) {
        return n4 == null ? n4 : oe4(n4, t, e2);
      }
      function od(n4, t, e2, r2) {
        return r2 = typeof r2 == "function" ? r2 : i3, n4 == null ? n4 : oe4(n4, t, e2, r2);
      }
      var ha = Iu(V3), la = Iu(on3);
      function fd(n4, t, e2) {
        var r2 = O7(n4), s2 = r2 || at3(n4) || Mt4(n4);
        if (t = x5(t, 4), e2 == null) {
          var o3 = n4 && n4.constructor;
          s2 ? e2 = r2 ? new o3() : [] : z4(n4) ? e2 = Xn3(o3) ? $t4(Le3(n4)) : {} : e2 = {};
        }
        return (s2 ? mn3 : $n3)(n4, function(f4, c5, l4) {
          return t(e2, f4, c5, l4);
        }), e2;
      }
      function cd(n4, t) {
        return n4 == null ? true : ii(n4, t);
      }
      function hd(n4, t, e2) {
        return n4 == null ? n4 : uu(n4, t, ai(e2));
      }
      function ld(n4, t, e2, r2) {
        return r2 = typeof r2 == "function" ? r2 : i3, n4 == null ? n4 : uu(n4, t, ai(e2), r2);
      }
      function qt3(n4) {
        return n4 == null ? [] : Fr2(n4, V3(n4));
      }
      function pd(n4) {
        return n4 == null ? [] : Fr2(n4, on3(n4));
      }
      function dd(n4, t, e2) {
        return e2 === i3 && (e2 = t, t = i3), e2 !== i3 && (e2 = xn2(e2), e2 = e2 === e2 ? e2 : 0), t !== i3 && (t = xn2(t), t = t === t ? t : 0), gt3(xn2(n4), t, e2);
      }
      function gd(n4, t, e2) {
        return t = Qn2(t), e2 === i3 ? (e2 = t, t = 0) : e2 = Qn2(e2), n4 = xn2(n4), Ac(n4, t, e2);
      }
      function vd(n4, t, e2) {
        if (e2 && typeof e2 != "boolean" && rn3(n4, t, e2) && (t = e2 = i3), e2 === i3 && (typeof t == "boolean" ? (e2 = t, t = i3) : typeof n4 == "boolean" && (e2 = n4, n4 = i3)), n4 === i3 && t === i3 ? (n4 = 0, t = 1) : (n4 = Qn2(n4), t === i3 ? (t = n4, n4 = 0) : t = Qn2(t)), n4 > t) {
          var r2 = n4;
          n4 = t, t = r2;
        }
        if (e2 || n4 % 1 || t % 1) {
          var s2 = $s2();
          return nn2(n4 + s2 * (t - n4 + Zo2("1e-" + ((s2 + "").length - 1))), t);
        }
        return ti(n4, t);
      }
      var _d = Wt2(function(n4, t, e2) {
        return t = t.toLowerCase(), n4 + (e2 ? pa(t) : t);
      });
      function pa(n4) {
        return Oi2(U6(n4).toLowerCase());
      }
      function da(n4) {
        return n4 = U6(n4), n4 && n4.replace(mo2, af).replace(Uo2, "");
      }
      function md(n4, t, e2) {
        n4 = U6(n4), t = ln(t);
        var r2 = n4.length;
        e2 = e2 === i3 ? r2 : gt3(R2(e2), 0, r2);
        var s2 = e2;
        return e2 -= t.length, e2 >= 0 && n4.slice(e2, s2) == t;
      }
      function wd(n4) {
        return n4 = U6(n4), n4 && Va.test(n4) ? n4.replace(Ki2, of) : n4;
      }
      function Pd(n4) {
        return n4 = U6(n4), n4 && ro2.test(n4) ? n4.replace(Ir3, "\\$&") : n4;
      }
      var Ad = Wt2(function(n4, t, e2) {
        return n4 + (e2 ? "-" : "") + t.toLowerCase();
      }), Cd = Wt2(function(n4, t, e2) {
        return n4 + (e2 ? " " : "") + t.toLowerCase();
      }), Id = _u("toLowerCase");
      function xd(n4, t, e2) {
        n4 = U6(n4), t = R2(t);
        var r2 = t ? Tt4(n4) : 0;
        if (!t || r2 >= t) return n4;
        var s2 = (t - r2) / 2;
        return Xe4($e4(s2), e2) + n4 + Xe4(He4(s2), e2);
      }
      function Ed(n4, t, e2) {
        n4 = U6(n4), t = R2(t);
        var r2 = t ? Tt4(n4) : 0;
        return t && r2 < t ? n4 + Xe4(t - r2, e2) : n4;
      }
      function yd(n4, t, e2) {
        n4 = U6(n4), t = R2(t);
        var r2 = t ? Tt4(n4) : 0;
        return t && r2 < t ? Xe4(t - r2, e2) + n4 : n4;
      }
      function Sd(n4, t, e2) {
        return e2 || t == null ? t = 0 : t && (t = +t), Nf(U6(n4).replace(xr2, ""), t || 0);
      }
      function Od(n4, t, e2) {
        return (e2 ? rn3(n4, t, e2) : t === i3) ? t = 1 : t = R2(t), ei(U6(n4), t);
      }
      function Rd() {
        var n4 = arguments, t = U6(n4[0]);
        return n4.length < 3 ? t : t.replace(n4[1], n4[2]);
      }
      var bd = Wt2(function(n4, t, e2) {
        return n4 + (e2 ? "_" : "") + t.toLowerCase();
      });
      function Td(n4, t, e2) {
        return e2 && typeof e2 != "number" && rn3(n4, t, e2) && (t = e2 = i3), e2 = e2 === i3 ? Hn2 : e2 >>> 0, e2 ? (n4 = U6(n4), n4 && (typeof t == "string" || t != null && !Ei(t)) && (t = ln(t), !t && bt3(n4)) ? ut4(On3(n4), 0, e2) : n4.split(t, e2)) : [];
      }
      var Ld = Wt2(function(n4, t, e2) {
        return n4 + (e2 ? " " : "") + Oi2(t);
      });
      function Dd(n4, t, e2) {
        return n4 = U6(n4), e2 = e2 == null ? 0 : gt3(R2(e2), 0, n4.length), t = ln(t), n4.slice(e2, e2 + t.length) == t;
      }
      function Nd(n4, t, e2) {
        var r2 = a2.templateSettings;
        e2 && rn3(n4, t, e2) && (t = i3), n4 = U6(n4), t = ar3({}, t, r2, xu);
        var s2 = ar3({}, t.imports, r2.imports, xu), o3 = V3(s2), f4 = Fr2(s2, o3), c5, l4, v4 = 0, _5 = t.interpolate || Pe3, m4 = "__p += '", w5 = qr2((t.escape || Pe3).source + "|" + _5.source + "|" + (_5 === Yi2 ? ho2 : Pe3).source + "|" + (t.evaluate || Pe3).source + "|$", "g"), A3 = "//# sourceURL=" + (W3.call(t, "sourceURL") ? (t.sourceURL + "").replace(/\s/g, " ") : "lodash.templateSources[" + ++Bo2 + "]") + `
`;
        n4.replace(w5, function(y6, L5, H5, dn, sn2, gn2) {
          return H5 || (H5 = dn), m4 += n4.slice(v4, gn2).replace(wo2, ff), L5 && (c5 = true, m4 += `' +
__e(` + L5 + `) +
'`), sn2 && (l4 = true, m4 += `';
` + sn2 + `;
__p += '`), H5 && (m4 += `' +
((__t = (` + H5 + `)) == null ? '' : __t) +
'`), v4 = gn2 + y6.length, y6;
        }), m4 += `';
`;
        var E6 = W3.call(t, "variable") && t.variable;
        if (!E6) m4 = `with (obj) {
` + m4 + `
}
`;
        else if (fo2.test(E6)) throw new S5(Fn3);
        m4 = (l4 ? m4.replace(Za, "") : m4).replace(Ja, "$1").replace(Xa, "$1;"), m4 = "function(" + (E6 || "obj") + `) {
` + (E6 ? "" : `obj || (obj = {});
`) + "var __t, __p = ''" + (c5 ? ", __e = _.escape" : "") + (l4 ? `, __j = Array.prototype.join;
function print() { __p += __j.call(arguments, '') }
` : `;
`) + m4 + `return __p
}`;
        var b5 = va(function() {
          return $5(o3, A3 + "return " + m4).apply(i3, f4);
        });
        if (b5.source = m4, xi(b5)) throw b5;
        return b5;
      }
      function Hd(n4) {
        return U6(n4).toLowerCase();
      }
      function $d(n4) {
        return U6(n4).toUpperCase();
      }
      function Ud(n4, t, e2) {
        if (n4 = U6(n4), n4 && (e2 || t === i3)) return Es2(n4);
        if (!n4 || !(t = ln(t))) return n4;
        var r2 = On3(n4), s2 = On3(t), o3 = ys2(r2, s2), f4 = Ss2(r2, s2) + 1;
        return ut4(r2, o3, f4).join("");
      }
      function Wd(n4, t, e2) {
        if (n4 = U6(n4), n4 && (e2 || t === i3)) return n4.slice(0, Rs2(n4) + 1);
        if (!n4 || !(t = ln(t))) return n4;
        var r2 = On3(n4), s2 = Ss2(r2, On3(t)) + 1;
        return ut4(r2, 0, s2).join("");
      }
      function Fd(n4, t, e2) {
        if (n4 = U6(n4), n4 && (e2 || t === i3)) return n4.replace(xr2, "");
        if (!n4 || !(t = ln(t))) return n4;
        var r2 = On3(n4), s2 = ys2(r2, On3(t));
        return ut4(r2, s2).join("");
      }
      function Md(n4, t) {
        var e2 = Ta, r2 = La;
        if (z4(t)) {
          var s2 = "separator" in t ? t.separator : s2;
          e2 = "length" in t ? R2(t.length) : e2, r2 = "omission" in t ? ln(t.omission) : r2;
        }
        n4 = U6(n4);
        var o3 = n4.length;
        if (bt3(n4)) {
          var f4 = On3(n4);
          o3 = f4.length;
        }
        if (e2 >= o3) return n4;
        var c5 = e2 - Tt4(r2);
        if (c5 < 1) return r2;
        var l4 = f4 ? ut4(f4, 0, c5).join("") : n4.slice(0, c5);
        if (s2 === i3) return l4 + r2;
        if (f4 && (c5 += l4.length - c5), Ei(s2)) {
          if (n4.slice(c5).search(s2)) {
            var v4, _5 = l4;
            for (s2.global || (s2 = qr2(s2.source, U6(Zi2.exec(s2)) + "g")), s2.lastIndex = 0; v4 = s2.exec(_5); ) var m4 = v4.index;
            l4 = l4.slice(0, m4 === i3 ? c5 : m4);
          }
        } else if (n4.indexOf(ln(s2), c5) != c5) {
          var w5 = l4.lastIndexOf(s2);
          w5 > -1 && (l4 = l4.slice(0, w5));
        }
        return l4 + r2;
      }
      function qd(n4) {
        return n4 = U6(n4), n4 && Qa.test(n4) ? n4.replace(zi, vf) : n4;
      }
      var Bd = Wt2(function(n4, t, e2) {
        return n4 + (e2 ? " " : "") + t.toUpperCase();
      }), Oi2 = _u("toUpperCase");
      function ga(n4, t, e2) {
        return n4 = U6(n4), t = e2 ? i3 : t, t === i3 ? hf(n4) ? wf(n4) : tf(n4) : n4.match(t) || [];
      }
      var va = T3(function(n4, t) {
        try {
          return cn2(n4, i3, t);
        } catch (e2) {
          return xi(e2) ? e2 : new S5(e2);
        }
      }), Gd = Zn2(function(n4, t) {
        return mn3(t, function(e2) {
          e2 = Wn2(e2), Kn3(n4, e2, Ci(n4[e2], n4));
        }), n4;
      });
      function zd(n4) {
        var t = n4 == null ? 0 : n4.length, e2 = x5();
        return n4 = t ? G5(n4, function(r2) {
          if (typeof r2[1] != "function") throw new wn2(F);
          return [e2(r2[0]), r2[1]];
        }) : [], T3(function(r2) {
          for (var s2 = -1; ++s2 < t; ) {
            var o3 = n4[s2];
            if (cn2(o3[0], this, r2)) return cn2(o3[1], this, r2);
          }
        });
      }
      function Kd(n4) {
        return vc(An3(n4, Ln2));
      }
      function Ri(n4) {
        return function() {
          return n4;
        };
      }
      function Yd(n4, t) {
        return n4 == null || n4 !== n4 ? t : n4;
      }
      var Zd = wu(), Jd = wu(true);
      function fn(n4) {
        return n4;
      }
      function bi(n4) {
        return Xs2(typeof n4 == "function" ? n4 : An3(n4, Ln2));
      }
      function Xd(n4) {
        return Vs2(An3(n4, Ln2));
      }
      function Qd(n4, t) {
        return ks2(n4, An3(t, Ln2));
      }
      var Vd = T3(function(n4, t) {
        return function(e2) {
          return ue3(e2, n4, t);
        };
      }), kd = T3(function(n4, t) {
        return function(e2) {
          return ue3(n4, e2, t);
        };
      });
      function Ti(n4, t, e2) {
        var r2 = V3(t), s2 = Be3(t, r2);
        e2 == null && !(z4(t) && (s2.length || !r2.length)) && (e2 = t, t = n4, n4 = this, s2 = Be3(t, V3(t)));
        var o3 = !(z4(e2) && "chain" in e2) || !!e2.chain, f4 = Xn3(n4);
        return mn3(s2, function(c5) {
          var l4 = t[c5];
          n4[c5] = l4, f4 && (n4.prototype[c5] = function() {
            var v4 = this.__chain__;
            if (o3 || v4) {
              var _5 = n4(this.__wrapped__), m4 = _5.__actions__ = un2(this.__actions__);
              return m4.push({ func: l4, args: arguments, thisArg: n4 }), _5.__chain__ = v4, _5;
            }
            return l4.apply(n4, nt4([this.value()], arguments));
          });
        }), n4;
      }
      function jd() {
        return k4._ === this && (k4._ = Ef), this;
      }
      function Li2() {
      }
      function ng(n4) {
        return n4 = R2(n4), T3(function(t) {
          return js2(t, n4);
        });
      }
      var tg = fi(G5), eg = fi(Ps2), rg = fi(Nr2);
      function _a(n4) {
        return vi(n4) ? Hr2(Wn2(n4)) : Dc(n4);
      }
      function ig(n4) {
        return function(t) {
          return n4 == null ? i3 : vt3(n4, t);
        };
      }
      var sg = Au(), ug = Au(true);
      function Di() {
        return [];
      }
      function Ni() {
        return false;
      }
      function ag() {
        return {};
      }
      function og() {
        return "";
      }
      function fg() {
        return true;
      }
      function cg(n4, t) {
        if (n4 = R2(n4), n4 < 1 || n4 > kn3) return [];
        var e2 = Hn2, r2 = nn2(n4, Hn2);
        t = x5(t), n4 -= Hn2;
        for (var s2 = Wr2(r2, t); ++e2 < n4; ) t(e2);
        return s2;
      }
      function hg(n4) {
        return O7(n4) ? G5(n4, Wn2) : pn2(n4) ? [n4] : un2(Uu(U6(n4)));
      }
      function lg(n4) {
        var t = ++If;
        return U6(n4) + t;
      }
      var pg = Je4(function(n4, t) {
        return n4 + t;
      }, 0), dg = ci("ceil"), gg = Je4(function(n4, t) {
        return n4 / t;
      }, 1), vg = ci("floor");
      function _g(n4) {
        return n4 && n4.length ? qe4(n4, fn, Xr2) : i3;
      }
      function mg(n4, t) {
        return n4 && n4.length ? qe4(n4, x5(t, 2), Xr2) : i3;
      }
      function wg(n4) {
        return Is2(n4, fn);
      }
      function Pg(n4, t) {
        return Is2(n4, x5(t, 2));
      }
      function Ag(n4) {
        return n4 && n4.length ? qe4(n4, fn, jr2) : i3;
      }
      function Cg(n4, t) {
        return n4 && n4.length ? qe4(n4, x5(t, 2), jr2) : i3;
      }
      var Ig = Je4(function(n4, t) {
        return n4 * t;
      }, 1), xg = ci("round"), Eg = Je4(function(n4, t) {
        return n4 - t;
      }, 0);
      function yg(n4) {
        return n4 && n4.length ? Ur2(n4, fn) : 0;
      }
      function Sg(n4, t) {
        return n4 && n4.length ? Ur2(n4, x5(t, 2)) : 0;
      }
      return a2.after = Xl, a2.ary = Ju, a2.assign = $p, a2.assignIn = oa, a2.assignInWith = ar3, a2.assignWith = Up, a2.at = Wp, a2.before = Xu, a2.bind = Ci, a2.bindAll = Gd, a2.bindKey = Qu, a2.castArray = ap, a2.chain = Ku, a2.chunk = vh, a2.compact = _h, a2.concat = mh, a2.cond = zd, a2.conforms = Kd, a2.constant = Ri, a2.countBy = yl, a2.create = Fp, a2.curry = Vu, a2.curryRight = ku, a2.debounce = ju, a2.defaults = Mp, a2.defaultsDeep = qp, a2.defer = Ql, a2.delay = Vl, a2.difference = wh, a2.differenceBy = Ph, a2.differenceWith = Ah, a2.drop = Ch, a2.dropRight = Ih, a2.dropRightWhile = xh, a2.dropWhile = Eh, a2.fill = yh, a2.filter = Ol, a2.flatMap = Tl, a2.flatMapDeep = Ll, a2.flatMapDepth = Dl, a2.flatten = qu, a2.flattenDeep = Sh, a2.flattenDepth = Oh, a2.flip = kl, a2.flow = Zd, a2.flowRight = Jd, a2.fromPairs = Rh, a2.functions = Jp, a2.functionsIn = Xp, a2.groupBy = Nl, a2.initial = Th, a2.intersection = Lh, a2.intersectionBy = Dh, a2.intersectionWith = Nh, a2.invert = Vp, a2.invertBy = kp, a2.invokeMap = $l, a2.iteratee = bi, a2.keyBy = Ul, a2.keys = V3, a2.keysIn = on3, a2.map = tr3, a2.mapKeys = nd, a2.mapValues = td, a2.matches = Xd, a2.matchesProperty = Qd, a2.memoize = rr3, a2.merge = ed, a2.mergeWith = fa, a2.method = Vd, a2.methodOf = kd, a2.mixin = Ti, a2.negate = ir3, a2.nthArg = ng, a2.omit = rd, a2.omitBy = id, a2.once = jl, a2.orderBy = Wl, a2.over = tg, a2.overArgs = np, a2.overEvery = eg, a2.overSome = rg, a2.partial = Ii, a2.partialRight = na, a2.partition = Fl, a2.pick = sd, a2.pickBy = ca, a2.property = _a, a2.propertyOf = ig, a2.pull = Wh, a2.pullAll = Gu, a2.pullAllBy = Fh, a2.pullAllWith = Mh, a2.pullAt = qh, a2.range = sg, a2.rangeRight = ug, a2.rearg = tp, a2.reject = Bl, a2.remove = Bh, a2.rest = ep, a2.reverse = Pi2, a2.sampleSize = zl, a2.set = ad, a2.setWith = od, a2.shuffle = Kl, a2.slice = Gh, a2.sortBy = Jl, a2.sortedUniq = Qh, a2.sortedUniqBy = Vh, a2.split = Td, a2.spread = rp, a2.tail = kh, a2.take = jh, a2.takeRight = nl, a2.takeRightWhile = tl, a2.takeWhile = el, a2.tap = _l, a2.throttle = ip, a2.thru = nr3, a2.toArray = sa, a2.toPairs = ha, a2.toPairsIn = la, a2.toPath = hg, a2.toPlainObject = aa, a2.transform = fd, a2.unary = sp, a2.union = rl, a2.unionBy = il, a2.unionWith = sl, a2.uniq = ul, a2.uniqBy = al, a2.uniqWith = ol, a2.unset = cd, a2.unzip = Ai, a2.unzipWith = zu, a2.update = hd, a2.updateWith = ld, a2.values = qt3, a2.valuesIn = pd, a2.without = fl, a2.words = ga, a2.wrap = up, a2.xor = cl, a2.xorBy = hl, a2.xorWith = ll, a2.zip = pl, a2.zipObject = dl, a2.zipObjectDeep = gl, a2.zipWith = vl, a2.entries = ha, a2.entriesIn = la, a2.extend = oa, a2.extendWith = ar3, Ti(a2, a2), a2.add = pg, a2.attempt = va, a2.camelCase = _d, a2.capitalize = pa, a2.ceil = dg, a2.clamp = dd, a2.clone = op, a2.cloneDeep = cp, a2.cloneDeepWith = hp, a2.cloneWith = fp, a2.conformsTo = lp, a2.deburr = da, a2.defaultTo = Yd, a2.divide = gg, a2.endsWith = md, a2.eq = bn2, a2.escape = wd, a2.escapeRegExp = Pd, a2.every = Sl, a2.find = Rl, a2.findIndex = Fu, a2.findKey = Bp, a2.findLast = bl, a2.findLastIndex = Mu, a2.findLastKey = Gp, a2.floor = vg, a2.forEach = Yu, a2.forEachRight = Zu, a2.forIn = zp, a2.forInRight = Kp, a2.forOwn = Yp, a2.forOwnRight = Zp, a2.get = yi, a2.gt = pp, a2.gte = dp, a2.has = Qp, a2.hasIn = Si2, a2.head = Bu, a2.identity = fn, a2.includes = Hl, a2.indexOf = bh, a2.inRange = gd, a2.invoke = jp, a2.isArguments = wt4, a2.isArray = O7, a2.isArrayBuffer = gp, a2.isArrayLike = an2, a2.isArrayLikeObject = Y3, a2.isBoolean = vp, a2.isBuffer = at3, a2.isDate = _p, a2.isElement = mp, a2.isEmpty = wp, a2.isEqual = Pp, a2.isEqualWith = Ap, a2.isError = xi, a2.isFinite = Cp, a2.isFunction = Xn3, a2.isInteger = ta, a2.isLength = sr3, a2.isMap = ea, a2.isMatch = Ip, a2.isMatchWith = xp, a2.isNaN = Ep, a2.isNative = yp, a2.isNil = Op, a2.isNull = Sp, a2.isNumber = ra, a2.isObject = z4, a2.isObjectLike = K4, a2.isPlainObject = le5, a2.isRegExp = Ei, a2.isSafeInteger = Rp, a2.isSet = ia, a2.isString = ur2, a2.isSymbol = pn2, a2.isTypedArray = Mt4, a2.isUndefined = bp, a2.isWeakMap = Tp, a2.isWeakSet = Lp, a2.join = Hh, a2.kebabCase = Ad, a2.last = In2, a2.lastIndexOf = $h, a2.lowerCase = Cd, a2.lowerFirst = Id, a2.lt = Dp, a2.lte = Np, a2.max = _g, a2.maxBy = mg, a2.mean = wg, a2.meanBy = Pg, a2.min = Ag, a2.minBy = Cg, a2.stubArray = Di, a2.stubFalse = Ni, a2.stubObject = ag, a2.stubString = og, a2.stubTrue = fg, a2.multiply = Ig, a2.nth = Uh, a2.noConflict = jd, a2.noop = Li2, a2.now = er3, a2.pad = xd, a2.padEnd = Ed, a2.padStart = yd, a2.parseInt = Sd, a2.random = vd, a2.reduce = Ml, a2.reduceRight = ql, a2.repeat = Od, a2.replace = Rd, a2.result = ud, a2.round = xg, a2.runInContext = h4, a2.sample = Gl, a2.size = Yl, a2.snakeCase = bd, a2.some = Zl, a2.sortedIndex = zh, a2.sortedIndexBy = Kh, a2.sortedIndexOf = Yh, a2.sortedLastIndex = Zh, a2.sortedLastIndexBy = Jh, a2.sortedLastIndexOf = Xh, a2.startCase = Ld, a2.startsWith = Dd, a2.subtract = Eg, a2.sum = yg, a2.sumBy = Sg, a2.template = Nd, a2.times = cg, a2.toFinite = Qn2, a2.toInteger = R2, a2.toLength = ua, a2.toLower = Hd, a2.toNumber = xn2, a2.toSafeInteger = Hp, a2.toString = U6, a2.toUpper = $d, a2.trim = Ud, a2.trimEnd = Wd, a2.trimStart = Fd, a2.truncate = Md, a2.unescape = qd, a2.uniqueId = lg, a2.upperCase = Bd, a2.upperFirst = Oi2, a2.each = Yu, a2.eachRight = Zu, a2.first = Bu, Ti(a2, function() {
        var n4 = {};
        return $n3(a2, function(t, e2) {
          W3.call(a2.prototype, e2) || (n4[e2] = t);
        }), n4;
      }(), { chain: false }), a2.VERSION = p7, mn3(["bind", "bindKey", "curry", "curryRight", "partial", "partialRight"], function(n4) {
        a2[n4].placeholder = a2;
      }), mn3(["drop", "take"], function(n4, t) {
        N14.prototype[n4] = function(e2) {
          e2 = e2 === i3 ? 1 : Q4(R2(e2), 0);
          var r2 = this.__filtered__ && !t ? new N14(this) : this.clone();
          return r2.__filtered__ ? r2.__takeCount__ = nn2(e2, r2.__takeCount__) : r2.__views__.push({ size: nn2(e2, Hn2), type: n4 + (r2.__dir__ < 0 ? "Right" : "") }), r2;
        }, N14.prototype[n4 + "Right"] = function(e2) {
          return this.reverse()[n4](e2).reverse();
        };
      }), mn3(["filter", "map", "takeWhile"], function(n4, t) {
        var e2 = t + 1, r2 = e2 == qi2 || e2 == $a;
        N14.prototype[n4] = function(s2) {
          var o3 = this.clone();
          return o3.__iteratees__.push({ iteratee: x5(s2, 3), type: e2 }), o3.__filtered__ = o3.__filtered__ || r2, o3;
        };
      }), mn3(["head", "last"], function(n4, t) {
        var e2 = "take" + (t ? "Right" : "");
        N14.prototype[n4] = function() {
          return this[e2](1).value()[0];
        };
      }), mn3(["initial", "tail"], function(n4, t) {
        var e2 = "drop" + (t ? "" : "Right");
        N14.prototype[n4] = function() {
          return this.__filtered__ ? new N14(this) : this[e2](1);
        };
      }), N14.prototype.compact = function() {
        return this.filter(fn);
      }, N14.prototype.find = function(n4) {
        return this.filter(n4).head();
      }, N14.prototype.findLast = function(n4) {
        return this.reverse().find(n4);
      }, N14.prototype.invokeMap = T3(function(n4, t) {
        return typeof n4 == "function" ? new N14(this) : this.map(function(e2) {
          return ue3(e2, n4, t);
        });
      }), N14.prototype.reject = function(n4) {
        return this.filter(ir3(x5(n4)));
      }, N14.prototype.slice = function(n4, t) {
        n4 = R2(n4);
        var e2 = this;
        return e2.__filtered__ && (n4 > 0 || t < 0) ? new N14(e2) : (n4 < 0 ? e2 = e2.takeRight(-n4) : n4 && (e2 = e2.drop(n4)), t !== i3 && (t = R2(t), e2 = t < 0 ? e2.dropRight(-t) : e2.take(t - n4)), e2);
      }, N14.prototype.takeRightWhile = function(n4) {
        return this.reverse().takeWhile(n4).reverse();
      }, N14.prototype.toArray = function() {
        return this.take(Hn2);
      }, $n3(N14.prototype, function(n4, t) {
        var e2 = /^(?:filter|find|map|reject)|While$/.test(t), r2 = /^(?:head|last)$/.test(t), s2 = a2[r2 ? "take" + (t == "last" ? "Right" : "") : t], o3 = r2 || /^find/.test(t);
        s2 && (a2.prototype[t] = function() {
          var f4 = this.__wrapped__, c5 = r2 ? [1] : arguments, l4 = f4 instanceof N14, v4 = c5[0], _5 = l4 || O7(f4), m4 = function(L5) {
            var H5 = s2.apply(a2, nt4([L5], c5));
            return r2 && w5 ? H5[0] : H5;
          };
          _5 && e2 && typeof v4 == "function" && v4.length != 1 && (l4 = _5 = false);
          var w5 = this.__chain__, A3 = !!this.__actions__.length, E6 = o3 && !w5, b5 = l4 && !A3;
          if (!o3 && _5) {
            f4 = b5 ? f4 : new N14(this);
            var y6 = n4.apply(f4, c5);
            return y6.__actions__.push({ func: nr3, args: [m4], thisArg: i3 }), new Pn2(y6, w5);
          }
          return E6 && b5 ? n4.apply(this, c5) : (y6 = this.thru(m4), E6 ? r2 ? y6.value()[0] : y6.value() : y6);
        });
      }), mn3(["pop", "push", "shift", "sort", "splice", "unshift"], function(n4) {
        var t = ye2[n4], e2 = /^(?:push|sort|unshift)$/.test(n4) ? "tap" : "thru", r2 = /^(?:pop|shift)$/.test(n4);
        a2.prototype[n4] = function() {
          var s2 = arguments;
          if (r2 && !this.__chain__) {
            var o3 = this.value();
            return t.apply(O7(o3) ? o3 : [], s2);
          }
          return this[e2](function(f4) {
            return t.apply(O7(f4) ? f4 : [], s2);
          });
        };
      }), $n3(N14.prototype, function(n4, t) {
        var e2 = a2[t];
        if (e2) {
          var r2 = e2.name + "";
          W3.call(Ht3, r2) || (Ht3[r2] = []), Ht3[r2].push({ name: t, func: e2 });
        }
      }), Ht3[Ze4(i3, ft4).name] = [{ name: "wrapper", func: i3 }], N14.prototype.clone = qf, N14.prototype.reverse = Bf, N14.prototype.value = Gf, a2.prototype.at = ml, a2.prototype.chain = wl, a2.prototype.commit = Pl, a2.prototype.next = Al, a2.prototype.plant = Il, a2.prototype.reverse = xl, a2.prototype.toJSON = a2.prototype.valueOf = a2.prototype.value = El, a2.prototype.first = a2.prototype.head, jt3 && (a2.prototype[jt3] = Cl), a2;
    }, Lt4 = Pf();
    ht3 ? ((ht3.exports = Lt4)._ = Lt4, br3._ = Lt4) : k4._ = Lt4;
  }).call(pe5);
})($i2, $i2.exports);
var Fg = Object.defineProperty;
var Mg = Object.defineProperties;
var qg = Object.getOwnPropertyDescriptors;
var xa = Object.getOwnPropertySymbols;
var Bg = Object.prototype.hasOwnProperty;
var Gg = Object.prototype.propertyIsEnumerable;
var Ea = (C4, u3, i3) => u3 in C4 ? Fg(C4, u3, { enumerable: true, configurable: true, writable: true, value: i3 }) : C4[u3] = i3;
var fr3 = (C4, u3) => {
  for (var i3 in u3 || (u3 = {})) Bg.call(u3, i3) && Ea(C4, i3, u3[i3]);
  if (xa) for (var i3 of xa(u3)) Gg.call(u3, i3) && Ea(C4, i3, u3[i3]);
  return C4;
};
var zg = (C4, u3) => Mg(C4, qg(u3));
function En3(C4, u3, i3) {
  let p7;
  const I2 = Ui(C4);
  return u3.rpcMap && (p7 = u3.rpcMap[I2]), p7 || (p7 = `${Wg}?chainId=eip155:${I2}&projectId=${i3}`), p7;
}
function Ui(C4) {
  return C4.includes("eip155") ? Number(C4.split(":")[1]) : Number(C4);
}
function ya(C4) {
  return C4.map((u3) => `${u3.split(":")[0]}:${u3.split(":")[1]}`);
}
function Kg(C4, u3) {
  const i3 = Object.keys(u3.namespaces).filter((I2) => I2.includes(C4));
  if (!i3.length) return [];
  const p7 = [];
  return i3.forEach((I2) => {
    const D4 = u3.namespaces[I2].accounts;
    p7.push(...D4);
  }), p7;
}
function Yg(C4 = {}, u3 = {}) {
  const i3 = Sa(C4), p7 = Sa(u3);
  return $i2.exports.merge(i3, p7);
}
function Sa(C4) {
  var u3, i3, p7, I2;
  const D4 = {};
  if (!H(C4)) return D4;
  for (const [F, Fn3] of Object.entries(C4)) {
    const Gt3 = te(F) ? [F] : Fn3.chains, lr3 = Fn3.methods || [], At3 = Fn3.events || [], Ln2 = Fn3.rpcMap || {}, Mn3 = Ze(F);
    D4[Mn3] = zg(fr3(fr3({}, D4[Mn3]), Fn3), { chains: S(Gt3, (u3 = D4[Mn3]) == null ? void 0 : u3.chains), methods: S(lr3, (i3 = D4[Mn3]) == null ? void 0 : i3.methods), events: S(At3, (p7 = D4[Mn3]) == null ? void 0 : p7.events), rpcMap: fr3(fr3({}, Ln2), (I2 = D4[Mn3]) == null ? void 0 : I2.rpcMap) });
  }
  return D4;
}
function Zg(C4) {
  return C4.includes(":") ? C4.split(":")[2] : C4;
}
function Jg(C4) {
  const u3 = {};
  for (const [i3, p7] of Object.entries(C4)) {
    const I2 = p7.methods || [], D4 = p7.events || [], F = p7.accounts || [], Fn3 = te(i3) ? [i3] : p7.chains ? p7.chains : ya(p7.accounts);
    u3[i3] = { chains: Fn3, methods: I2, events: D4, accounts: F };
  }
  return u3;
}
var Oa = {};
var J5 = (C4) => Oa[C4];
var Wi2 = (C4, u3) => {
  Oa[C4] = u3;
};
var Xg = class {
  constructor(u3) {
    this.name = "polkadot", this.namespace = u3.namespace, this.events = J5("events"), this.client = J5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u3) {
    this.namespace = Object.assign(this.namespace, u3);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const u3 = this.namespace.chains[0];
    if (!u3) throw new Error("ChainId not found");
    return u3.split(":")[1];
  }
  request(u3) {
    return this.namespace.methods.includes(u3.request.method) ? this.client.request(u3) : this.getHttpProvider().request(u3.request);
  }
  setDefaultChain(u3, i3) {
    if (this.chainId = u3, !this.httpProviders[u3]) {
      const p7 = i3 || En3(`${this.name}:${u3}`, this.namespace);
      if (!p7) throw new Error(`No RPC url provided for chainId: ${u3}`);
      this.setHttpProvider(u3, p7);
    }
    this.events.emit(ot3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getAccounts() {
    const u3 = this.namespace.accounts;
    return u3 ? u3.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]) || [] : [];
  }
  createHttpProviders() {
    const u3 = {};
    return this.namespace.chains.forEach((i3) => {
      var p7;
      u3[i3] = this.createHttpProvider(i3, (p7 = this.namespace.rpcMap) == null ? void 0 : p7[i3]);
    }), u3;
  }
  getHttpProvider() {
    const u3 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u3];
    if (typeof i3 > "u") throw new Error(`JSON-RPC provider for ${u3} not found`);
    return i3;
  }
  setHttpProvider(u3, i3) {
    const p7 = this.createHttpProvider(u3, i3);
    p7 && (this.httpProviders[u3] = p7);
  }
  createHttpProvider(u3, i3) {
    const p7 = i3 || En3(u3, this.namespace);
    return typeof p7 > "u" ? void 0 : new JsonRpcProvider2(new f2(p7, J5("disableProviderPing")));
  }
};
var Qg = class {
  constructor(u3) {
    this.name = "eip155", this.namespace = u3.namespace, this.events = J5("events"), this.client = J5("client"), this.httpProviders = this.createHttpProviders(), this.chainId = parseInt(this.getDefaultChain());
  }
  async request(u3) {
    switch (u3.request.method) {
      case "eth_requestAccounts":
        return this.getAccounts();
      case "eth_accounts":
        return this.getAccounts();
      case "wallet_switchEthereumChain":
        return await this.handleSwitchChain(u3);
      case "eth_chainId":
        return parseInt(this.getDefaultChain());
    }
    return this.namespace.methods.includes(u3.request.method) ? await this.client.request(u3) : this.getHttpProvider().request(u3.request);
  }
  updateNamespace(u3) {
    this.namespace = Object.assign(this.namespace, u3);
  }
  setDefaultChain(u3, i3) {
    const p7 = Ui(u3);
    if (!this.httpProviders[p7]) {
      const I2 = i3 || En3(`${this.name}:${p7}`, this.namespace, this.client.core.projectId);
      if (!I2) throw new Error(`No RPC url provided for chainId: ${p7}`);
      this.setHttpProvider(p7, I2);
    }
    this.chainId = p7, this.events.emit(ot3.DEFAULT_CHAIN_CHANGED, `${this.name}:${p7}`);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId.toString();
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const u3 = this.namespace.chains[0];
    if (!u3) throw new Error("ChainId not found");
    return u3.split(":")[1];
  }
  createHttpProvider(u3, i3) {
    const p7 = i3 || En3(`${this.name}:${u3}`, this.namespace, this.client.core.projectId);
    return typeof p7 > "u" ? void 0 : new JsonRpcProvider2(new f2(p7, J5("disableProviderPing")));
  }
  setHttpProvider(u3, i3) {
    const p7 = this.createHttpProvider(u3, i3);
    p7 && (this.httpProviders[u3] = p7);
  }
  createHttpProviders() {
    const u3 = {};
    return this.namespace.chains.forEach((i3) => {
      var p7;
      const I2 = Ui(i3);
      u3[I2] = this.createHttpProvider(I2, (p7 = this.namespace.rpcMap) == null ? void 0 : p7[i3]);
    }), u3;
  }
  getAccounts() {
    const u3 = this.namespace.accounts;
    return u3 ? [...new Set(u3.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  getHttpProvider() {
    const u3 = this.chainId, i3 = this.httpProviders[u3];
    if (typeof i3 > "u") throw new Error(`JSON-RPC provider for ${u3} not found`);
    return i3;
  }
  async handleSwitchChain(u3) {
    var i3, p7;
    let I2 = u3.request.params ? (i3 = u3.request.params[0]) == null ? void 0 : i3.chainId : "0x0";
    I2 = I2.startsWith("0x") ? I2 : `0x${I2}`;
    const D4 = parseInt(I2, 16);
    if (this.isChainApproved(D4)) this.setDefaultChain(`${D4}`);
    else if (this.namespace.methods.includes("wallet_switchEthereumChain")) await this.client.request({ topic: u3.topic, request: { method: u3.request.method, params: [{ chainId: I2 }] }, chainId: (p7 = this.namespace.chains) == null ? void 0 : p7[0] }), this.setDefaultChain(`${D4}`);
    else throw new Error(`Failed to switch to chain 'eip155:${D4}'. The chain is not approved or the wallet does not support 'wallet_switchEthereumChain' method.`);
    return null;
  }
  isChainApproved(u3) {
    return this.namespace.chains.includes(`${this.name}:${u3}`);
  }
};
var Vg = class {
  constructor(u3) {
    this.name = "solana", this.namespace = u3.namespace, this.events = J5("events"), this.client = J5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u3) {
    this.namespace = Object.assign(this.namespace, u3);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  request(u3) {
    return this.namespace.methods.includes(u3.request.method) ? this.client.request(u3) : this.getHttpProvider().request(u3.request);
  }
  setDefaultChain(u3, i3) {
    if (!this.httpProviders[u3]) {
      const p7 = i3 || En3(`${this.name}:${u3}`, this.namespace, this.client.core.projectId);
      if (!p7) throw new Error(`No RPC url provided for chainId: ${u3}`);
      this.setHttpProvider(u3, p7);
    }
    this.chainId = u3, this.events.emit(ot3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const u3 = this.namespace.chains[0];
    if (!u3) throw new Error("ChainId not found");
    return u3.split(":")[1];
  }
  getAccounts() {
    const u3 = this.namespace.accounts;
    return u3 ? [...new Set(u3.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u3 = {};
    return this.namespace.chains.forEach((i3) => {
      var p7;
      u3[i3] = this.createHttpProvider(i3, (p7 = this.namespace.rpcMap) == null ? void 0 : p7[i3]);
    }), u3;
  }
  getHttpProvider() {
    const u3 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u3];
    if (typeof i3 > "u") throw new Error(`JSON-RPC provider for ${u3} not found`);
    return i3;
  }
  setHttpProvider(u3, i3) {
    const p7 = this.createHttpProvider(u3, i3);
    p7 && (this.httpProviders[u3] = p7);
  }
  createHttpProvider(u3, i3) {
    const p7 = i3 || En3(u3, this.namespace, this.client.core.projectId);
    return typeof p7 > "u" ? void 0 : new JsonRpcProvider2(new f2(p7, J5("disableProviderPing")));
  }
};
var kg = class {
  constructor(u3) {
    this.name = "cosmos", this.namespace = u3.namespace, this.events = J5("events"), this.client = J5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u3) {
    this.namespace = Object.assign(this.namespace, u3);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const u3 = this.namespace.chains[0];
    if (!u3) throw new Error("ChainId not found");
    return u3.split(":")[1];
  }
  request(u3) {
    return this.namespace.methods.includes(u3.request.method) ? this.client.request(u3) : this.getHttpProvider().request(u3.request);
  }
  setDefaultChain(u3, i3) {
    if (this.chainId = u3, !this.httpProviders[u3]) {
      const p7 = i3 || En3(`${this.name}:${u3}`, this.namespace, this.client.core.projectId);
      if (!p7) throw new Error(`No RPC url provided for chainId: ${u3}`);
      this.setHttpProvider(u3, p7);
    }
    this.events.emit(ot3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getAccounts() {
    const u3 = this.namespace.accounts;
    return u3 ? [...new Set(u3.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u3 = {};
    return this.namespace.chains.forEach((i3) => {
      var p7;
      u3[i3] = this.createHttpProvider(i3, (p7 = this.namespace.rpcMap) == null ? void 0 : p7[i3]);
    }), u3;
  }
  getHttpProvider() {
    const u3 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u3];
    if (typeof i3 > "u") throw new Error(`JSON-RPC provider for ${u3} not found`);
    return i3;
  }
  setHttpProvider(u3, i3) {
    const p7 = this.createHttpProvider(u3, i3);
    p7 && (this.httpProviders[u3] = p7);
  }
  createHttpProvider(u3, i3) {
    const p7 = i3 || En3(u3, this.namespace, this.client.core.projectId);
    return typeof p7 > "u" ? void 0 : new JsonRpcProvider2(new f2(p7, J5("disableProviderPing")));
  }
};
var jg = class {
  constructor(u3) {
    this.name = "cip34", this.namespace = u3.namespace, this.events = J5("events"), this.client = J5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u3) {
    this.namespace = Object.assign(this.namespace, u3);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const u3 = this.namespace.chains[0];
    if (!u3) throw new Error("ChainId not found");
    return u3.split(":")[1];
  }
  request(u3) {
    return this.namespace.methods.includes(u3.request.method) ? this.client.request(u3) : this.getHttpProvider().request(u3.request);
  }
  setDefaultChain(u3, i3) {
    if (this.chainId = u3, !this.httpProviders[u3]) {
      const p7 = i3 || this.getCardanoRPCUrl(u3);
      if (!p7) throw new Error(`No RPC url provided for chainId: ${u3}`);
      this.setHttpProvider(u3, p7);
    }
    this.events.emit(ot3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getAccounts() {
    const u3 = this.namespace.accounts;
    return u3 ? [...new Set(u3.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u3 = {};
    return this.namespace.chains.forEach((i3) => {
      const p7 = this.getCardanoRPCUrl(i3);
      u3[i3] = this.createHttpProvider(i3, p7);
    }), u3;
  }
  getHttpProvider() {
    const u3 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u3];
    if (typeof i3 > "u") throw new Error(`JSON-RPC provider for ${u3} not found`);
    return i3;
  }
  getCardanoRPCUrl(u3) {
    const i3 = this.namespace.rpcMap;
    if (i3) return i3[u3];
  }
  setHttpProvider(u3, i3) {
    const p7 = this.createHttpProvider(u3, i3);
    p7 && (this.httpProviders[u3] = p7);
  }
  createHttpProvider(u3, i3) {
    const p7 = i3 || this.getCardanoRPCUrl(u3);
    return typeof p7 > "u" ? void 0 : new JsonRpcProvider2(new f2(p7, J5("disableProviderPing")));
  }
};
var nv = class {
  constructor(u3) {
    this.name = "elrond", this.namespace = u3.namespace, this.events = J5("events"), this.client = J5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u3) {
    this.namespace = Object.assign(this.namespace, u3);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  request(u3) {
    return this.namespace.methods.includes(u3.request.method) ? this.client.request(u3) : this.getHttpProvider().request(u3.request);
  }
  setDefaultChain(u3, i3) {
    if (!this.httpProviders[u3]) {
      const p7 = i3 || En3(`${this.name}:${u3}`, this.namespace, this.client.core.projectId);
      if (!p7) throw new Error(`No RPC url provided for chainId: ${u3}`);
      this.setHttpProvider(u3, p7);
    }
    this.chainId = u3, this.events.emit(ot3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const u3 = this.namespace.chains[0];
    if (!u3) throw new Error("ChainId not found");
    return u3.split(":")[1];
  }
  getAccounts() {
    const u3 = this.namespace.accounts;
    return u3 ? [...new Set(u3.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u3 = {};
    return this.namespace.chains.forEach((i3) => {
      var p7;
      u3[i3] = this.createHttpProvider(i3, (p7 = this.namespace.rpcMap) == null ? void 0 : p7[i3]);
    }), u3;
  }
  getHttpProvider() {
    const u3 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u3];
    if (typeof i3 > "u") throw new Error(`JSON-RPC provider for ${u3} not found`);
    return i3;
  }
  setHttpProvider(u3, i3) {
    const p7 = this.createHttpProvider(u3, i3);
    p7 && (this.httpProviders[u3] = p7);
  }
  createHttpProvider(u3, i3) {
    const p7 = i3 || En3(u3, this.namespace, this.client.core.projectId);
    return typeof p7 > "u" ? void 0 : new JsonRpcProvider2(new f2(p7, J5("disableProviderPing")));
  }
};
var tv = class {
  constructor(u3) {
    this.name = "multiversx", this.namespace = u3.namespace, this.events = J5("events"), this.client = J5("client"), this.chainId = this.getDefaultChain(), this.httpProviders = this.createHttpProviders();
  }
  updateNamespace(u3) {
    this.namespace = Object.assign(this.namespace, u3);
  }
  requestAccounts() {
    return this.getAccounts();
  }
  request(u3) {
    return this.namespace.methods.includes(u3.request.method) ? this.client.request(u3) : this.getHttpProvider().request(u3.request);
  }
  setDefaultChain(u3, i3) {
    if (!this.httpProviders[u3]) {
      const p7 = i3 || En3(`${this.name}:${u3}`, this.namespace, this.client.core.projectId);
      if (!p7) throw new Error(`No RPC url provided for chainId: ${u3}`);
      this.setHttpProvider(u3, p7);
    }
    this.chainId = u3, this.events.emit(ot3.DEFAULT_CHAIN_CHANGED, `${this.name}:${this.chainId}`);
  }
  getDefaultChain() {
    if (this.chainId) return this.chainId;
    if (this.namespace.defaultChain) return this.namespace.defaultChain;
    const u3 = this.namespace.chains[0];
    if (!u3) throw new Error("ChainId not found");
    return u3.split(":")[1];
  }
  getAccounts() {
    const u3 = this.namespace.accounts;
    return u3 ? [...new Set(u3.filter((i3) => i3.split(":")[1] === this.chainId.toString()).map((i3) => i3.split(":")[2]))] : [];
  }
  createHttpProviders() {
    const u3 = {};
    return this.namespace.chains.forEach((i3) => {
      var p7;
      u3[i3] = this.createHttpProvider(i3, (p7 = this.namespace.rpcMap) == null ? void 0 : p7[i3]);
    }), u3;
  }
  getHttpProvider() {
    const u3 = `${this.name}:${this.chainId}`, i3 = this.httpProviders[u3];
    if (typeof i3 > "u") throw new Error(`JSON-RPC provider for ${u3} not found`);
    return i3;
  }
  setHttpProvider(u3, i3) {
    const p7 = this.createHttpProvider(u3, i3);
    p7 && (this.httpProviders[u3] = p7);
  }
  createHttpProvider(u3, i3) {
    const p7 = i3 || En3(u3, this.namespace, this.client.core.projectId);
    return typeof p7 > "u" ? void 0 : new JsonRpcProvider2(new f2(p7, J5("disableProviderPing")));
  }
};
var ev = Object.defineProperty;
var rv = Object.defineProperties;
var iv = Object.getOwnPropertyDescriptors;
var Ra = Object.getOwnPropertySymbols;
var sv = Object.prototype.hasOwnProperty;
var uv = Object.prototype.propertyIsEnumerable;
var ba = (C4, u3, i3) => u3 in C4 ? ev(C4, u3, { enumerable: true, configurable: true, writable: true, value: i3 }) : C4[u3] = i3;
var cr2 = (C4, u3) => {
  for (var i3 in u3 || (u3 = {})) sv.call(u3, i3) && ba(C4, i3, u3[i3]);
  if (Ra) for (var i3 of Ra(u3)) uv.call(u3, i3) && ba(C4, i3, u3[i3]);
  return C4;
};
var Fi2 = (C4, u3) => rv(C4, iv(u3));
var hr2 = class _hr {
  constructor(u3) {
    this.events = new import_events9.default(), this.rpcProviders = {}, this.shouldAbortPairingAttempt = false, this.maxPairingAttempts = 10, this.disableProviderPing = false, this.providerOpts = u3, this.logger = typeof (u3 == null ? void 0 : u3.logger) < "u" && typeof (u3 == null ? void 0 : u3.logger) != "string" ? u3.logger : (0, import_pino2.default)(k2({ level: (u3 == null ? void 0 : u3.logger) || Ca })), this.disableProviderPing = (u3 == null ? void 0 : u3.disableProviderPing) || false;
  }
  static async init(u3) {
    const i3 = new _hr(u3);
    return await i3.initialize(), i3;
  }
  async request(u3, i3) {
    const [p7, I2] = this.validateChain(i3);
    if (!this.session) throw new Error("Please call connect() before request()");
    return await this.getProvider(p7).request({ request: cr2({}, u3), chainId: `${p7}:${I2}`, topic: this.session.topic });
  }
  sendAsync(u3, i3, p7) {
    this.request(u3, p7).then((I2) => i3(null, I2)).catch((I2) => i3(I2, void 0));
  }
  async enable() {
    if (!this.client) throw new Error("Sign Client not initialized");
    return this.session || await this.connect({ namespaces: this.namespaces, optionalNamespaces: this.optionalNamespaces, sessionProperties: this.sessionProperties }), await this.requestAccounts();
  }
  async disconnect() {
    var u3;
    if (!this.session) throw new Error("Please call connect() before enable()");
    await this.client.disconnect({ topic: (u3 = this.session) == null ? void 0 : u3.topic, reason: A("USER_DISCONNECTED") }), await this.cleanup();
  }
  async connect(u3) {
    if (!this.client) throw new Error("Sign Client not initialized");
    if (this.setNamespaces(u3), await this.cleanupPendingPairings(), !u3.skipPairing) return await this.pair(u3.pairingTopic);
  }
  on(u3, i3) {
    this.events.on(u3, i3);
  }
  once(u3, i3) {
    this.events.once(u3, i3);
  }
  removeListener(u3, i3) {
    this.events.removeListener(u3, i3);
  }
  off(u3, i3) {
    this.events.off(u3, i3);
  }
  get isWalletConnect() {
    return true;
  }
  async pair(u3) {
    this.shouldAbortPairingAttempt = false;
    let i3 = 0;
    do {
      if (this.shouldAbortPairingAttempt) throw new Error("Pairing aborted");
      if (i3 >= this.maxPairingAttempts) throw new Error("Max auto pairing attempts reached");
      const { uri: p7, approval: I2 } = await this.client.connect({ pairingTopic: u3, requiredNamespaces: this.namespaces, optionalNamespaces: this.optionalNamespaces, sessionProperties: this.sessionProperties });
      p7 && (this.uri = p7, this.events.emit("display_uri", p7)), await I2().then((D4) => {
        this.session = D4, this.namespaces || (this.namespaces = Jg(D4.namespaces), this.persist("namespaces", this.namespaces));
      }).catch((D4) => {
        if (D4.message !== re) throw D4;
        i3++;
      });
    } while (!this.session);
    return this.onConnect(), this.session;
  }
  setDefaultChain(u3, i3) {
    try {
      if (!this.session) return;
      const [p7, I2] = this.validateChain(u3);
      this.getProvider(p7).setDefaultChain(I2, i3);
    } catch (p7) {
      if (!/Please call connect/.test(p7.message)) throw p7;
    }
  }
  async cleanupPendingPairings(u3 = {}) {
    this.logger.info("Cleaning up inactive pairings...");
    const i3 = this.client.pairing.getAll();
    if (C2(i3)) {
      for (const p7 of i3) u3.deletePairings ? this.client.core.expirer.set(p7.topic, 0) : await this.client.core.relayer.subscriber.unsubscribe(p7.topic);
      this.logger.info(`Inactive pairings cleared: ${i3.length}`);
    }
  }
  abortPairingAttempt() {
    this.shouldAbortPairingAttempt = true;
  }
  async checkStorage() {
    if (this.namespaces = await this.getFromStore("namespaces"), this.optionalNamespaces = await this.getFromStore("optionalNamespaces") || {}, this.client.session.length) {
      const u3 = this.client.session.keys.length - 1;
      this.session = this.client.session.get(this.client.session.keys[u3]), this.createProviders();
    }
  }
  async initialize() {
    this.logger.trace("Initialized"), await this.createClient(), await this.checkStorage(), this.registerEventListeners();
  }
  async createClient() {
    this.client = this.providerOpts.client || await U4.init({ logger: this.providerOpts.logger || Ca, relayUrl: this.providerOpts.relayUrl || Hg, projectId: this.providerOpts.projectId, metadata: this.providerOpts.metadata, storageOptions: this.providerOpts.storageOptions, storage: this.providerOpts.storage, name: this.providerOpts.name }), this.logger.trace("SignClient Initialized");
  }
  createProviders() {
    if (!this.client) throw new Error("Sign Client not initialized");
    if (!this.session) throw new Error("Session not initialized. Please call connect() before enable()");
    const u3 = [...new Set(Object.keys(this.session.namespaces).map((i3) => Ze(i3)))];
    Wi2("client", this.client), Wi2("events", this.events), Wi2("disableProviderPing", this.disableProviderPing), u3.forEach((i3) => {
      if (!this.session) return;
      const p7 = Kg(i3, this.session), I2 = ya(p7), D4 = Yg(this.namespaces, this.optionalNamespaces), F = Fi2(cr2({}, D4[i3]), { accounts: p7, chains: I2 });
      switch (i3) {
        case "eip155":
          this.rpcProviders[i3] = new Qg({ namespace: F });
          break;
        case "solana":
          this.rpcProviders[i3] = new Vg({ namespace: F });
          break;
        case "cosmos":
          this.rpcProviders[i3] = new kg({ namespace: F });
          break;
        case "polkadot":
          this.rpcProviders[i3] = new Xg({ namespace: F });
          break;
        case "cip34":
          this.rpcProviders[i3] = new jg({ namespace: F });
          break;
        case "elrond":
          this.rpcProviders[i3] = new nv({ namespace: F });
          break;
        case "multiversx":
          this.rpcProviders[i3] = new tv({ namespace: F });
          break;
      }
    });
  }
  registerEventListeners() {
    if (typeof this.client > "u") throw new Error("Sign Client is not initialized");
    this.client.on("session_ping", (u3) => {
      this.events.emit("session_ping", u3);
    }), this.client.on("session_event", (u3) => {
      const { params: i3 } = u3, { event: p7 } = i3;
      if (p7.name === "accountsChanged") {
        const I2 = p7.data;
        I2 && C2(I2) && this.events.emit("accountsChanged", I2.map(Zg));
      } else p7.name === "chainChanged" ? this.onChainChanged(i3.chainId) : this.events.emit(p7.name, p7.data);
      this.events.emit("session_event", u3);
    }), this.client.on("session_update", ({ topic: u3, params: i3 }) => {
      var p7;
      const { namespaces: I2 } = i3, D4 = (p7 = this.client) == null ? void 0 : p7.session.get(u3);
      this.session = Fi2(cr2({}, D4), { namespaces: I2 }), this.onSessionUpdate(), this.events.emit("session_update", { topic: u3, params: i3 });
    }), this.client.on("session_delete", async (u3) => {
      await this.cleanup(), this.events.emit("session_delete", u3), this.events.emit("disconnect", Fi2(cr2({}, A("USER_DISCONNECTED")), { data: u3.topic }));
    }), this.on(ot3.DEFAULT_CHAIN_CHANGED, (u3) => {
      this.onChainChanged(u3, true);
    });
  }
  getProvider(u3) {
    if (!this.rpcProviders[u3]) throw new Error(`Provider not found: ${u3}`);
    return this.rpcProviders[u3];
  }
  onSessionUpdate() {
    Object.keys(this.rpcProviders).forEach((u3) => {
      var i3;
      this.getProvider(u3).updateNamespace((i3 = this.session) == null ? void 0 : i3.namespaces[u3]);
    });
  }
  setNamespaces(u3) {
    const { namespaces: i3, optionalNamespaces: p7, sessionProperties: I2 } = u3;
    i3 && Object.keys(i3).length && (this.namespaces = i3), p7 && Object.keys(p7).length && (this.optionalNamespaces = p7), this.sessionProperties = I2, this.persist("namespaces", i3), this.persist("optionalNamespaces", p7);
  }
  validateChain(u3) {
    const [i3, p7] = (u3 == null ? void 0 : u3.split(":")) || ["", ""];
    if (!this.namespaces || !Object.keys(this.namespaces).length) return [i3, p7];
    if (i3 && !Object.keys(this.namespaces || {}).map((F) => Ze(F)).includes(i3)) throw new Error(`Namespace '${i3}' is not configured. Please call connect() first with namespace config.`);
    if (i3 && p7) return [i3, p7];
    const I2 = Ze(Object.keys(this.namespaces)[0]), D4 = this.rpcProviders[I2].getDefaultChain();
    return [I2, D4];
  }
  async requestAccounts() {
    const [u3] = this.validateChain();
    return await this.getProvider(u3).requestAccounts();
  }
  onChainChanged(u3, i3 = false) {
    var p7;
    if (!this.namespaces) return;
    const [I2, D4] = this.validateChain(u3);
    i3 || this.getProvider(I2).setDefaultChain(D4), ((p7 = this.namespaces[I2]) != null ? p7 : this.namespaces[`${I2}:${D4}`]).defaultChain = D4, this.persist("namespaces", this.namespaces), this.events.emit("chainChanged", D4);
  }
  onConnect() {
    this.createProviders(), this.events.emit("connect", { session: this.session });
  }
  async cleanup() {
    this.session = void 0, this.namespaces = void 0, this.optionalNamespaces = void 0, this.sessionProperties = void 0, this.persist("namespaces", void 0), this.persist("optionalNamespaces", void 0), this.persist("sessionProperties", void 0), await this.cleanupPendingPairings({ deletePairings: true });
  }
  persist(u3, i3) {
    this.client.core.storage.setItem(`${Ia}/${u3}`, i3);
  }
  async getFromStore(u3) {
    return await this.client.core.storage.getItem(`${Ia}/${u3}`);
  }
};
var av = hr2;

// node_modules/@walletconnect/ethereum-provider/dist/index.es.js
var P4 = "wc";
var S4 = "ethereum_provider";
var $4 = `${P4}@2:${S4}:`;
var j6 = "https://rpc.walletconnect.com/v1/";
var u2 = ["eth_sendTransaction", "personal_sign"];
var E5 = ["eth_accounts", "eth_requestAccounts", "eth_sendRawTransaction", "eth_sign", "eth_signTransaction", "eth_signTypedData", "eth_signTypedData_v3", "eth_signTypedData_v4", "wallet_switchEthereumChain", "wallet_addEthereumChain", "wallet_getPermissions", "wallet_requestPermissions", "wallet_registerOnboarding", "wallet_watchAsset", "wallet_scanQRCode"];
var m3 = ["chainChanged", "accountsChanged"];
var _4 = ["message", "disconnect", "connect"];
var N13 = Object.defineProperty;
var q2 = Object.defineProperties;
var D3 = Object.getOwnPropertyDescriptors;
var y5 = Object.getOwnPropertySymbols;
var U5 = Object.prototype.hasOwnProperty;
var Q3 = Object.prototype.propertyIsEnumerable;
var O6 = (a2, t, s2) => t in a2 ? N13(a2, t, { enumerable: true, configurable: true, writable: true, value: s2 }) : a2[t] = s2;
var p6 = (a2, t) => {
  for (var s2 in t || (t = {})) U5.call(t, s2) && O6(a2, s2, t[s2]);
  if (y5) for (var s2 of y5(t)) Q3.call(t, s2) && O6(a2, s2, t[s2]);
  return a2;
};
var M5 = (a2, t) => q2(a2, D3(t));
function g5(a2) {
  return Number(a2[0].split(":")[1]);
}
function f3(a2) {
  return `0x${a2.toString(16)}`;
}
function L4(a2) {
  const { chains: t, optionalChains: s2, methods: i3, optionalMethods: n4, events: e2, optionalEvents: h4, rpcMap: c5 } = a2;
  if (!C2(t)) throw new Error("Invalid chains");
  const o3 = { chains: t, methods: i3 || u2, events: e2 || m3, rpcMap: p6({}, t.length ? { [g5(t)]: c5[g5(t)] } : {}) }, r2 = e2 == null ? void 0 : e2.filter((l4) => !m3.includes(l4)), d3 = i3 == null ? void 0 : i3.filter((l4) => !u2.includes(l4));
  if (!s2 && !h4 && !n4 && !(r2 != null && r2.length) && !(d3 != null && d3.length)) return { required: t.length ? o3 : void 0 };
  const C4 = (r2 == null ? void 0 : r2.length) && (d3 == null ? void 0 : d3.length) || !s2, I2 = { chains: [...new Set(C4 ? o3.chains.concat(s2 || []) : s2)], methods: [...new Set(o3.methods.concat(n4 != null && n4.length ? n4 : E5))], events: [...new Set(o3.events.concat(h4 || _4))], rpcMap: c5 };
  return { required: t.length ? o3 : void 0, optional: s2.length ? I2 : void 0 };
}
var v3 = class _v {
  constructor() {
    this.events = new import_events10.EventEmitter(), this.namespace = "eip155", this.accounts = [], this.chainId = 1, this.STORAGE_KEY = $4, this.on = (t, s2) => (this.events.on(t, s2), this), this.once = (t, s2) => (this.events.once(t, s2), this), this.removeListener = (t, s2) => (this.events.removeListener(t, s2), this), this.off = (t, s2) => (this.events.off(t, s2), this), this.parseAccount = (t) => this.isCompatibleChainId(t) ? this.parseAccountId(t).address : t, this.signer = {}, this.rpc = {};
  }
  static async init(t) {
    const s2 = new _v();
    return await s2.initialize(t), s2;
  }
  async request(t) {
    return await this.signer.request(t, this.formatChainId(this.chainId));
  }
  sendAsync(t, s2) {
    this.signer.sendAsync(t, s2, this.formatChainId(this.chainId));
  }
  get connected() {
    return this.signer.client ? this.signer.client.core.relayer.connected : false;
  }
  get connecting() {
    return this.signer.client ? this.signer.client.core.relayer.connecting : false;
  }
  async enable() {
    return this.session || await this.connect(), await this.request({ method: "eth_requestAccounts" });
  }
  async connect(t) {
    if (!this.signer.client) throw new Error("Provider not initialized. Call init() first");
    this.loadConnectOpts(t);
    const { required: s2, optional: i3 } = L4(this.rpc);
    try {
      const n4 = await new Promise(async (h4, c5) => {
        var o3;
        this.rpc.showQrModal && ((o3 = this.modal) == null || o3.subscribeModal((r2) => {
          !r2.open && !this.signer.session && (this.signer.abortPairingAttempt(), c5(new Error("Connection request reset. Please try again.")));
        })), await this.signer.connect(M5(p6({ namespaces: p6({}, s2 && { [this.namespace]: s2 }) }, i3 && { optionalNamespaces: { [this.namespace]: i3 } }), { pairingTopic: t == null ? void 0 : t.pairingTopic })).then((r2) => {
          h4(r2);
        }).catch((r2) => {
          c5(new Error(r2.message));
        });
      });
      if (!n4) return;
      this.setChainIds(this.rpc.chains);
      const e2 = On(n4.namespaces, [this.namespace]);
      this.setAccounts(e2), this.events.emit("connect", { chainId: f3(this.chainId) });
    } catch (n4) {
      throw this.signer.logger.error(n4), n4;
    } finally {
      this.modal && this.modal.closeModal();
    }
  }
  async disconnect() {
    this.session && await this.signer.disconnect(), this.reset();
  }
  get isWalletConnect() {
    return true;
  }
  get session() {
    return this.signer.session;
  }
  registerEventListeners() {
    this.signer.on("session_event", (t) => {
      const { params: s2 } = t, { event: i3 } = s2;
      i3.name === "accountsChanged" ? (this.accounts = this.parseAccounts(i3.data), this.events.emit("accountsChanged", this.accounts)) : i3.name === "chainChanged" ? this.setChainId(this.formatChainId(i3.data)) : this.events.emit(i3.name, i3.data), this.events.emit("session_event", t);
    }), this.signer.on("chainChanged", (t) => {
      const s2 = parseInt(t);
      this.chainId = s2, this.events.emit("chainChanged", f3(this.chainId)), this.persist();
    }), this.signer.on("session_update", (t) => {
      this.events.emit("session_update", t);
    }), this.signer.on("session_delete", (t) => {
      this.reset(), this.events.emit("session_delete", t), this.events.emit("disconnect", M5(p6({}, A("USER_DISCONNECTED")), { data: t.topic, name: "USER_DISCONNECTED" }));
    }), this.signer.on("display_uri", (t) => {
      var s2, i3;
      this.rpc.showQrModal && ((s2 = this.modal) == null || s2.closeModal(), (i3 = this.modal) == null || i3.openModal({ uri: t })), this.events.emit("display_uri", t);
    });
  }
  switchEthereumChain(t) {
    this.request({ method: "wallet_switchEthereumChain", params: [{ chainId: t.toString(16) }] });
  }
  isCompatibleChainId(t) {
    return typeof t == "string" ? t.startsWith(`${this.namespace}:`) : false;
  }
  formatChainId(t) {
    return `${this.namespace}:${t}`;
  }
  parseChainId(t) {
    return Number(t.split(":")[1]);
  }
  setChainIds(t) {
    const s2 = t.filter((i3) => this.isCompatibleChainId(i3)).map((i3) => this.parseChainId(i3));
    s2.length && (this.chainId = s2[0], this.events.emit("chainChanged", f3(this.chainId)), this.persist());
  }
  setChainId(t) {
    if (this.isCompatibleChainId(t)) {
      const s2 = this.parseChainId(t);
      this.chainId = s2, this.switchEthereumChain(s2);
    }
  }
  parseAccountId(t) {
    const [s2, i3, n4] = t.split(":");
    return { chainId: `${s2}:${i3}`, address: n4 };
  }
  setAccounts(t) {
    this.accounts = t.filter((s2) => this.parseChainId(this.parseAccountId(s2).chainId) === this.chainId).map((s2) => this.parseAccountId(s2).address), this.events.emit("accountsChanged", this.accounts);
  }
  getRpcConfig(t) {
    var s2, i3;
    const n4 = (s2 = t == null ? void 0 : t.chains) != null ? s2 : [], e2 = (i3 = t == null ? void 0 : t.optionalChains) != null ? i3 : [], h4 = n4.concat(e2);
    if (!h4.length) throw new Error("No chains specified in either `chains` or `optionalChains`");
    const c5 = n4.length ? (t == null ? void 0 : t.methods) || u2 : [], o3 = n4.length ? (t == null ? void 0 : t.events) || m3 : [], r2 = (t == null ? void 0 : t.optionalMethods) || [], d3 = (t == null ? void 0 : t.optionalEvents) || [], C4 = (t == null ? void 0 : t.rpcMap) || this.buildRpcMap(h4, t.projectId), I2 = (t == null ? void 0 : t.qrModalOptions) || void 0;
    return { chains: n4 == null ? void 0 : n4.map((l4) => this.formatChainId(l4)), optionalChains: e2.map((l4) => this.formatChainId(l4)), methods: c5, events: o3, optionalMethods: r2, optionalEvents: d3, rpcMap: C4, showQrModal: !!(t != null && t.showQrModal), qrModalOptions: I2, projectId: t.projectId, metadata: t.metadata };
  }
  buildRpcMap(t, s2) {
    const i3 = {};
    return t.forEach((n4) => {
      i3[n4] = this.getRpcUrl(n4, s2);
    }), i3;
  }
  async initialize(t) {
    if (this.rpc = this.getRpcConfig(t), this.chainId = this.rpc.chains.length ? g5(this.rpc.chains) : g5(this.rpc.optionalChains), this.signer = await av.init({ projectId: this.rpc.projectId, metadata: this.rpc.metadata, disableProviderPing: t.disableProviderPing, relayUrl: t.relayUrl, storageOptions: t.storageOptions }), this.registerEventListeners(), await this.loadPersistedSession(), this.rpc.showQrModal) {
      let s2;
      try {
        const { WalletConnectModal: i3 } = await import("./dist-4RL65IDY.js");
        s2 = i3;
      } catch {
        throw new Error("To use QR modal, please install @walletconnect/modal package");
      }
      if (s2) try {
        this.modal = new s2(p6({ walletConnectVersion: 2, projectId: this.rpc.projectId, standaloneChains: this.rpc.chains }, this.rpc.qrModalOptions));
      } catch (i3) {
        throw this.signer.logger.error(i3), new Error("Could not generate WalletConnectModal Instance");
      }
    }
  }
  loadConnectOpts(t) {
    if (!t) return;
    const { chains: s2, optionalChains: i3, rpcMap: n4 } = t;
    s2 && C2(s2) && (this.rpc.chains = s2.map((e2) => this.formatChainId(e2)), s2.forEach((e2) => {
      this.rpc.rpcMap[e2] = (n4 == null ? void 0 : n4[e2]) || this.getRpcUrl(e2);
    })), i3 && C2(i3) && (this.rpc.optionalChains = [], this.rpc.optionalChains = i3 == null ? void 0 : i3.map((e2) => this.formatChainId(e2)), i3.forEach((e2) => {
      this.rpc.rpcMap[e2] = (n4 == null ? void 0 : n4[e2]) || this.getRpcUrl(e2);
    }));
  }
  getRpcUrl(t, s2) {
    var i3;
    return ((i3 = this.rpc.rpcMap) == null ? void 0 : i3[t]) || `${j6}?chainId=eip155:${t}&projectId=${s2 || this.rpc.projectId}`;
  }
  async loadPersistedSession() {
    if (!this.session) return;
    const t = await this.signer.client.core.storage.getItem(`${this.STORAGE_KEY}/chainId`), s2 = this.session.namespaces[`${this.namespace}:${t}`] ? this.session.namespaces[`${this.namespace}:${t}`] : this.session.namespaces[this.namespace];
    this.setChainIds(t ? [this.formatChainId(t)] : s2 == null ? void 0 : s2.accounts), this.setAccounts(s2 == null ? void 0 : s2.accounts);
  }
  reset() {
    this.chainId = 1, this.accounts = [];
  }
  persist() {
    this.session && this.signer.client.core.storage.setItem(`${this.STORAGE_KEY}/chainId`, this.chainId);
  }
  parseAccounts(t) {
    return typeof t == "string" || t instanceof String ? [this.parseAccount(t)] : t.map((s2) => this.parseAccount(s2));
  }
};
var G4 = v3;
export {
  G4 as EthereumProvider,
  _4 as OPTIONAL_EVENTS,
  E5 as OPTIONAL_METHODS,
  m3 as REQUIRED_EVENTS,
  u2 as REQUIRED_METHODS,
  v3 as default
};
/*! Bundled license information:

tslib/tslib.es6.js:
  (*! *****************************************************************************
  Copyright (c) Microsoft Corporation.
  
  Permission to use, copy, modify, and/or distribute this software for any
  purpose with or without fee is hereby granted.
  
  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH
  REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY
  AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,
  INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM
  LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR
  OTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR
  PERFORMANCE OF THIS SOFTWARE.
  ***************************************************************************** *)

@walletconnect/relay-auth/dist/index.es.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
  (*! noble-curves - MIT License (c) 2022 Paul Miller (paulmillr.com) *)

@walletconnect/universal-provider/dist/index.es.js:
  (**
  * @license
  * Lodash <https://lodash.com/>
  * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>
  * Released under MIT license <https://lodash.com/license>
  * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>
  * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors
  *)
*/
//# sourceMappingURL=@walletconnect_ethereum-provider.js.map
